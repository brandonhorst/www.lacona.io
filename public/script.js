(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var demoConfig = exports.demoConfig = {
  config: {
    webSearch: {
      searchEngines: [{ name: 'Google', url: 'https://www.google.com/search?q={0}' }, { name: 'Yahoo', url: 'https://search.yahoo.com/search?p={0}' }, { name: 'Bing', url: 'https://www.bing.com/search?q={0}' }, { name: 'Amazon', url: '' }, { name: 'Ebay', url: '' }, { name: 'Wikipedia', url: '' }, { name: 'DuckDuckGo', url: '' }]
    },
    applications: {
      searchDirectories: [],
      applications: []
    }
  }
};

var demoData = exports.demoData = {
  music: [{ name: 'I\'m Good',
    artist: 'The Mowgli\'s',
    album: 'I\'m Good',
    genre: 'Pop' }, { name: 'Baby Love',
    artist: 'Petite Meller',
    album: 'Baby Love',
    genre: 'Pop' }, { name: 'T-Shirt Weather',
    artist: 'Circa Waves',
    album: 'T-Shirt Weather',
    genre: 'Pop' }, { name: 'Fade Out Lines - The Avener Rework',
    artist: 'The Avener & Phoebe Killdeer',
    album: 'Fade Out Lines',
    genre: 'Pop' }, { name: 'Salt',
    artist: 'Bad Suns',
    album: 'Language & Perspective',
    genre: 'Pop' }, { name: 'Ship To Wreck',
    artist: 'Florence + The Machine',
    album: 'Ship To Wreck',
    genre: 'Pop' }, { name: 'Couch Potato',
    artist: 'Shortstraw',
    album: 'Good Morning, Sunshine',
    genre: 'Pop' }, { name: 'Good Day',
    artist: 'distant cousins',
    album: 'Good Day',
    genre: 'Pop' }, { name: 'Ex\'s & Oh\'s',
    artist: 'Elle King',
    album: 'Love Stuff',
    genre: 'Pop' }, { name: 'Irresistible',
    artist: 'Fall Out Boy',
    album: 'American Beauty/American Psycho',
    genre: 'Pop' }, { name: 'Centuries',
    artist: 'Fall Out Boy',
    album: 'American Beauty/American Psycho',
    genre: 'Pop' }, { name: 'Light Me Up',
    artist: 'Flyte',
    album: 'Light Me Up',
    genre: 'Pop' }, { name: 'Violins',
    artist: 'I\'m From Barcelona',
    album: 'Violins',
    genre: 'Pop' }, { name: 'I Bet My Life',
    artist: 'Imagine Dragons',
    album: 'Smoke + Mirrors (Deluxe)',
    genre: 'Pop' }, { name: 'RIVA (Restart the Game) - Radio Edit',
    artist: 'Klingande',
    album: 'RIVA (Restart The Game) [Radio Edit]',
    genre: 'Pop' }, { name: 'Lean On (feat. MØ & DJ Snake)',
    artist: 'Major Lazer',
    album: 'Lean On (feat. MØ & DJ Snake)',
    genre: 'Pop' }, { name: 'Got It',
    artist: 'Marian Hill',
    album: 'Sway',
    genre: 'Pop' }, { name: 'Can You Blame Me',
    artist: 'Matt and Kim',
    album: 'Can You Blame Me',
    genre: 'Pop' }, { name: 'Talk About You',
    artist: 'MIKA',
    album: 'Talk About You',
    genre: 'Pop' }, { name: 'Love Like Mine',
    artist: 'Miami Horror',
    album: 'Love Like Mine',
    genre: 'Pop' }, { name: 'Our Own House',
    artist: 'MisterWives',
    album: 'Our Own House',
    genre: 'Pop' }, { name: 'The Rhythm',
    artist: 'MNEK',
    album: 'The Rhythm',
    genre: 'Pop' }, { name: 'Magic (feat. Nile Rodgers and Brandy)',
    artist: 'Mystery Skulls',
    album: 'Forever',
    genre: 'Pop' }, { name: 'Never Gets Old',
    artist: 'Penguin Prison',
    album: 'Never Gets Old',
    genre: 'Pop' }, { name: 'Karaoke',
    artist: 'Smallpools',
    album: 'Karaoke',
    genre: 'Pop' }, { name: 'Robot Love',
    artist: 'Urban Cone',
    album: 'Robot Love',
    genre: 'Pop' }, { name: 'King',
    artist: 'Years & Years',
    album: 'King',
    genre: 'Pop' }, { name: 'So Cruel',
    artist: 'Young Empires',
    album: 'So Cruel',
    genre: 'Pop' }, { name: 'The Night Is Still Young',
    artist: 'Nicki Minaj',
    album: 'The Pinkprint',
    genre: 'Pop' }, { name: 'I Will Never Let You Down',
    artist: 'Rita Ora',
    album: 'I Will Never Let You Down',
    genre: 'Pop' }, { name: 'Never Been In Love (feat. Icona Pop)',
    artist: 'Cobra Starship',
    album: 'Never Been In Love (feat. Icona Pop)',
    genre: 'Pop' }, { name: 'What I did for Love (feat. Emeli Sandé)',
    artist: 'David Guetta',
    album: 'Listen (Deluxe)',
    genre: 'Pop' }, { name: 'Want To Want Me',
    artist: 'Jason Derulo',
    album: 'Want To Want Me',
    genre: 'Pop' }, { name: 'Iron Man',
    artist: 'Black Sabbath',
    album: 'Paranoid',
    genre: 'Metal' }, { name: 'Stronger',
    artist: 'Clean Bandit',
    album: 'New Eyes',
    genre: 'Rock' }, { name: 'Stole the Show',
    artist: 'Kygo',
    album: 'Stole the Show',
    genre: 'Jazz' }, { name: 'In Your Arms',
    artist: 'Nico & Vinz',
    album: 'Black Star Elephant',
    genre: 'Folk' }, { name: 'Intoxicated',
    artist: 'Martin Solveig',
    album: 'Intoxicated (Radio Edit)',
    genre: 'Indie' }, { name: 'Runaway (U & I)',
    artist: 'Galantis',
    album: 'Runaway (U & I)',
    genre: 'Pop' }, { name: 'Outside',
    artist: 'Calvin Harris',
    album: 'Motion',
    genre: 'Pop' }, { name: 'Crazy For You',
    artist: 'Hedley',
    album: 'Wild Life',
    genre: 'Pop' }, { name: 'Kathleen',
    artist: 'Catfish and the Bottlemen',
    album: 'The Balcony',
    genre: 'Pop' }, { name: 'Work This Body',
    artist: 'Walk the Moon',
    album: 'TALKING IS HARD',
    genre: 'Pop' }, { name: 'Seeing Stars',
    artist: 'BØRNS',
    album: 'Candy',
    genre: 'Pop' }, { name: 'If It\'s Not You',
    artist: 'Keljet',
    album: 'Keljet x AYER - If It\'s Not You',
    genre: 'Pop' }, { name: 'The Nights',
    artist: 'Avicii',
    album: 'The Days / Nights',
    genre: 'Pop' }, { name: 'Pay No Mind',
    artist: 'Madeon',
    album: 'Adventure (Deluxe)',
    genre: 'Pop' }, { name: 'Best Fake Smile',
    artist: 'James Bay',
    album: 'Chaos And The Calm',
    genre: 'Pop' }, { name: 'Savages',
    artist: 'Marina and The Diamonds',
    album: 'FROOT',
    genre: 'Pop' }, { name: 'Human Contact',
    artist: 'Catey Shaw',
    album: 'The Brooklyn EP',
    genre: 'Pop' }, { name: 'Hum Hum',
    artist: 'Mating Ritual',
    album: 'Hum Hum',
    genre: 'Pop' }, { name: 'Cold Cold Man',
    artist: 'Saint Motel',
    album: 'My Type EP',
    genre: 'Pop' }],
  contacts: [{
    firstName: 'Tony',
    lastName: 'Stark',
    nickName: 'Iron Man',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Tony Stark' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Tony Stark' } }]
  }, {
    firstName: 'Donald',
    lastName: 'Blake',
    nickName: 'Thor',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Donald Blake' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Donald Blake' } }]
  }, {
    firstName: 'Henry',
    lastName: 'Pym',
    nickName: 'Ant Man',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Henry Pym' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Henry Pym' } }]
  }, {
    firstName: 'Bruce',
    lastName: 'Banner',
    nickName: 'Hulk',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Bruce Banner' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Bruce Banner' } }]
  }, {
    firstName: 'Steve',
    lastName: 'Rogers',
    nickName: 'Captian America',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Steve Rogers' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Steve Rogers' } }]
  }, {
    firstName: 'Clinton',
    lastName: 'Barton',
    nickName: 'Hawkeye',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Clinton Barton' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Clinton Barton' } }]
  }, {
    firstName: 'Wanda',
    lastName: 'Maximoff',
    nickName: 'Scarlet Witch',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Wanda Maximoff' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Wanda Maximoff' } }]
  }, {
    firstName: 'Victor',
    lastName: 'Shade',
    nickName: 'Vision',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Victor Shade' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Victor Shade' } }]
  }, {
    firstName: 'Natalia',
    lastName: 'Romanova',
    nickName: 'Black Widow',
    emails: [{ label: 'mobile', value: { label: 'contact', value: 'Natalia Romanova' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Natalia Romanova' } }]
  }, {
    firstName: 'Jennifer',
    lastName: 'Walters',
    nickName: 'She-Hulk',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Jennifer Walters' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Jennifer Walters' } }]
  }, {
    firstName: 'Hank',
    lastName: 'McCoy',
    nickName: 'Beast',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Hank McCoy' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Hank McCoy' } }]
  }, {
    firstName: 'Peter',
    lastName: 'Quill',
    nickName: 'Starlord',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Peter Quill' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Peter Quill' } }]
  }, {
    firstName: 'Reed',
    lastName: 'Richards',
    nickName: 'Mr. Fantastic',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Reed Richards' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Reed Richards' } }]
  }, {
    firstName: 'Susan',
    lastName: 'Richards',
    nickName: 'Invisible Woman',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Susan Richards' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Susan Richards' } }]
  }, {
    firstName: 'Jim',
    lastName: 'Hammond',
    nickName: 'Human Torch',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Jim Hammond' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Jim Hammond' } }]
  }, {
    firstName: 'Benjamin',
    lastName: 'Grimm',
    nickName: 'Thing',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Benjamin Grimm' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Benjamin Grimm' } }]
  }, {
    firstName: 'Peter',
    lastName: 'Parker',
    nickName: 'Spiderman',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Peter Parker' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Peter Parker' } }]
  }, {
    firstName: 'Luke',
    lastName: 'Cage',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Luke Cage' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Luke Cage' } }]
  }, {
    firstName: 'Logan',
    lastName: 'Howlett',
    nickName: 'Wolverine',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Logan Howlett' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Logan Howlett' } }]
  }, {
    firstName: 'James',
    lastName: 'Barnes',
    nickName: 'Bucky',
    emails: [{ label: 'work', value: { label: 'contact', value: 'James Barnes' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'James Barnes' } }]
  }, {
    firstName: 'Steven',
    lastName: 'Strange',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Steven Strange' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Steven Strange' } }]
  }, {
    firstName: 'Matt',
    lastName: 'Murdock',
    nickName: 'Daredevil',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Matt Murdock' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Matt Murdock' } }]
  }, {
    firstName: 'Scott',
    lastName: 'Summers',
    nickName: 'Cyclops',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Scott Summers' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Scott Summers' } }]
  }, {
    firstName: 'Charles',
    lastName: 'Xavier',
    nickName: 'Professor X',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Charles Xavier' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Charles Xavier' } }]
  }, {
    firstName: 'Bobby',
    lastName: 'Drake',
    nickName: 'Iceman',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Bobby Drake' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Bobby Drake' } }]
  }, {
    firstName: 'Jean',
    lastName: 'Grey-Summers',
    nickName: 'Phoenix',
    emails: [{ label: 'work', work: { label: 'contact', value: 'Jean Grey-Summers' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Jean Grey-Summers' } }]
  }, {
    firstName: 'Kurt',
    lastName: 'Wagner',
    nickName: 'Nightcrawler',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Kurt Wagner' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Kurt Wagner' } }]
  }, {
    firstName: 'Ororo',
    lastName: 'Monroe',
    nickName: 'Storm',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Ororo Monroe' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Ororo Monroe' } }]
  }, {
    firstName: 'Anna',
    lastName: 'Marie',
    nickName: 'Rogue',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Anna Marie' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Anna Marie' } }]
  }, {
    firstName: 'Erik',
    lastName: 'Lehnsherr',
    nickName: 'Magneto',
    emails: [{ label: 'work', value: { label: 'contact', value: 'Erik Lehnsherr' } }],
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
    phoneNumbers: [{ label: 'mobile', value: { label: 'contact', value: 'Erik Lehnsherr' } }]
  }],
  userContact: {
    dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }, { label: '_$!<Anniversary>!$_', value: { month: 9, day: 11 } }],
    relationships: [{
      label: '_$!<Mother>!$_',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your mother' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your mother' } }]
      }
    }, {
      label: '_$!<Brother>!$_',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your brother' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your brother' } }]
      }
    }, {
      label: 'husband',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your husband' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your husband' } }]
      }
    }, {
      label: 'wife',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your wife' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your wife' } }]
      }
    }, {
      label: '_$!<Father>!$_',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your father' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your father' } }]
      }
    }, {
      label: '_$!<Partner>!$_',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your partner' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your partner' } }]
      }
    }, {
      label: '_$!<Sister>!$_',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your sister' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your sister' } }]
      }
    }, {
      label: '_$!<Assistant>!$_',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your assistant' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your assistant' } }]
      }
    }, {
      label: '_$!<Manager>!$_',
      value: {
        phoneNumbers: [{ label: 'mobile', value: { label: 'relationship', value: 'your manager' } }],
        dates: [{ label: '_$!<Birthday>!$_', value: { month: 9, day: 11 } }],
        emails: [{ label: 'work', value: { label: 'relationship', value: 'your manager' } }]
      }
    }]
  },
  volumes: [{ name: 'Lacona.dmg', canEject: true, canOpen: true, path: 'Lacona.dmg' }, { name: 'Alfred.dmg', canEject: true, canOpen: true, path: 'Alfred.dmg' }, { name: 'CD Drive', canEject: true, canOpen: true, path: 'CD Drive' }],
  usHolidays: [{ text: 'New Years Day', value: new Date(2016, 0, 1) }, { text: 'Martin Luther King Jr. Day', value: new Date(2016, 0, 18) }, { text: 'Martin Luther King Day', value: new Date(2016, 0, 18) }, { text: 'Dr. Martin Luther King Jr. Day', value: new Date(2016, 0, 18) }, { text: 'Dr. Martin Luther King Day', value: new Date(2016, 0, 18) }, { text: 'Valentines Day', value: new Date(2016, 1, 14) }, { text: "Washington's Birthday", value: new Date(2016, 1, 15) }, { text: 'Presidents Day', value: new Date(2016, 1, 15) }, { text: 'Memorial Day', value: new Date(2016, 4, 30) }, { text: 'Independence Day', value: new Date(2016, 6, 4) }, { text: 'The Fourth of July', value: new Date(2016, 6, 4) }, { text: 'Labor Day', value: new Date(2015, 8, 7) }, { text: 'Columbus Day', value: new Date(2015, 9, 12) }, { text: 'Christopher Columbus Day', value: new Date(2015, 9, 12) }, { text: 'American Indian Day', value: new Date(2015, 9, 12) }, { text: 'Native American Day', value: new Date(2015, 9, 12) }, { text: "Indigenous People's Day ", value: new Date(2015, 9, 12) }, { text: 'Veterans Day', value: new Date(2015, 10, 11) }, { text: 'Thanksgiving Day', value: new Date(2015, 10, 26) }, { text: 'Christmas Eve', value: new Date(2015, 11, 24) }, { text: 'Christmas Day', value: new Date(2015, 11, 25) }, { text: 'New Years Eve', value: new Date(2015, 11, 31) }],
  applications: [{ name: 'Calendar' }, { name: 'Contacts' }, { name: 'FaceTime' }, { name: 'Finder' }, { name: 'Game Center' }, { name: 'GarageBand' }, { name: 'iBooks' }, { name: 'iMovie' }, { name: 'iPhoto' }, { name: 'iTunes' }, { name: 'Keynote' }, { name: 'App Store' }, { name: 'Mail' }, { name: 'Maps' }, { name: 'Messages' }, { name: 'Notes' }, { name: 'Numbers' }, { name: 'Pages' }, { name: 'Photo Booth' }, { name: 'Reminders' }, { name: 'Safari' }, { name: 'Google Chrome' }, { name: 'Firefox' }, { name: 'Automator' }, { name: 'Calculator' }, { name: 'Chess' }, { name: 'Dictionary' }, { name: 'DVD Player' }, { name: 'Font Book' }, { name: 'Image Capture' }, { name: 'Preview' }, { name: 'QuickTime Player' }, { name: 'Stickies' }, { name: 'System Information' }, { name: 'TextEdit' }, { name: 'VoiceOver Utility' }],
  bookmarks: [{ name: 'Facebook', url: 'http://facebook.com' }, { name: 'Twitter', url: 'http://twitter.com' }, { name: 'Google', url: 'http://google.com' }, { name: 'Lifehacker', url: 'http://lifehacker.com' }, { name: 'xkcd', url: 'http://xkcd.com' }, { name: 'Github', url: 'http://github.com' }, { name: 'Gmail', url: 'http://gmail.com' }, { name: 'Youtube', url: 'http://youtube.com' }, { name: 'Wikipedia', url: 'http://wikipedia.org' }, { name: 'Ebay', url: 'http://ebay.com' }],
  preferencePanes: [{ name: 'Displays', path: 'Displays' }, { name: 'Desktop & Screen Saver', path: 'Desktop & Screen Saver' }, { name: 'Extensions', path: 'Extensions' }, { name: 'Energy Saver', path: 'Energy Saver' }, { name: 'Sound', path: 'Sound' }, { name: 'Keyboard', path: 'Keyboard' }, { name: 'Internet Accounts', path: 'Internet Accounts' }, { name: 'Date & Time', path: 'Date & Time' }, { name: 'Accessibility', path: 'Accessibility' }, { name: 'Security & Privacy', path: 'Security & Privacy' }, { name: 'Dock', path: 'Dock' }, { name: 'Profiles', path: 'Profiles' }, { name: 'Network', path: 'Network' }, { name: 'Notifications', path: 'Notifications' }, { name: 'Fibre Channel', path: 'Fibre Channel' }, { name: 'App Store', path: 'App Store' }, { name: 'Time Machine', path: 'Time Machine' }, { name: 'General', path: 'General' }, { name: 'Dictation & Speech', path: 'Dictation & Speech' }, { name: 'Spotlight', path: 'Spotlight' }, { name: 'Ink', path: 'Ink' }, { name: 'Language & Region', path: 'Language & Region' }, { name: 'CDs & DVDs', path: 'CDs & DVDs' }, { name: 'Sharing', path: 'Sharing' }, { name: 'Users & Groups', path: 'Users & Groups' }, { name: 'Bluetooth', path: 'Bluetooth' }, { name: 'Mouse', path: 'Mouse' }, { name: 'Trackpad', path: 'Trackpad' }, { name: 'Mission Control', path: 'Mission Control' }, { name: 'Startup Disk', path: 'Startup Disk' }, { name: 'Parental Controls', path: 'Parental Controls' }, { name: 'Printers & Scanners', path: 'Printers & Scanners' }, { name: 'iCloud', path: 'iCloud' }],
  spotlightFiles: [{ path: '/Users/LaconaUser/Documents/log.csv' }, { path: '/Users/LaconaUser/Documents/lacona-logo.png' }, { path: '/Users/LaconaUser/Documents/kickstarter-video.m4v' }, { path: '/Users/LaconaUser/Documents/document.docx' }, { path: '/Users/LaconaUser/Documents/my-document.docx' }, { path: '/Users/LaconaUser/Projects/test/main.js' }, { path: '/Users/LaconaUser/Projects/test/package.json' }, { path: '/Users/LaconaUser/Projects/test/lodash.js' }, { path: '/Users/LaconaUser/Projects/test/react-router.jsx' }, { path: '/Users/LaconaUser/Documents/Presentations/briefing 1_2.keynote' }, { path: '/Users/LaconaUser/Documents/Presentations/briefing 2_24.keynote' }, { path: '/Users/LaconaUser/Documents/Presentations/briefing 5_5.keynote' }, { path: '/Users/LaconaUser/status-updates.txt' }, { path: '/Users/LaconaUser/todo.txt' }, { path: '/Users/LaconaUser/Projects/cpp-test/main.cpp' }, { path: '/Users/LaconaUser/Projects/cpp-test/main.h' }, { path: '/Users/LaconaUser/Projects/cpp-test/quick-brown-fox.js' }, { path: '/Users/LaconaUser/Projects/cpp-test/overjumper.cs' }, { path: '/Users/LaconaUser/Projects/cpp-test/overjumper.h' }, { path: '/Users/LaconaUser/Projects/cpp-test/lazy_dog.js' }],
  rootFiles: { '/': [{ file: 'Applications', isDir: true }, { file: 'Library', isDir: true }, { file: 'Users', isDir: true }, { file: 'bin', isDir: true }, { file: 'etc', isDir: true }, { file: 'home', isDir: true }, { file: 'net', isDir: true }, { file: 'tmp', isDir: true }, { file: 'usr', isDir: true }, { file: 'var', isDir: true }],
    '/Applications/': [{ file: 'App Store.app', isDir: true }, { file: 'Atom.app', isDir: true }, { file: 'Automator.app', isDir: true }, { file: 'Calculator.app', isDir: true }, { file: 'Calendar.app', isDir: true }, { file: 'Chess.app', isDir: true }, { file: 'Contacts.app', isDir: true }, { file: 'DVD Player.app', isDir: true }, { file: 'Dash.app', isDir: true }, { file: 'Dashboard.app', isDir: true }, { file: 'Dictionary.app', isDir: true }, { file: 'FaceTime.app', isDir: true }, { file: 'Font Book.app', isDir: true }, { file: 'Game Center.app', isDir: true }, { file: 'GarageBand.app', isDir: true }, { file: 'GitHub.app', isDir: true }, { file: 'Google Chrome.app', isDir: true }, { file: 'Image Capture.app', isDir: true }, { file: 'Keynote.app', isDir: true }, { file: 'Launchpad.app', isDir: true }, { file: 'Mail.app', isDir: true }, { file: 'Maps.app', isDir: true }, { file: 'Messages.app', isDir: true }, { file: 'Mission Control.app', isDir: true }, { file: 'Notes.app', isDir: true }, { file: 'Numbers.app', isDir: true }, { file: 'Pages.app', isDir: true }, { file: 'Photo Booth.app', isDir: true }, { file: 'Photos.app', isDir: true }, { file: 'Preview.app', isDir: true }, { file: 'QuickTime Player.app', isDir: true }, { file: 'Reminders.app', isDir: true }, { file: 'Safari.app', isDir: true }, { file: 'Slack.app', isDir: true }, { file: 'Stickies.app', isDir: true }, { file: 'System Preferences.app', isDir: true }, { file: 'TextEdit.app', isDir: true }, { file: 'Time Machine.app', isDir: true }, { file: 'Utilities', isDir: true }, { file: 'Xcode.app', isDir: true }, { file: 'iBooks.app', isDir: true }, { file: 'iMovie.app', isDir: true }, { file: 'iPhoto.app', isDir: true }, { file: 'iTunes.app', isDir: true }],
    '/Applications/App Store.app/': [{ file: '...', isDir: false }],
    '/Applications/Atom.app/': [{ file: '...', isDir: false }],
    '/Applications/Automator.app/': [{ file: '...', isDir: false }],
    '/Applications/Calculator.app/': [{ file: '...', isDir: false }],
    '/Applications/Calendar.app/': [{ file: '...', isDir: false }],
    '/Applications/Chess.app/': [{ file: '...', isDir: false }],
    '/Applications/Contacts.app/': [{ file: '...', isDir: false }],
    '/Applications/DVD Player.app/': [{ file: '...', isDir: false }],
    '/Applications/Dash.app/': [{ file: '...', isDir: false }],
    '/Applications/Dashboard.app/': [{ file: '...', isDir: false }],
    '/Applications/Dictionary.app/': [{ file: '...', isDir: false }],
    '/Applications/FaceTime.app/': [{ file: '...', isDir: false }],
    '/Applications/Font Book.app/': [{ file: '...', isDir: false }],
    '/Applications/Game Center.app/': [{ file: '...', isDir: false }],
    '/Applications/GarageBand.app/': [{ file: '...', isDir: false }],
    '/Applications/GitHub.app/': [{ file: '...', isDir: false }],
    '/Applications/Google Chrome.app/': [{ file: '...', isDir: false }],
    '/Applications/Image Capture.app/': [{ file: '...', isDir: false }],
    '/Applications/Keynote.app/': [{ file: '...', isDir: false }],
    '/Applications/Launchpad.app/': [{ file: '...', isDir: false }],
    '/Applications/Mail.app/': [{ file: '...', isDir: false }],
    '/Applications/Maps.app/': [{ file: '...', isDir: false }],
    '/Applications/Messages.app/': [{ file: '...', isDir: false }],
    '/Applications/Mission Control.app/': [{ file: '...', isDir: false }],
    '/Applications/Notes.app/': [{ file: '...', isDir: false }],
    '/Applications/Numbers.app/': [{ file: '...', isDir: false }],
    '/Applications/Pages.app/': [{ file: '...', isDir: false }],
    '/Applications/Photo Booth.app/': [{ file: '...', isDir: false }],
    '/Applications/Photos.app/': [{ file: '...', isDir: false }],
    '/Applications/Preview.app/': [{ file: '...', isDir: false }],
    '/Applications/QuickTime Player.app/': [{ file: '...', isDir: false }],
    '/Applications/Reminders.app/': [{ file: '...', isDir: false }],
    '/Applications/Safari.app/': [{ file: '...', isDir: false }],
    '/Applications/Slack.app/': [{ file: '...', isDir: false }],
    '/Applications/Stickies.app/': [{ file: '...', isDir: false }],
    '/Applications/System Preferences.app/': [{ file: '...', isDir: false }],
    '/Applications/TextEdit.app/': [{ file: '...', isDir: false }],
    '/Applications/Time Machine.app/': [{ file: '...', isDir: false }],
    '/Applications/Utilities/': [{ file: '...', isDir: false }],
    '/Applications/Xcode.app/': [{ file: '...', isDir: false }],
    '/Applications/iBooks.app/': [{ file: '...', isDir: false }],
    '/Applications/iMovie.app/': [{ file: '...', isDir: false }],
    '/Applications/iPhoto.app/': [{ file: '...', isDir: false }],
    '/Applications/iTunes.app/': [{ file: '...', isDir: false }],
    '/Library/': [{ file: 'Application Support', isDir: true }, { file: 'Audio', isDir: true }, { file: 'Caches', isDir: true }, { file: 'ColorPickers', isDir: true }, { file: 'ColorSync', isDir: true }, { file: 'Components', isDir: true }, { file: 'Compositions', isDir: true }, { file: 'Contextual Menu Items', isDir: true }, { file: 'CoreMediaIO', isDir: true }, { file: 'Desktop Pictures', isDir: true }, { file: 'Developer', isDir: true }, { file: 'Dictionaries', isDir: true }, { file: 'DirectoryServices', isDir: true }, { file: 'Documentation', isDir: true }, { file: 'DropboxHelperTools', isDir: true }, { file: 'Extensions', isDir: true }, { file: 'Filesystems', isDir: true }, { file: 'Fonts', isDir: true }, { file: 'Frameworks', isDir: true }, { file: 'Google', isDir: true }, { file: 'Graphics', isDir: true }, { file: 'Image Capture', isDir: true }, { file: 'Input Methods', isDir: true }, { file: 'Internet Plug-Ins', isDir: true }, { file: 'Java', isDir: true }, { file: 'Keyboard Layouts', isDir: true }, { file: 'Keychains', isDir: true }, { file: 'LaunchAgents', isDir: true }, { file: 'LaunchDaemons', isDir: true }, { file: 'Logs', isDir: true }, { file: 'Messages', isDir: true }, { file: 'Modem Scripts', isDir: true }, { file: 'OpenDirectory', isDir: true }, { file: 'PDF Services', isDir: true }, { file: 'Perl', isDir: true }, { file: 'PreferencePanes', isDir: true }, { file: 'Preferences', isDir: true }, { file: 'Printers', isDir: true }, { file: 'PrivilegedHelperTools', isDir: true }, { file: 'Python', isDir: true }, { file: 'QuickLook', isDir: true }, { file: 'QuickTime', isDir: true }, { file: 'Receipts', isDir: true }, { file: 'Ruby', isDir: true }, { file: 'Sandbox', isDir: true }, { file: 'Screen Savers', isDir: true }, { file: 'ScriptingAdditions', isDir: true }, { file: 'Scripts', isDir: true }, { file: 'Security', isDir: true }, { file: 'Server', isDir: true }, { file: 'Speech', isDir: true }, { file: 'Spelling', isDir: true }, { file: 'Spotlight', isDir: true }, { file: 'StartupItems', isDir: true }, { file: 'SystemMigration', isDir: true }, { file: 'SystemProfiler', isDir: true }, { file: 'Updates', isDir: true }, { file: 'User Pictures', isDir: true }, { file: 'Video', isDir: true }, { file: 'WebServer', isDir: true }, { file: 'Widgets', isDir: true }, { file: 'iTunes', isDir: true }],
    '/Library/Application Support/': [{ file: '...', isDir: false }],
    '/Library/Audio/': [{ file: '...', isDir: false }],
    '/Library/Caches/': [{ file: '...', isDir: false }],
    '/Library/ColorPickers/': [{ file: '...', isDir: false }],
    '/Library/ColorSync/': [{ file: '...', isDir: false }],
    '/Library/Components/': [{ file: '...', isDir: false }],
    '/Library/Compositions/': [{ file: '...', isDir: false }],
    '/Library/Contextual Menu Items/': [{ file: '...', isDir: false }],
    '/Library/CoreMediaIO/': [{ file: '...', isDir: false }],
    '/Library/Desktop Pictures/': [{ file: '...', isDir: false }],
    '/Library/Developer/': [{ file: '...', isDir: false }],
    '/Library/Dictionaries/': [{ file: '...', isDir: false }],
    '/Library/DirectoryServices/': [{ file: '...', isDir: false }],
    '/Library/Documentation/': [{ file: '...', isDir: false }],
    '/Library/DropboxHelperTools/': [{ file: '...', isDir: false }],
    '/Library/Extensions/': [{ file: '...', isDir: false }],
    '/Library/Filesystems/': [{ file: '...', isDir: false }],
    '/Library/Fonts/': [{ file: '...', isDir: false }],
    '/Library/Frameworks/': [{ file: '...', isDir: false }],
    '/Library/Google/': [{ file: '...', isDir: false }],
    '/Library/Graphics/': [{ file: '...', isDir: false }],
    '/Library/Image Capture/': [{ file: '...', isDir: false }],
    '/Library/Input Methods/': [{ file: '...', isDir: false }],
    '/Library/Internet Plug-Ins/': [{ file: '...', isDir: false }],
    '/Library/Java/': [{ file: '...', isDir: false }],
    '/Library/Keyboard Layouts/': [{ file: '...', isDir: false }],
    '/Library/Keychains/': [{ file: '...', isDir: false }],
    '/Library/LaunchAgents/': [{ file: '...', isDir: false }],
    '/Library/LaunchDaemons/': [{ file: '...', isDir: false }],
    '/Library/Logs/': [{ file: '...', isDir: false }],
    '/Library/Messages/': [{ file: '...', isDir: false }],
    '/Library/Modem Scripts/': [{ file: '...', isDir: false }],
    '/Library/OpenDirectory/': [{ file: '...', isDir: false }],
    '/Library/PDF Services/': [{ file: '...', isDir: false }],
    '/Library/Perl/': [{ file: '...', isDir: false }],
    '/Library/PreferencePanes/': [{ file: '...', isDir: false }],
    '/Library/Preferences/': [{ file: '...', isDir: false }],
    '/Library/Printers/': [{ file: '...', isDir: false }],
    '/Library/PrivilegedHelperTools/': [{ file: '...', isDir: false }],
    '/Library/Python/': [{ file: '...', isDir: false }],
    '/Library/QuickLook/': [{ file: '...', isDir: false }],
    '/Library/QuickTime/': [{ file: '...', isDir: false }],
    '/Library/Receipts/': [{ file: '...', isDir: false }],
    '/Library/Ruby/': [{ file: '...', isDir: false }],
    '/Library/Sandbox/': [{ file: '...', isDir: false }],
    '/Library/Screen Savers/': [{ file: '...', isDir: false }],
    '/Library/ScriptingAdditions/': [{ file: '...', isDir: false }],
    '/Library/Scripts/': [{ file: '...', isDir: false }],
    '/Library/Security/': [{ file: '...', isDir: false }],
    '/Library/Server/': [{ file: '...', isDir: false }],
    '/Library/Speech/': [{ file: '...', isDir: false }],
    '/Library/Spelling/': [{ file: '...', isDir: false }],
    '/Library/Spotlight/': [{ file: '...', isDir: false }],
    '/Library/StartupItems/': [{ file: '...', isDir: false }],
    '/Library/SystemMigration/': [{ file: '...', isDir: false }],
    '/Library/SystemProfiler/': [{ file: '...', isDir: false }],
    '/Library/Updates/': [{ file: '...', isDir: false }],
    '/Library/User Pictures/': [{ file: '...', isDir: false }],
    '/Library/Video/': [{ file: '...', isDir: false }],
    '/Library/WebServer/': [{ file: '...', isDir: false }],
    '/Library/Widgets/': [{ file: '...', isDir: false }],
    '/Library/iTunes/': [{ file: '...', isDir: false }],
    '/Users/': [{ file: 'LaconaUser', isDir: true }, { file: 'Guest', isDir: true }, { file: 'Shared', isDir: true }],
    '/Users/LaconaUser/': [{ file: 'Desktop', isDir: true }, { file: 'Documents', isDir: true }, { file: 'Downloads', isDir: true }, { file: 'Library', isDir: true }, { file: 'Movies', isDir: true }, { file: 'Music', isDir: true }, { file: 'Pictures', isDir: true }],
    '/Users/LaconaUser/Desktop/': [{ file: 'mydocument.pages', isDir: false }, { file: 'mockup.html', isDir: false }, { file: 'kickstarter.url', isDir: false }],
    '/Users/LaconaUser/Documents/': [{ file: 'University', isDir: true }, { file: 'Resumes', isDir: true }, { file: 'Ideas', isDir: true }, { file: 'Presentations', isDir: true }, { file: 'Projects', isDir: true }, { file: 'NLP', isDir: true }],
    '/Users/LaconaUser/Documents/University/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Documents/Resumes/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Documents/Ideas/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Documents/Presentations/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Documents/Projects/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Documents/NLP/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Downloads/': [{ file: 'Lacona.dmg', isDir: false }],
    '/Users/LaconaUser/Library/': [{ file: 'Accounts', isDir: true }, { file: 'Application Scripts', isDir: true }, { file: 'Application Support', isDir: true }, { file: 'Assistants', isDir: true }, { file: 'Audio', isDir: true }, { file: 'Autosave Information', isDir: true }, { file: 'Caches', isDir: true }, { file: 'Calendars', isDir: true }, { file: 'ColorPickers', isDir: true }, { file: 'Colors', isDir: true }, { file: 'Compositions', isDir: true }, { file: 'Containers', isDir: true }, { file: 'Cookies', isDir: true }, { file: 'Developer', isDir: true }, { file: 'Dictionaries', isDir: true }, { file: 'Favorites', isDir: true }, { file: 'FlashlightPlugins', isDir: true }, { file: 'FontCollections', isDir: true }, { file: 'Fonts', isDir: true }, { file: 'GameKit', isDir: true }, { file: 'Google', isDir: true }, { file: 'Group Containers', isDir: true }, { file: 'IdentityServices', isDir: true }, { file: 'Input Methods', isDir: true }, { file: 'Internet Plug-Ins', isDir: true }, { file: 'Keyboard Layouts', isDir: true }, { file: 'Keychains', isDir: true }, { file: 'LanguageModeling', isDir: true }, { file: 'LaunchAgents', isDir: true }, { file: 'Logs', isDir: true }, { file: 'Mail', isDir: true }, { file: 'Messages', isDir: true }, { file: 'Mobile Documents', isDir: true }, { file: 'PreferencePanes', isDir: true }, { file: 'Preferences', isDir: true }, { file: 'Printers', isDir: true }, { file: 'PubSub', isDir: true }, { file: 'Safari', isDir: true }, { file: 'Saved Application State', isDir: true }, { file: 'Saved Searches', isDir: true }, { file: 'Screen Savers', isDir: true }, { file: 'ScriptingAdditions', isDir: true }, { file: 'Services', isDir: true }, { file: 'Sounds', isDir: true }, { file: 'Spelling', isDir: true }, { file: 'SyncedPreferences', isDir: true }, { file: 'Voices', isDir: true }, { file: 'WebKit', isDir: true }, { file: 'com.apple.nsurlsessiond', isDir: true }, { file: 'iMovie', isDir: true }, { file: 'iTunes', isDir: true }],
    '/Users/LaconaUser/Library/Accounts/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Application Scripts/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Application Support/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Assistants/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Audio/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Autosave Information/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Caches/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Calendars/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/ColorPickers/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Colors/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Compositions/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Containers/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Cookies/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Developer/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Dictionaries/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Favorites/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/FlashlightPlugins/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/FontCollections/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Fonts/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/GameKit/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Google/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Group Containers/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/IdentityServices/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Input Methods/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Internet Plug-Ins/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Keyboard Layouts/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Keychains/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/LanguageModeling/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/LaunchAgents/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Logs/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Mail/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Messages/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Mobile Documents/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/PreferencePanes/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Preferences/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Printers/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/PubSub/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Safari/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Saved Application State/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Saved Searches/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Screen Savers/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/ScriptingAdditions/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Services/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Sounds/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Spelling/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/SyncedPreferences/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/Voices/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/WebKit/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/com.apple.nsurlsessiond/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/iMovie/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Library/iTunes/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Movies/': [{ file: 'The Avengers.avi', isDir: false }, { file: 'X-Men First Class.avi', isDir: false }, { file: 'Iron Man.avi', isDir: false }],
    '/Users/LaconaUser/Music/': [{ file: 'Audio Music Apps', isDir: true }, { file: 'GarageBand', isDir: true }, { file: 'iTunes', isDir: true }],
    '/Users/LaconaUser/Music/Audio Music Apps/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Music/GarageBand/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Music/iTunes/': [{ file: '...', isDir: false }],
    '/Users/LaconaUser/Pictures/': [{ file: 'Photos Library.photoslibrary', isDir: false }],
    '/Users/Guest/': [{ file: '...', isDir: false }],
    '/Users/Shared/': [{ file: '...', isDir: false }],
    '/bin/': [{ file: 'bash', isDir: false }, { file: 'cat', isDir: false }, { file: 'chmod', isDir: false }, { file: 'cp', isDir: false }, { file: 'csh', isDir: false }, { file: 'date', isDir: false }, { file: 'dd', isDir: false }, { file: 'df', isDir: false }, { file: 'domainname', isDir: false }, { file: 'echo', isDir: false }, { file: 'ed', isDir: false }, { file: 'expr', isDir: false }, { file: 'hostname', isDir: false }, { file: 'kill', isDir: false }, { file: 'ksh', isDir: false }, { file: 'launchctl', isDir: false }, { file: 'link', isDir: false }, { file: 'ln', isDir: false }, { file: 'ls', isDir: false }, { file: 'mkdir', isDir: false }, { file: 'mv', isDir: false }, { file: 'pax', isDir: false }, { file: 'ps', isDir: false }, { file: 'pwd', isDir: false }, { file: 'rcp', isDir: false }, { file: 'rm', isDir: false }, { file: 'rmdir', isDir: false }, { file: 'sh', isDir: false }, { file: 'sleep', isDir: false }, { file: 'stty', isDir: false }, { file: 'sync', isDir: false }, { file: 'tcsh', isDir: false }, { file: 'test', isDir: false }, { file: 'unlink', isDir: false }, { file: 'wait4path', isDir: false }, { file: 'zsh', isDir: false }],
    '/etc/': [],
    '/home/': [],
    '/net/': [],
    '/tmp/': [{ file: 'KSOutOfProcessFetcher.0.OlaJUhhgKAnFsX7fZ0FyXTFxIgg=',
      isDir: false }, { file: 'com.apple.launchd.CWPFO2w3Rj', isDir: false }, { file: 'com.apple.launchd.eM0bByeRbW', isDir: false }, { file: 'tmphosts', isDir: false }, { file: 'tmphosts1', isDir: false }, { file: 'some.tmp', isDir: false }, { file: 'test.tmp', isDir: false }, { file: 'yes.txt', isDir: false }],
    '/usr/': [{ file: 'X11', isDir: true }, { file: 'X11R6', isDir: true }, { file: 'bin', isDir: true }, { file: 'include', isDir: true }, { file: 'lib', isDir: true }, { file: 'libexec', isDir: true }, { file: 'local', isDir: true }, { file: 'sbin', isDir: true }, { file: 'share', isDir: true }, { file: 'standalone', isDir: true }],
    '/usr/X11/': [{ file: '...', isDir: false }],
    '/usr/X11R6/': [{ file: '...', isDir: false }],
    '/usr/bin/': [{ file: '...', isDir: false }],
    '/usr/include/': [{ file: '...', isDir: false }],
    '/usr/lib/': [{ file: '...', isDir: false }],
    '/usr/libexec/': [{ file: '...', isDir: false }],
    '/usr/local/': [{ file: '...', isDir: false }],
    '/usr/sbin/': [{ file: '...', isDir: false }],
    '/usr/share/': [{ file: '...', isDir: false }],
    '/usr/standalone/': [{ file: '...', isDir: false }],
    '/var/': [{ file: 'Keychains', isDir: true }, { file: 'agentx', isDir: true }, { file: 'at', isDir: true }, { file: 'audit', isDir: true }, { file: 'backups', isDir: true }, { file: 'db', isDir: true }, { file: 'empty', isDir: true }, { file: 'folders', isDir: true }, { file: 'folders~orig', isDir: true }, { file: 'jabberd', isDir: true }, { file: 'lib', isDir: true }, { file: 'log', isDir: true }, { file: 'mail', isDir: true }, { file: 'msgs', isDir: true }, { file: 'netboot', isDir: true }, { file: 'networkd', isDir: true }, { file: 'root', isDir: true }, { file: 'rpc', isDir: true }, { file: 'run', isDir: true }, { file: 'rwho', isDir: true }, { file: 'spool', isDir: true }, { file: 'tmp', isDir: true }, { file: 'vm', isDir: true }, { file: 'yp', isDir: true }],
    '/var/Keychains/': [{ file: '...', isDir: false }],
    '/var/agentx/': [{ file: '...', isDir: false }],
    '/var/at/': [{ file: '...', isDir: false }],
    '/var/audit/': [{ file: '...', isDir: false }],
    '/var/backups/': [{ file: '...', isDir: false }],
    '/var/db/': [{ file: '...', isDir: false }],
    '/var/empty/': [{ file: '...', isDir: false }],
    '/var/folders/': [{ file: '...', isDir: false }],
    '/var/folders~orig/': [{ file: '...', isDir: false }],
    '/var/jabberd/': [{ file: '...', isDir: false }],
    '/var/lib/': [{ file: '...', isDir: false }],
    '/var/log/': [{ file: '...', isDir: false }],
    '/var/mail/': [{ file: '...', isDir: false }],
    '/var/msgs/': [{ file: '...', isDir: false }],
    '/var/netboot/': [{ file: '...', isDir: false }],
    '/var/networkd/': [{ file: '...', isDir: false }],
    '/var/root/': [{ file: '...', isDir: false }],
    '/var/rpc/': [{ file: '...', isDir: false }],
    '/var/run/': [{ file: '...', isDir: false }],
    '/var/rwho/': [{ file: '...', isDir: false }],
    '/var/spool/': [{ file: '...', isDir: false }],
    '/var/tmp/': [{ file: '...', isDir: false }],
    '/var/vm/': [{ file: '...', isDir: false }],
    '/var/yp/': [{ file: '...', isDir: false }] }
};

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (a, b) {
  return (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))
  );
}(navigator.userAgent || navigator.vendor || window.opera);

},{}],3:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getExecute;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactLacona = require('react-lacona');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getExecute(showNotification) {
  if (global.location && global.location.hash === '#videodemo') return;

  return function (words) {
    var message = _.map(words, function (_ref, index) {
      var text = _ref.text;
      var category = _ref.category;
      var argument = _ref.argument;

      if (argument) {
        category = 'argument' + (0, _reactLacona.hashArgument)(argument);
      }
      return _react2.default.createElement(
        'span',
        { className: 'category-' + category, key: index },
        text
      );
    });

    showNotification(message);
  };
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"react":548,"react-lacona":383}],4:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalObserve = require('elliptical-observe');

var _ellipticalExtend = require('elliptical-extend');

var _ellipticalWormhole = require('elliptical-wormhole');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactLacona = require('react-lacona');

var _Observable = require('rxjs/Observable');

var _demoConfig = require('./demo-config');

var _sentence = require('./sentence.jsx');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

global.demoConfig = _demoConfig.demoConfig;

function groupPlaceholders(result) {
  return _lodash2.default.chain(result.words).filter(function (item) {
    return item.placeholder || item.text;
  }).map(function (item) {
    return item.placeholder ? '￼' : '￹' + item.text + '￺' + item.argument + '￻';
  }).join('').concat('￹' + result.qualifiers.join('￺') + '￻').value();
}

function mapPlaceholderGroups(resultGroup) {
  var placeholders = _lodash2.default.chain(resultGroup).map(function (result) {
    return _lodash2.default.chain(result.words).filter('placeholder').map('text').value();
  }).thru(function (descriptorLists) {
    return _lodash2.default.zip.apply(_lodash2.default, _toConsumableArray(descriptorLists));
  }).map(function (x) {
    return _lodash2.default.unique(x);
  }).map(function (x) {
    return _lodash2.default.filter(x);
  }).value();

  var result = _lodash2.default.clone(_lodash2.default.first(resultGroup));

  _lodash2.default.chain(result.words).filter('placeholder').forEach(function (item, index) {
    item.placeholderTexts = placeholders[index];
    // item.descriptors = [placeholders[index]]
  }).value();

  return result;
}

function combinePlaceholders(results) {
  var limit = arguments.length <= 1 || arguments[1] === undefined ? 100 : arguments[1];

  return _lodash2.default.chain(results).groupBy(groupPlaceholders).map(mapPlaceholderGroups).sortBy(function (option) {
    return -option.score;
  }).take(limit).value();
}

var prefixes = ['open ', 'search '];

var Keys = function (_React$Component) {
  _inherits(Keys, _React$Component);

  function Keys() {
    _classCallCheck(this, Keys);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Keys).apply(this, arguments));
  }

  _createClass(Keys, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'keys' + (this.props.visible ? ' visible' : '') },
        _react2.default.createElement(
          'div',
          { className: 'key' },
          _react2.default.createElement(
            'div',
            { className: 'keyChar' },
            'Arrow Keys'
          ),
          _react2.default.createElement(
            'div',
            { className: 'keyDesc' },
            'select'
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'key' },
          _react2.default.createElement(
            'div',
            { className: 'keyChar' },
            'Tab'
          ),
          _react2.default.createElement(
            'div',
            { className: 'keyDesc' },
            'complete'
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'key' },
          _react2.default.createElement(
            'div',
            { className: 'keyChar' },
            'Return'
          ),
          _react2.default.createElement(
            'div',
            { className: 'keyDesc' },
            'do'
          )
        )
      );
    }
  }]);

  return Keys;
}(_react2.default.Component);

var Lacona = function (_React$Component2) {
  _inherits(Lacona, _React$Component2);

  function Lacona(props) {
    _classCallCheck(this, Lacona);

    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Lacona).call(this, props));

    _this2.state = {
      input: '',
      output: [],
      prefix: '',
      focused: false
    };
    var activateObserver = void 0,
        deactivateObserver = void 0;

    var activates = new _Observable.Observable(function (observer) {
      activateObserver = observer;
    });

    var deactivates = new _Observable.Observable(function (observer) {
      deactivateObserver = observer;
    });

    _this2.store = (0, _ellipticalObserve.createStore)();

    var extender = (0, _ellipticalExtend.createProcessor)(_sentence.extensions);
    var contexter = (0, _ellipticalWormhole.createProcessor)(_demoConfig.demoConfig, 'context');

    var activator = (0, _ellipticalWormhole.createProcessor)(activates, 'activate');
    var deactivator = (0, _ellipticalWormhole.createProcessor)(deactivates, 'deactivate');
    var observerProcessor = (0, _elliptical.combineProcessors)(activator, deactivator);
    var observer = (0, _ellipticalObserve.createProcessor)(_this2.store.register, observerProcessor);

    var processor = (0, _elliptical.combineProcessors)(contexter, extender, observer);

    _this2.parse = (0, _elliptical.compile)(_sentence.grammar, processor);
    activateObserver.next();
    return _this2;
  }

  _createClass(Lacona, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.update('');
    }
  }, {
    key: 'focusEnd',
    value: function focusEnd() {
      this.refs.lacona.focusEnd();
    }
  }, {
    key: 'getInput',
    value: function getInput() {
      return this.state.input;
    }
  }, {
    key: 'doParse',
    value: function doParse(input) {
      var _this3 = this;

      if (input === '') return [];

      var fullOutput = this.parse(input);

      if (_lodash2.default.isEmpty(fullOutput)) {
        fullOutput = _lodash2.default.chain(prefixes).map(function (prefix) {
          var prefixedInput = '' + prefix + input;
          var outputs = _this3.parse(prefixedInput);
          return outputs;
        }).flatten().forEach(function (output) {
          return output.words[0].fallthrough = true;
        }).value();
      }

      return combinePlaceholders(fullOutput, 20);
    }
  }, {
    key: 'update',
    value: function update(input) {
      var _this4 = this;

      var parse = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

      this.setState({ input: input });

      if (parse) {
        setTimeout(function () {
          var output = _this4.doParse(input);

          _this4.setState({ output: output });
        }, 11);
      }
    }
  }, {
    key: 'execute',
    value: function execute(index) {
      this.refs.lacona.blur();
      var result = this.state.output[index].result;

      var stuff = result.element.type.demoExecute(result.result, result.element);
      this.props.execute(stuff);
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.update('');
    }
  }, {
    key: 'blur',
    value: function blur(event) {
      this.setState({ focused: false });
      this.cancel();
      this.props.onBlur();
    }
  }, {
    key: 'focus',
    value: function focus(event) {
      this.setState({ focused: true });
      // this.props.userInteracted()
      this.props.onFocus();
    }
  }, {
    key: 'clearPrefix',
    value: function clearPrefix(event) {
      this.setState({ prefix: '' });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_reactLacona.LaconaView, {
        ref: 'lacona',
        key: 'lacona',
        onFocus: this.focus.bind(this),
        onBlur: this.blur.bind(this),
        userInput: this.state.input,
        outputs: this.state.output,
        prefix: this.state.prefix,
        update: this.update.bind(this),
        execute: this.execute.bind(this),
        cancel: this.cancel.bind(this),
        clearPrefix: this.clearPrefix.bind(this),
        tabIndex: this.props.tabIndex,
        placeholder: this.props.placeholder });
    }
  }]);

  return Lacona;
}(_react2.default.Component);

exports.default = Lacona;

Lacona.defaultProps = {
  tryMe: false,
  placeholder: 'Try me!'
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo-config":1,"./sentence.jsx":7,"elliptical":231,"elliptical-extend":124,"elliptical-observe":127,"elliptical-wormhole":227,"react":548,"react-lacona":383,"rxjs/Observable":550}],5:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _sentence = require('./sentence.jsx');

var _execute = require('./execute.jsx');

var _execute2 = _interopRequireDefault(_execute);

var _lacona = require('./lacona.jsx');

var _lacona2 = _interopRequireDefault(_lacona);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactLacona = require('react-lacona');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MS_PER_INPUT = 10;
var DOWNLOAD_LINK = 'http://lacona-download.firebaseapp.com/packages/0.5.0/LaconaBeta.zip';
var ISSUES_LINK = 'https://github.com/laconalabs/LaconaApp/issues';
var CHANGELOG_LINK = 'https://github.com/laconalabs/LaconaApp/blob/master/CHANGELOG.md';
var ABOUT_LINK = 'https://github.com/laconalabs/LaconaApp';

var CURRENT_VERSION = 'Beta 6';
var REQUIRED_VERSION = 'OSX 10.11 El Capitan';

var Lightbox = function Lightbox(props) {
  return _react2.default.createElement(
    'div',
    { className: 'lightbox-total' + (props.visible ? ' visible' : '') },
    _react2.default.createElement('div', { className: 'lightbox-cover', onClick: props.hide }),
    _react2.default.createElement(
      'div',
      { className: 'lightbox' },
      _react2.default.createElement(
        'div',
        { tabIndex: '0', className: 'closeButton', onClick: props.hide },
        '×'
      ),
      _react2.default.createElement(
        'h3',
        null,
        'Cool, huh?'
      ),
      _react2.default.createElement(
        'p',
        { className: 'description' },
        'If this were a real copy of Lacona, it would ',
        props.message,
        '.'
      ),
      _react2.default.createElement(Buttons, { check: !props.initialLoad })
    )
  );
};

function isOSX(userAgent) {
  return (/Mac OS X 10/.test(userAgent)
  );
}

function isOSX10_11Plus(userAgent) {
  return (/Mac OS X 10_11/.test(userAgent)
  );
}

var Buttons = function Buttons(_ref) {
  var check = _ref.check;

  return _react2.default.createElement(
    'div',
    { className: 'buttons' },
    _react2.default.createElement(SubscribeButton, null),
    _react2.default.createElement(FollowButton, null),
    _react2.default.createElement(DownloadButton, { check: check })
  );
};

var SubscribeButton = function SubscribeButton() {
  return _react2.default.createElement(
    'div',
    { className: 'buttonContainer' },
    _react2.default.createElement(
      'a',
      { className: 'subscribeButton button', onClick: function onClick(e) {
          window.open('http://eepurl.com/bjPRjD', '_blank', 'menubar=1,resizable=1,width=550,height=420');e.preventDefault();
        }, href: 'http://eepurl.com/bjPRjD', target: '_blank' },
      'Subscribe'
    ),
    _react2.default.createElement(
      'ul',
      null,
      _react2.default.createElement(
        'li',
        null,
        '~1 Email/Month'
      )
    )
  );
};

var FollowButton = function FollowButton() {
  return _react2.default.createElement(
    'div',
    { className: 'buttonContainer' },
    _react2.default.createElement(
      'a',
      { className: 'followButton button', onClick: function onClick(e) {
          window.open('https://twitter.com/intent/follow?screen_name=lacona&user_id=1963107458', '_blank', 'menubar=1,resizable=1,width=550,height=420');e.preventDefault();
        }, href: 'https://twitter.com/intent/follow?screen_name=lacona&user_id=1963107458', target: '_blank' },
      'Follow'
    ),
    _react2.default.createElement(
      'ul',
      null,
      _react2.default.createElement(
        'li',
        null,
        '@lacona on Twitter'
      )
    )
  );
};

var DownloadButton = function DownloadButton() {
  var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var _ref2$check = _ref2.check;
  var check = _ref2$check === undefined ? true : _ref2$check;

  var button = _react2.default.createElement(
    'a',
    { className: 'downloadButton button', href: DOWNLOAD_LINK },
    'Download'
  );
  if (check && global.navigator) {
    var userAgent = navigator.userAgent;
    if (!isOSX10_11Plus(userAgent)) {
      if (!isOSX(userAgent)) {
        button = _react2.default.createElement(
          'a',
          { className: 'downloadButton warn button', href: DOWNLOAD_LINK },
          'OSX Only'
        );
      } else {
        button = _react2.default.createElement(
          'a',
          { className: 'downloadButton warn button', href: DOWNLOAD_LINK },
          'OSX 10.11+'
        );
      }
    }
  }

  return _react2.default.createElement(
    'div',
    { className: 'buttonContainer' },
    button,
    _react2.default.createElement(
      'ul',
      null,
      _react2.default.createElement(
        'li',
        null,
        CURRENT_VERSION
      ),
      _react2.default.createElement(
        'li',
        null,
        _react2.default.createElement(
          'a',
          { href: ISSUES_LINK, target: '_blank' },
          'Issues'
        )
      ),
      _react2.default.createElement(
        'li',
        null,
        _react2.default.createElement(
          'a',
          { href: CHANGELOG_LINK, target: '_blank' },
          'Changelog'
        )
      )
    )
  );
};

var Page = function (_React$Component) {
  _inherits(Page, _React$Component);

  function Page() {
    _classCallCheck(this, Page);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Page).call(this));

    _this.state = {
      initialLoad: true,
      sticky: false
    };

    _this.execute = (0, _execute2.default)(_this.showLightbox.bind(_this));
    return _this;
  }

  _createClass(Page, [{
    key: 'showLightbox',
    value: function showLightbox(text) {
      this.setState({ lightBoxVisible: true, lightBoxMessage: text });
    }
  }, {
    key: 'hideLightBox',
    value: function hideLightBox() {
      this.setState({ lightBoxVisible: false });
    }
  }, {
    key: 'testSticky',
    value: function testSticky() {
      var contentPos = this.content.getBoundingClientRect();

      if (contentPos.top < 0 && !this.state.sticky) {
        this.setState({ sticky: true });
      } else if (contentPos.top >= 0 && this.state.sticky) {
        this.setState({ sticky: false });
      }
    }
  }, {
    key: 'enableSticky',
    value: function enableSticky() {
      window.addEventListener('scroll', this.testSticky.bind(this));
      this.testSticky();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener('keydown', this.checkEscape.bind(this));
      this.enableSticky();

      this.setState({ initialLoad: false });
    }
  }, {
    key: 'erase',
    value: function erase(done) {
      var _this2 = this;

      var input = this.lacona.getInput();

      var _loop = function _loop(i) {
        _lodash2.default.delay(function () {
          _this2.lacona.update(input.substr(0, input.length - i));
          _this2.lacona.focusEnd();
        }, i * MS_PER_INPUT / 2);
      };

      for (var i = 0; i <= input.length; i++) {
        _loop(i);
      }

      _lodash2.default.delay(function () {
        done();
      }, input.length * MS_PER_INPUT / 2);
    }
  }, {
    key: 'type',
    value: function type(content) {
      var _this3 = this;

      this.erase(function () {
        var _loop2 = function _loop2(i) {
          _lodash2.default.delay(function () {
            _this3.lacona.update(content.substr(0, i + 1), i === content.length - 1);
            _this3.lacona.focusEnd();
          }, i * MS_PER_INPUT);
        };

        for (var i = 0; i < content.length; i++) {
          _loop2(i);
        }
      });
    }
  }, {
    key: 'checkEscape',
    value: function checkEscape(event) {
      if (this.state.lightBoxMessage && (event.keyCode === 27 || event.keyCode === 13)) {
        this.hideLightBox();
        event.preventDefault();
        event.stopPropagation();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var isMobile = this.props.isMobile && !this.state.initialLoad;
      var isDesktop = !this.props.isMobile && !this.state.initialLoad;

      return _react2.default.createElement(
        'div',
        { className: 'page' },
        _react2.default.createElement(
          'header',
          null,
          _react2.default.createElement(
            'h1',
            null,
            'Lacona'
          ),
          _react2.default.createElement(
            'p',
            null,
            'Call up Lacona with a keyboard shortcut and type whatever you want to do. It gives intelligent suggestions as you type and then follows your orders.'
          ),
          _react2.default.createElement(Buttons, { check: !this.state.initialLoad })
        ),
        isMobile ? _react2.default.createElement(
          'div',
          { className: 'disclaimer' },
          _react2.default.createElement(
            'p',
            null,
            'Lacona is designed for use with a keyboard on a full desktop operating system. For the full experience, visit this page on your computer!'
          )
        ) : undefined,
        isDesktop ? _react2.default.createElement(
          'div',
          { className: 'lacona-demo' + (this.state.sticky ? ' sticky' : '') },
          _react2.default.createElement(_lacona2.default, {
            onFocus: function onFocus() {},
            onBlur: function onBlur() {},
            execute: this.execute,
            ref: function ref(c) {
              return _this4.lacona = c;
            },
            tryMe: true,
            tabIndex: 1 })
        ) : undefined,
        _react2.default.createElement(
          'content',
          { ref: function ref(c) {
              return _this4.content = c;
            } },
          _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'div',
              { className: 'text' },
              _react2.default.createElement(
                'a',
                { name: 'open', className: 'anchor' },
                _react2.default.createElement(
                  'h3',
                  null,
                  'Ditch the Dock'
                )
              ),
              _react2.default.createElement(
                'p',
                null,
                'With Lacona, your Apps, Bookmarks, Files, System Preferences, and more are only a few keystrokes away. You can also manage your open apps right from your keyboard.'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'examples' },
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open Calendar') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Calendar'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open Parental Controls') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('preference pane') },
                    'Parental Controls'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open Facebook and Twitter') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('bookmark') },
                    'Facebook'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    'and'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('bookmark') },
                    'Twitter'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'iTunes') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'iTunes'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'quit Safari') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'quit'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Safari'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open lacona.io in Safari and Firefox') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('URL') },
                    'lacona.io'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    'in'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Safari'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    'and'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Firefox'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'switch to Messages') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'switch to'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Messages'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open kickstarter.com') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('URL') },
                    'kickstarter.com'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open ~/Downloads/Lacona.dmg') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('path') },
                    '~/Downloads/Lacona.dmg'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open Gmail and Reminders and calendar.google.com') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('bookmark') },
                    'Gmail'
                  ),
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    ' and '
                  ),
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Reminders'
                  ),
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    ' and '
                  ),
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('URL') },
                    'calendar.google.com'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'lifehacker.com') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('URL') },
                    'lifehacker.com'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'close Reminders') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'close'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Reminders'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open todo.txt') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('file') },
                    'todo.txt'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'open my-document.docx with Pages') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'open'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('file') },
                    'my-document.docx'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    'with'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                    'Pages'
                  )
                )
              )
            )
          ),
          _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'div',
              { className: 'text' },
              _react2.default.createElement(
                'a',
                { name: 'date', className: 'anchor' },
                _react2.default.createElement(
                  'h3',
                  null,
                  'Organize your Life, not your Calendar'
                )
              ),
              _react2.default.createElement(
                'p',
                null,
                'Create reminders and schedule events as though you were talking to a person. Lacona understands. You can even use birthdays and anniversarys in your commands. It\'s natural!'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'examples' },
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'schedule Party at 7pm Friday') : undefined },
                  'schedule ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('calendar event') },
                    'Party'
                  ),
                  ' at ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('time') },
                    '7pm'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    'Friday'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'remind me to Pick up the car September 12 at 11:30am') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'remind me to'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('reminder title') },
                    'Pick up the car'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    'September 12'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    'at'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('time') },
                    '11:30am'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, "remind me to Buy a gift 2 weeks before my wife's birthday") : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'remind me to'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('reminder title') },
                    'Buy a gift'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    '2 weeks before my wife\'s birthday'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'schedule Vacation 10a Monday to 6:30p Thursday') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'schedule'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('calendar event') },
                    'Vacation'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('time') },
                    '10a'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    'Monday'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    'to'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('time') },
                    '6:30p'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    'Thursday'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'remind me to Buy a gift 7 days before 12/1') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'remind me to'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('reminder title') },
                    'Buy a gift'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    '7 days before 12/1'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'remind me to Call Jenny') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'remind me to'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('reminder title') },
                    'Call Jenny'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'schedule Ski Trip next Friday to Sunday') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'schedule'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('calendar event') },
                    'Ski Trip'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    'Next Friday'
                  ),
                  ' to ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                    'Sunday'
                  )
                ),
                _react2.default.createElement(
                  'li',
                  { onClick: !isMobile ? this.type.bind(this, 'remind me to Charge my phone at 9pm') : undefined },
                  _react2.default.createElement(
                    'span',
                    { className: 'category-action' },
                    'remind me to'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('reminder title') },
                    'Charge my phone'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-conjunction' },
                    'at'
                  ),
                  ' ',
                  _react2.default.createElement(
                    'span',
                    { className: 'category-argument' + (0, _reactLacona.hashArgument)('time') },
                    '9pm'
                  )
                )
              )
            )
          ),
          _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'a',
              { name: 'settings', className: 'anchor' },
              _react2.default.createElement(
                'h3',
                null,
                'Setting Settings, Settled'
              )
            ),
            _react2.default.createElement(
              'p',
              null,
              'With Lacona, there is no need to fiddle with menus and forms to change your basic settings. Turn off your Wifi, turn on Do Not Disturb, eject drives, or even restart your computer with just a few keystrokes. You can set time limits on settings, so you won\'t forget to change them back.'
            ),
            _react2.default.createElement(
              'ul',
              { className: 'examples' },
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'turn on wifi') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'turn on'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('setting') },
                  'wifi'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'toggle bluetooth') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'toggle'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('setting') },
                  'bluetooth'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'shutdown') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'shutdown'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'eject Lacona.dmg') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'eject'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('volume') },
                  'Lacona.dmg'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'turn off display') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'turn off display'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'empty Trash') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'empty Trash'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'enable bluetooth') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'enable'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('setting') },
                  'bluetooth'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'turn on do not disturb for 25 minutes') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'turn on'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('setting') },
                  'do not disturb'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'for'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('time duration') },
                  '25 minutes'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'turn on the screensaver') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'turn on the screensaver'
                )
              )
            )
          ),
          _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'a',
              { name: 'search', className: 'anchor' },
              _react2.default.createElement(
                'h3',
                null,
                'Seek and Ye Shall Find'
              )
            ),
            _react2.default.createElement(
              'p',
              null,
              'Search the web like a boss. Use powerful fallthrough functionality to save even more keystrokes. You can even search multiple sites with a single command.'
            ),
            _react2.default.createElement(
              'ul',
              { className: 'examples' },
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'search Google for pictures of cats') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'search'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('search engine') },
                  'Google'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'for'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('query') },
                  'pictures of cats'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'Google stormtroopers') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('search engine') },
                  'Google'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('query') },
                  'stormtroopers'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'Amazon Avengers') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('search engine') },
                  'Amazon'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('query') },
                  'Avengers'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'search Wikipedia for Pluto') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'search'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('search engine') },
                  'Wikipedia'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'for'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('query') },
                  'Pluto'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'search eBay and Amazon for iPhone 6') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'search'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('search engine') },
                  'eBay'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'and'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('search engine') },
                  'Amazon'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'for'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('query') },
                  'iPhone 6'
                )
              )
            )
          ),
          _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'a',
              { name: 'play', className: 'anchor' },
              _react2.default.createElement(
                'h3',
                null,
                'Your Personal DJ'
              )
            ),
            _react2.default.createElement(
              'p',
              null,
              'Instantly play anything in your iTunes library, without ever touching the mouse. Choose a bunch of songs or artists together to build an impromptu playlist. You can also control playback effortlessly.'
            ),
            _react2.default.createElement(
              'ul',
              { className: 'examples' },
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'play Couch Potato') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'play'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('song') },
                  'Couch Potato'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'play Wild Life') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'play'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('album') },
                  'Wild Life'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'play next song') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'play next song'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'play Walk the Moon') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'play'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('artist') },
                  'Walk the Moon'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'play Forever and I Bet My Life and Nicki Minaj') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'play'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('album') },
                  'Forever'
                ),
                ' and ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('song') },
                  'I Bet My Life'
                ),
                ' and ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('artist') },
                  'Nicki Minaj'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'play next song') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'play next song'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'play Pop and Jazz') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'play'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('genre') },
                  'Pop'
                ),
                ' and ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('genre') },
                  'Jazz'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'pause') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'pause'
                )
              )
            )
          ),
          _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'a',
              { name: 'contact', className: 'anchor' },
              _react2.default.createElement(
                'h3',
                null,
                'Keep in Touch'
              )
            ),
            _react2.default.createElement(
              'p',
              null,
              'Easily communicate with all of your contacts over Email, FaceTime, and iMessage. Make calls and send texts through your iPhone. Smoke signals not yet supported.'
            ),
            _react2.default.createElement(
              'ul',
              { className: 'examples' },
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'call Mom') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'call'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('relationship') },
                  'Mom'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'email Tony Stark') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'email'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('contact') },
                  'Tony Stark'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'email Dinner Plans to Clinton and Natalia') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'email'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('subject') },
                  'Dinner Plans'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('contact') },
                  'Clinton'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'and'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('contact') },
                  'Natalia'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'facetime my boss') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'facetime'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('relationship') },
                  'my boss'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'facetime Bruce Banner') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'facetime'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('contact') },
                  'Bruce Banner'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'call my Husband') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'call'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('relationship') },
                  'my Husband'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'email app@lacona.io') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'email'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('email address') },
                  'app@lacona.io'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'call +1 617 867 5309') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'call'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('phone number') },
                  '+1 617 867 5309'
                )
              )
            )
          ),
          _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'a',
              { name: 'translate', className: 'anchor' },
              _react2.default.createElement(
                'h3',
                null,
                'Become a Global Citizen'
              )
            ),
            _react2.default.createElement(
              'p',
              null,
              'Quickly translate words, phrases, and websites between languages. It\'s the quickest, most natural interface for Google Translate.'
            ),
            _react2.default.createElement(
              'ul',
              { className: 'examples' },
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'translate мороженное') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'translate'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('phrase') },
                  'мороженное'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'translate univision.com/') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'translate'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('URL') },
                  'univision.com'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'translate 我爱你 to Korean') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'translate'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('phrase') },
                  '我爱你'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Korean'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'translate ¿cómo estás? from Spanish to Japanese') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'translate'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('phrase') },
                  'como estas?'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'from'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Spanish'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Japanese'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, 'translate hujambo from Swahili') : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'translate'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('phrase') },
                  'hujambo'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'from'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Swahili'
                )
              ),
              _react2.default.createElement(
                'li',
                { onClick: !isMobile ? this.type.bind(this, "translate I don't know to Arabic, Chinese, French, Russian, and Spanish") : undefined },
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'translate'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('phrase') },
                  'I don\'t know'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Arabic'
                ),
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  ','
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Chinese'
                ),
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  ','
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'French'
                ),
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  ','
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Russian'
                ),
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  ', and'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('language') },
                  'Spanish'
                )
              )
            )
          ),
          _react2.default.createElement(
            'section',
            { className: 'full' },
            _react2.default.createElement(
              'h3',
              null,
              _react2.default.createElement(
                'a',
                { name: 'extensibility' },
                'The Sky\'s the Limit'
              )
            ),
            _react2.default.createElement(
              'p',
              null,
              'Lacona is built to be extended. An open Developer API gives it the power it do anything you need it to do, quickly and easily. Here are some ideas. ',
              _react2.default.createElement(
                'strong',
                null,
                'Coming Soon.'
              )
            ),
            _react2.default.createElement(
              'ul',
              { className: 'examples inactive' },
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'tweet'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument2' },
                  'just setting up my twttr #blessed'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'skype'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('contact') },
                  'Aaron'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'email'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument0' },
                  'my last instagram picture'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('relationship') },
                  'Mom'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'calculate'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument3' },
                  'sqrt(5)'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'turn off'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument5' },
                  'the kitchen lights'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'pronounce'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument4' },
                  'indefatigable'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'check'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument6' },
                  'APPL'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'set'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument0' },
                  'default browser'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('application') },
                  'Firefox'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'set a timer'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'for'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument2' },
                  '25 minutes'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'execute'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument5' },
                  'ps -ef | grep -i lacona'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'email walking directions'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'from'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument6' },
                  'Penn Station NY'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument6' },
                  'my house'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('contact') },
                  'Pepper Potts'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'block'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('URL') },
                  'reddit.com'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'subscribe'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument0' },
                  'lifehacker'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'paste'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument2' },
                  'my last tweet'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'fork'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument1' },
                  'lacona/lacona'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'define'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument4' },
                  'antediluvian'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'roll'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument0' },
                  'd12'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'find flights'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'from'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument6' },
                  'SFO'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'to'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument6' },
                  'BOS'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'on'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                  '8/6/2015'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'yo'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('contact') },
                  'THEDUDE'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'set an alarm'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'for'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('time') },
                  '6am'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'on'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument' + (0, _reactLacona.hashArgument)('date') },
                  'Christmas'
                )
              ),
              _react2.default.createElement(
                'li',
                null,
                _react2.default.createElement(
                  'span',
                  { className: 'category-action' },
                  'check the weather'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-conjunction' },
                  'in'
                ),
                ' ',
                _react2.default.createElement(
                  'span',
                  { className: 'category-argument2' },
                  'Boston'
                )
              )
            )
          )
        ),
        _react2.default.createElement(
          'footer',
          null,
          isDesktop ? _react2.default.createElement(
            'p',
            null,
            'This webpage is only a demonstration of Lacona\'s interface, and the information is static. Unlike the App, this page cannot access your files, apps, calendar, or anything else on your computer.'
          ) : null,
          _react2.default.createElement(
            'p',
            null,
            '©2016 Lacona Labs — ',
            _react2.default.createElement(
              'a',
              { href: 'mailto:app@lacona.io' },
              'Email'
            ),
            ' // ',
            _react2.default.createElement(
              'a',
              { href: 'http://twitter.com/lacona', target: '_blank' },
              'Twitter'
            ),
            ' // ',
            _react2.default.createElement(
              'a',
              { href: 'http://github.com/laconalabs', target: '_blank' },
              'Github'
            )
          )
        ),
        _react2.default.createElement(Lightbox, {
          visible: this.state.lightBoxVisible,
          initialLoad: this.state.initialLoad,
          message: this.state.lightBoxMessage,
          hide: this.hideLightBox.bind(this) })
      );
    }
  }]);

  return Page;
}(_react2.default.Component);

exports.default = Page;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./execute.jsx":3,"./lacona.jsx":4,"./sentence.jsx":7,"react":548,"react-dom":381,"react-lacona":383}],6:[function(require,module,exports){
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _page = require('./page.jsx');

var _page2 = _interopRequireDefault(_page);

var _detect = require('./detect');

var _detect2 = _interopRequireDefault(_detect);

var _reactDom = require('react-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _reactDom.render)(_react2.default.createElement(_page2.default, { isMobile: _detect2.default }), document.getElementById('page'));

},{"./detect":2,"./page.jsx":5,"react":548,"react-dom":381}],7:[function(require,module,exports){
(function (process,global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.grammar = undefined;

var _demoConfig = require('./demo-config');

var _elliptical = require('elliptical');

var _laconaCommunicate = require('lacona-communicate');

var _laconaEvents = require('lacona-events');

var _laconaItunes = require('lacona-itunes');

var _laconaSearchInternet = require('lacona-search-internet');

var _laconaFinder = require('lacona-finder');

var _laconaOsx = require('lacona-osx');

var _laconaSettings = require('lacona-settings');

var _laconaTranslate = require('lacona-translate');

var _laconaCommand = require('lacona-command');

/** @jsx createElement */

process.env.LACONA_ENV = 'demo';

global.demoData = _demoConfig.demoData;

var grammar = exports.grammar = (0, _elliptical.createElement)(_laconaCommand.Command, null);

var extensions = exports.extensions = [].concat(_laconaCommunicate.extensions, _laconaEvents.extensions, _laconaItunes.extensions, _laconaSearchInternet.extensions, _laconaFinder.extensions, _laconaOsx.extensions, _laconaSettings.extensions, _laconaTranslate.extensions, _laconaCommand.extensions);

/*

const userFiles = [
  {
    name: 'Desktop',
    children: ['mydocument.pages', 'mockup.html', 'kickstarter.url'],
  },
  {
    name: 'Documents',
    children: [
      {
        name: 'University',
        children: ['...']
      },
      {
        name: 'Resumes',
        children: ['...']
      },
      {
        name: 'Ideas',
        children: ['...']
      },
      {
        name: 'Presentations',
        children: ['...']
      },
      {
        name: 'Projects',
        children: ['...']
      },
      {
        name: 'NLP',
        children: ['...']
      }
    ]
  },
  {
    name: 'Downloads',
    children: ['Lacona.dmg']
  },
  {
    name: 'Library',
    children: [
      {
        name: 'Accounts',
        children: ['...']
      },
      {
        name: 'Application Scripts',
        children: ['...']
      },
      {
        name: 'Application Support',
        children: ['...']
      },
      {
        name: 'Assistants',
        children: ['...']
      },
      {
        name: 'Audio',
        children: ['...']
      },
      {
        name: 'Autosave Information',
        children: ['...']
      },
      {
        name: 'Caches',
        children: ['...']
      },
      {
        name: 'Calendars',
        children: ['...']
      },
      {
        name: 'ColorPickers',
        children: ['...']
      },
      {
        name: 'Colors',
        children: ['...']
      },
      {
        name: 'Compositions',
        children: ['...']
      },
      {
        name: 'Containers',
        children: ['...']
      },
      {
        name: 'Cookies',
        children: ['...']
      },
      {
        name: 'Developer',
        children: ['...']
      },
      {
        name: 'Dictionaries',
        children: ['...']
      },
      {
        name: 'Favorites',
        children: ['...']
      },
      {
        name: 'FlashlightPlugins',
        children: ['...']
      },
      {
        name: 'FontCollections',
        children: ['...']
      },
      {
        name: 'Fonts',
        children: ['...']
      },
      {
        name: 'GameKit',
        children: ['...']
      },
      {
        name: 'Google',
        children: ['...']
      },
      {
        name: 'Group Containers',
        children: ['...']
      },
      {
        name: 'IdentityServices',
        children: ['...']
      },
      {
        name: 'Input Methods',
        children: ['...']
      },
      {
        name: 'Internet Plug-Ins',
        children: ['...']
      },
      {
        name: 'Keyboard Layouts',
        children: ['...']
      },
      {
        name: 'Keychains',
        children: ['...']
      },
      {
        name: 'LanguageModeling',
        children: ['...']
      },
      {
        name: 'LaunchAgents',
        children: ['...']
      },
      {
        name: 'Logs',
        children: ['...']
      },
      {
        name: 'Mail',
        children: ['...']
      },
      {
        name: 'Messages',
        children: ['...']
      },
      {
        name: 'Mobile Documents',
        children: ['...']
      },
      {
        name: 'PreferencePanes',
        children: ['...']
      },
      {
        name: 'Preferences',
        children: ['...']
      },
      {
        name: 'Printers',
        children: ['...']
      },
      {
        name: 'PubSub',
        children: ['...']
      },
      {
        name: 'Safari',
        children: ['...']
      },
      {
        name: 'Saved Application State',
        children: ['...']
      },
      {
        name: 'Saved Searches',
        children: ['...']
      },
      {
        name: 'Screen Savers',
        children: ['...']
      },
      {
        name: 'ScriptingAdditions',
        children: ['...']
      },
      {
        name: 'Services',
        children: ['...']
      },
      {
        name: 'Sounds',
        children: ['...']
      },
      {
        name: 'Spelling',
        children: ['...']
      },
      {
        name: 'SyncedPreferences',
        children: ['...']
      },
      {
        name: 'Voices',
        children: ['...']
      },
      {
        name: 'WebKit',
        children: ['...']
      },
      {
        name: 'com.apple.nsurlsessiond',
        children: ['...']
      },
      {
        name: 'iMovie',
        children: ['...']
      },
      {
        name: 'iTunes',
        children: ['...']
      }
    ]
  },
  {
    name: 'Movies',
    children: ['The Avengers.avi', 'X-Men First Class.avi', 'Iron Man.avi']
  },
  {
    name: 'Music',
    children: [
      {
        name: 'Audio Music Apps',
        children: ['...']
      },
      {
        name: 'GarageBand',
        children: ['...']
      },
      {
        name: 'iTunes',
        children: ['...']
      }
    ]
  },
  {
    name: 'Pictures',
    children: ['Photos Library.photoslibrary']
  }
]

const rootFiles = [
  {
    name: 'Applications',
    children: [
      {
        name: 'App Store.app',
        children: ['...']
      },
      {
        name: 'Atom.app',
        children: ['...']
      },
      {
        name: 'Automator.app',
        children: ['...']
      },
      {
        name: 'Calculator.app',
        children: ['...']
      },
      {
        name: 'Calendar.app',
        children: ['...']
      },
      {
        name: 'Chess.app',
        children: ['...']
      },
      {
        name: 'Contacts.app',
        children: ['...']
      },
      {
        name: 'DVD Player.app',
        children: ['...']
      },
      {
        name: 'Dash.app',
        children: ['...']
      },
      {
        name: 'Dashboard.app',
        children: ['...']
      },
      {
        name: 'Dictionary.app',
        children: ['...']
      },
      {
        name: 'FaceTime.app',
        children: ['...']
      },
      {
        name: 'Font Book.app',
        children: ['...']
      },
      {
        name: 'Game Center.app',
        children: ['...']
      },
      {
        name: 'GarageBand.app',
        children: ['...']
      },
      {
        name: 'GitHub.app',
        children: ['...']
      },
      {
        name: 'Google Chrome.app',
        children: ['...']
      },
      {
        name: 'Image Capture.app',
        children: ['...']
      },
      {
        name: 'Keynote.app',
        children: ['...']
      },
      {
        name: 'Launchpad.app',
        children: ['...']
      },
      {
        name: 'Mail.app',
        children: ['...']
      },
      {
        name: 'Maps.app',
        children: ['...']
      },
      {
        name: 'Messages.app',
        children: ['...']
      },
      {
        name: 'Mission Control.app',
        children: ['...']
      },
      {
        name: 'Notes.app',
        children: ['...']
      },
      {
        name: 'Numbers.app',
        children: ['...']
      },
      {
        name: 'Pages.app',
        children: ['...']
      },
      {
        name: 'Photo Booth.app',
        children: ['...']
      },
      {
        name: 'Photos.app',
        children: ['...']
      },
      {
        name: 'Preview.app',
        children: ['...']
      },
      {
        name: 'QuickTime Player.app',
        children: ['...']
      },
      {
        name: 'Reminders.app',
        children: ['...']
      },
      {
        name: 'Safari.app',
        children: ['...']
      },
      {
        name: 'Slack.app',
        children: ['...']
      },
      {
        name: 'Stickies.app',
        children: ['...']
      },
      {
        name: 'System Preferences.app',
        children: ['...']
      },
      {
        name: 'TextEdit.app',
        children: ['...']
      },
      {
        name: 'Time Machine.app',
        children: ['...']
      },
      {
        name: 'Utilities',
        children: ['...']
      },
      {
        name: 'Xcode.app',
        children: ['...']
      },
      {
        name: 'iBooks.app',
        children: ['...']
      },
      {
        name: 'iMovie.app',
        children: ['...']
      },
      {
        name: 'iPhoto.app',
        children: ['...']
      },
      {
        name: 'iTunes.app',
        children: ['...']
      }
    ]
  },
  {
    name: 'Library',
    children: [
      {
        name: 'Application Support',
        children: ['...']
      },
      {
        name: 'Audio',
        children: ['...']
      },
      {
        name: 'Caches',
        children: ['...']
      },
      {
        name: 'ColorPickers',
        children: ['...']
      },
      {
        name: 'ColorSync',
        children: ['...']
      },
      {
        name: 'Components',
        children: ['...']
      },
      {
        name: 'Compositions',
        children: ['...']
      },
      {
        name: 'Contextual Menu Items',
        children: ['...']
      },
      {
        name: 'CoreMediaIO',
        children: ['...']
      },
      {
        name: 'Desktop Pictures',
        children: ['...']
      },
      {
        name: 'Developer',
        children: ['...']
      },
      {
        name: 'Dictionaries',
        children: ['...']
      },
      {
        name: 'DirectoryServices',
        children: ['...']
      },
      {
        name: 'Documentation',
        children: ['...']
      },
      {
        name: 'DropboxHelperTools',
        children: ['...']
      },
      {
        name: 'Extensions',
        children: ['...']
      },
      {
        name: 'Filesystems',
        children: ['...']
      },
      {
        name: 'Fonts',
        children: ['...']
      },
      {
        name: 'Frameworks',
        children: ['...']
      },
      {
        name: 'Google',
        children: ['...']
      },
      {
        name: 'Graphics',
        children: ['...']
      },
      {
        name: 'Image Capture',
        children: ['...']
      },
      {
        name: 'Input Methods',
        children: ['...']
      },
      {
        name: 'Internet Plug-Ins',
        children: ['...']
      },
      {
        name: 'Java',
        children: ['...']
      },
      {
        name: 'Keyboard Layouts',
        children: ['...']
      },
      {
        name: 'Keychains',
        children: ['...']
      },
      {
        name: 'LaunchAgents',
        children: ['...']
      },
      {
        name: 'LaunchDaemons',
        children: ['...']
      },
      {
        name: 'Logs',
        children: ['...']
      },
      {
        name: 'Messages',
        children: ['...']
      },
      {
        name: 'Modem Scripts',
        children: ['...']
      },
      {
        name: 'OpenDirectory',
        children: ['...']
      },
      {
        name: 'PDF Services',
        children: ['...']
      },
      {
        name: 'Perl',
        children: ['...']
      },
      {
        name: 'PreferencePanes',
        children: ['...']
      },
      {
        name: 'Preferences',
        children: ['...']
      },
      {
        name: 'Printers',
        children: ['...']
      },
      {
        name: 'PrivilegedHelperTools',
        children: ['...']
      },
      {
        name: 'Python',
        children: ['...']
      },
      {
        name: 'QuickLook',
        children: ['...']
      },
      {
        name: 'QuickTime',
        children: ['...']
      },
      {
        name: 'Receipts',
        children: ['...']
      },
      {
        name: 'Ruby',
        children: ['...']
      },
      {
        name: 'Sandbox',
        children: ['...']
      },
      {
        name: 'Screen Savers',
        children: ['...']
      },
      {
        name: 'ScriptingAdditions',
        children: ['...']
      },
      {
        name: 'Scripts',
        children: ['...']
      },
      {
        name: 'Security',
        children: ['...']
      },
      {
        name: 'Server',
        children: ['...']
      },
      {
        name: 'Speech',
        children: ['...']
      },
      {
        name: 'Spelling',
        children: ['...']
      },
      {
        name: 'Spotlight',
        children: ['...']
      },
      {
        name: 'StartupItems',
        children: ['...']
      },
      {
        name: 'SystemMigration',
        children: ['...']
      },
      {
        name: 'SystemProfiler',
        children: ['...']
      },
      {
        name: 'Updates',
        children: ['...']
      },
      {
        name: 'User Pictures',
        children: ['...']
      },
      {
        name: 'Video',
        children: ['...']
      },
      {
        name: 'WebServer',
        children: ['...']
      },
      {
        name: 'Widgets',
        children: ['...']
      },
      {
        name: 'iTunes',
        children: ['...']
      }
    ]
  },
  {
    name: 'Users',
    children: [
      {
        name: 'LaconaUser',
        children: userFiles
      },
      {
        name: 'Guest',
        children: ['...']
      },
      {
        name: 'Shared',
        children: ['...']
      }

    ]
  },
  {
    name: 'bin',
    children: ['bash', 'cat', 'chmod', 'cp', 'csh', 'date', 'dd', 'df', 'domainname', 'echo', 'ed', 'expr', 'hostname', 'kill', 'ksh', 'launchctl', 'link', 'ln', 'ls', 'mkdir', 'mv', 'pax', 'ps', 'pwd', 'rcp', 'rm', 'rmdir', 'sh', 'sleep', 'stty', 'sync', 'tcsh', 'test', 'unlink', 'wait4path', 'zsh']
  },
  {
    name: 'etc',
    children: [

    ]
  },
  {
    name: 'home',
    children: []
  },
  {
    name: 'net',
    children: []
  },
  {
    name: 'tmp',
    children: ['KSOutOfProcessFetcher.0.OlaJUhhgKAnFsX7fZ0FyXTFxIgg=', 'com.apple.launchd.CWPFO2w3Rj', 'com.apple.launchd.eM0bByeRbW', 'tmphosts', 'tmphosts1', 'some.tmp', 'test.tmp', 'yes.txt']
  },
  {
    name: 'usr',
    children: [
      {
        name: 'X11',
        children: ['...']
      },
      {
        name: 'X11R6',
        children: ['...']
      },
      {
        name: 'bin',
        children: ['...']
      },
      {
        name: 'include',
        children: ['...']
      },
      {
        name: 'lib',
        children: ['...']
      },
      {
        name: 'libexec',
        children: ['...']
      },
      {
        name: 'local',
        children: ['...']
      },
      {
        name: 'sbin',
        children: ['...']
      },
      {
        name: 'share',
        children: ['...']
      },
      {
        name: 'standalone',
        children: ['...']
      }
    ]
  },
  {
    name: 'var',
    children: [
      {
        name: 'Keychains',
        children: ['...']
      },
      {
        name: 'agentx',
        children: ['...']
      },
      {
        name: 'at',
        children: ['...']
      },
      {
        name: 'audit',
        children: ['...']
      },
      {
        name: 'backups',
        children: ['...']
      },
      {
        name: 'db',
        children: ['...']
      },
      {
        name: 'empty',
        children: ['...']
      },
      {
        name: 'folders',
        children: ['...']
      },
      {
        name: 'folders~orig',
        children: ['...']
      },
      {
        name: 'jabberd',
        children: ['...']
      },
      {
        name: 'lib',
        children: ['...']
      },
      {
        name: 'log',
        children: ['...']
      },
      {
        name: 'mail',
        children: ['...']
      },
      {
        name: 'msgs',
        children: ['...']
      },
      {
        name: 'netboot',
        children: ['...']
      },
      {
        name: 'networkd',
        children: ['...']
      },
      {
        name: 'root',
        children: ['...']
      },
      {
        name: 'rpc',
        children: ['...']
      },
      {
        name: 'run',
        children: ['...']
      },
      {
        name: 'rwho',
        children: ['...']
      },
      {
        name: 'spool',
        children: ['...']
      },
      {
        name: 'tmp',
        children: ['...']
      },
      {
        name: 'vm',
        children: ['...']
      },
      {
        name: 'yp',
        children: ['...']
      }
    ]
  }
]

const tunes = [ { name: 'I\'m Good',
    artist: 'The Mowgli\'s',
    album: 'I\'m Good',
    genre: 'Pop' },
  { name: 'Baby Love',
    artist: 'Petite Meller',
    album: 'Baby Love',
    genre: 'Pop' },
  { name: 'T-Shirt Weather',
    artist: 'Circa Waves',
    album: 'T-Shirt Weather',
    genre: 'Pop' },
  { name: 'Fade Out Lines - The Avener Rework',
    artist: 'The Avener & Phoebe Killdeer',
    album: 'Fade Out Lines',
    genre: 'Pop' },
  { name: 'Salt',
    artist: 'Bad Suns',
    album: 'Language & Perspective',
    genre: 'Pop' },
  { name: 'Ship To Wreck',
    artist: 'Florence + The Machine',
    album: 'Ship To Wreck',
    genre: 'Pop' },
  { name: 'Couch Potato',
    artist: 'Shortstraw',
    album: 'Good Morning, Sunshine',
    genre: 'Pop' },
  { name: 'Good Day',
    artist: 'distant cousins',
    album: 'Good Day',
    genre: 'Pop' },
  { name: 'Ex\'s & Oh\'s',
    artist: 'Elle King',
    album: 'Love Stuff',
    genre: 'Pop' },
  { name: 'Irresistible',
    artist: 'Fall Out Boy',
    album: 'American Beauty/American Psycho',
    genre: 'Pop' },
  { name: 'Centuries',
    artist: 'Fall Out Boy',
    album: 'American Beauty/American Psycho',
    genre: 'Pop' },
  { name: 'Light Me Up',
    artist: 'Flyte',
    album: 'Light Me Up',
    genre: 'Pop' },
  { name: 'Violins',
    artist: 'I\'m From Barcelona',
    album: 'Violins',
    genre: 'Pop' },
  { name: 'I Bet My Life',
    artist: 'Imagine Dragons',
    album: 'Smoke + Mirrors (Deluxe)',
    genre: 'Pop' },
  { name: 'RIVA (Restart the Game) - Radio Edit',
    artist: 'Klingande',
    album: 'RIVA (Restart The Game) [Radio Edit]',
    genre: 'Pop' },
  { name: 'Lean On (feat. MØ & DJ Snake)',
    artist: 'Major Lazer',
    album: 'Lean On (feat. MØ & DJ Snake)',
    genre: 'Pop' },
  { name: 'Got It',
    artist: 'Marian Hill',
    album: 'Sway',
    genre: 'Pop' },
  { name: 'Can You Blame Me',
    artist: 'Matt and Kim',
    album: 'Can You Blame Me',
    genre: 'Pop' },
  { name: 'Talk About You',
    artist: 'MIKA',
    album: 'Talk About You',
    genre: 'Pop' },
  { name: 'Love Like Mine',
    artist: 'Miami Horror',
    album: 'Love Like Mine',
    genre: 'Pop' },
  { name: 'Our Own House',
    artist: 'MisterWives',
    album: 'Our Own House',
    genre: 'Pop' },
  { name: 'The Rhythm',
    artist: 'MNEK',
    album: 'The Rhythm',
    genre: 'Pop' },
  { name: 'Magic (feat. Nile Rodgers and Brandy)',
    artist: 'Mystery Skulls',
    album: 'Forever',
    genre: 'Pop' },
  { name: 'Never Gets Old',
    artist: 'Penguin Prison',
    album: 'Never Gets Old',
    genre: 'Pop' },
  { name: 'Karaoke',
    artist: 'Smallpools',
    album: 'Karaoke',
    genre: 'Pop' },
  { name: 'Robot Love',
    artist: 'Urban Cone',
    album: 'Robot Love',
    genre: 'Pop' },
  { name: 'King',
    artist: 'Years & Years',
    album: 'King',
    genre: 'Pop' },
  { name: 'So Cruel',
    artist: 'Young Empires',
    album: 'So Cruel',
    genre: 'Pop' },
  { name: 'The Night Is Still Young',
    artist: 'Nicki Minaj',
    album: 'The Pinkprint',
    genre: 'Pop' },
  { name: 'I Will Never Let You Down',
    artist: 'Rita Ora',
    album: 'I Will Never Let You Down',
    genre: 'Pop' },
  { name: 'Never Been In Love (feat. Icona Pop)',
    artist: 'Cobra Starship',
    album: 'Never Been In Love (feat. Icona Pop)',
    genre: 'Pop' },
  { name: 'What I did for Love (feat. Emeli Sandé)',
    artist: 'David Guetta',
    album: 'Listen (Deluxe)',
    genre: 'Pop' },
  { name: 'Want To Want Me',
    artist: 'Jason Derulo',
    album: 'Want To Want Me',
    genre: 'Pop' },
  { name: 'Iron Man',
    artist: 'Black Sabbath',
    album: 'Paranoid',
    genre: 'Metal' },
  { name: 'Stronger',
    artist: 'Clean Bandit',
    album: 'New Eyes',
    genre: 'Rock' },
  { name: 'Stole the Show',
    artist: 'Kygo',
    album: 'Stole the Show',
    genre: 'Jazz' },
  { name: 'In Your Arms',
    artist: 'Nico & Vinz',
    album: 'Black Star Elephant',
    genre: 'Folk' },
  { name: 'Intoxicated',
    artist: 'Martin Solveig',
    album: 'Intoxicated (Radio Edit)',
    genre: 'Indie' },
  { name: 'Runaway (U & I)',
    artist: 'Galantis',
    album: 'Runaway (U & I)',
    genre: 'Pop' },
  { name: 'Outside',
    artist: 'Calvin Harris',
    album: 'Motion',
    genre: 'Pop' },
  { name: 'Crazy For You',
    artist: 'Hedley',
    album: 'Wild Life',
    genre: 'Pop' },
  { name: 'Kathleen',
    artist: 'Catfish and the Bottlemen',
    album: 'The Balcony',
    genre: 'Pop' },
  { name: 'Work This Body',
    artist: 'Walk the Moon',
    album: 'TALKING IS HARD',
    genre: 'Pop' },
  { name: 'Seeing Stars',
    artist: 'BØRNS',
    album: 'Candy',
    genre: 'Pop' },
  { name: 'If It\'s Not You',
    artist: 'Keljet',
    album: 'Keljet x AYER - If It\'s Not You',
    genre: 'Pop' },
  { name: 'The Nights',
    artist: 'Avicii',
    album: 'The Days / Nights',
    genre: 'Pop' },
  { name: 'Pay No Mind',
    artist: 'Madeon',
    album: 'Adventure (Deluxe)',
    genre: 'Pop' },
  { name: 'Best Fake Smile',
    artist: 'James Bay',
    album: 'Chaos And The Calm',
    genre: 'Pop' },
  { name: 'Savages',
    artist: 'Marina and The Diamonds',
    album: 'FROOT',
    genre: 'Pop' },
  { name: 'Human Contact',
    artist: 'Catey Shaw',
    album: 'The Brooklyn EP',
    genre: 'Pop' },
  { name: 'Hum Hum',
    artist: 'Mating Ritual',
    album: 'Hum Hum',
    genre: 'Pop' },
  { name: 'Cold Cold Man',
    artist: 'Saint Motel',
    album: 'My Type EP',
    genre: 'Pop' },
  { name: 'Theme Music'} ]

class FileList extends Phrase {
  getValue (result) {
    if (result.dir) {
      const dir = result.dir === '~' ? '/Users/LaconaUser' : result.dir
      return `${dir}/${result.file}`
    } else {
      return result
    }
  }

  describe () {
    if (_.isPlainObject(this.props.directoryOrFile)) {
      return (
          <sequence>
            <literal text={`${this.props.directoryOrFile.name}/`} id='dir' value={this.props.directoryOrFile.name} />
            <argument text='content' id='file'>
              <choice>
                <literal text='' value='' />
                {_.map(this.props.directoryOrFile.children, child => <FileList directoryOrFile={child} />)}
              </choice>
            </argument>
          </sequence>
      )
    } else {
      return (
        <literal text={this.props.directoryOrFile} value={this.props.directoryOrFile} />
      )
    }
  }
}

class File extends Phrase {
  describe () {
    return (
      <choice>
        <argument text='path' showForEmpty={true}>
          <choice>
            <FileList directoryOrFile={{name: '~', children: userFiles}} />
            <FileList directoryOrFile={{name: '', children: rootFiles}} />
          </choice>
        </argument>
        <argument text='file' showForEmpty={true}>
          <list items={[
            {text: 'log.csv', value: '/Users/LaconaUser/Documents/log.csv'},
            {text: 'lacona-logo.png', value: '/Users/LaconaUser/Documents/lacona-logo.png'},
            {text: 'kickstarter-video.m4v', value: '/Users/LaconaUser/Documents/kickstarter-video.m4v'},
            {text: 'document.docx', value: '/Users/LaconaUser/Documents/document.docx'},
            {text: 'my-document.docx', value: '/Users/LaconaUser/Documents/my-document.docx'},
            {text: 'main.js', value: '/Users/LaconaUser/Projects/test/main.js'},
            {text: 'package.json', value: '/Users/LaconaUser/Projects/test/package.json'},
            {text: 'lodash.js', value: '/Users/LaconaUser/Projects/test/lodash.js'},
            {text: 'react-router.jsx', value: '/Users/LaconaUser/Projects/test/react-router.jsx'},
            {text: 'briefing 1_2.keynote', value: '/Users/LaconaUser/Documents/Presentations/briefing 1_2.keynote'},
            {text: 'briefing 2_24.keynote', value: '/Users/LaconaUser/Documents/Presentations/briefing 2_24.keynote'},
            {text: 'briefing 5_5.keynote', value: '/Users/LaconaUser/Documents/Presentations/briefing 5_5.keynote'},
            {text: 'status-updates.txt', value: '/Users/LaconaUser/status-updates.txt'},
            {text: 'todo.txt', value: '/Users/LaconaUser/todo.txt'},
            {text: 'main.cpp', value: '/Users/LaconaUser/Projects/cpp-test/main.cpp'},
            {text: 'main.h', value: '/Users/LaconaUser/Projects/cpp-test/main.h'},
            {text: 'quick-brown-fox.js', value: '/Users/LaconaUser/Projects/cpp-test/quick-brown-fox.js'},
            {text: 'overjumper.cs', value: '/Users/LaconaUser/Projects/cpp-test/overjumper.cs'},
            {text: 'overjumper.h', value: '/Users/LaconaUser/Projects/cpp-test/overjumper.h'},
            {text: 'lazy_dog.js', value: '/Users/LaconaUser/Projects/cpp-test/lazy_dog.js'}
          ]} fuzzy={true} />
      </argument>
      </choice>
    )
  }
}

class SystemPreference extends Phrase {
  describe () {
    return (
      <argument text='preference pane' showForEmpty={true}>
        <list items={[
          {text: 'Displays', value: 'Displays'},
          {text: 'Desktop & Screen Saver', value: 'Desktop & Screen Saver'},
          {text: 'Extensions', value: 'Extensions'},
          {text: 'Energy Saver', value: 'Energy Saver'},
          {text: 'Sound', value: 'Sound'},
          {text: 'Keyboard', value: 'Keyboard'},
          {text: 'Internet Accounts', value: 'Internet Accounts'},
          {text: 'Date & Time', value: 'Date & Time'},
          {text: 'Accessibility', value: 'Accessibility'},
          {text: 'Security & Privacy', value: 'Security & Privacy'},
          {text: 'Dock', value: 'Dock'},
          {text: 'Profiles', value: 'Profiles'},
          {text: 'Network', value: 'Network'},
          {text: 'Notifications', value: 'Notifications'},
          {text: 'Fibre Channel', value: 'Fibre Channel'},
          {text: 'App Store', value: 'App Store'},
          {text: 'Time Machine', value: 'Time Machine'},
          {text: 'General', value: 'General'},
          {text: 'Dictation & Speech', value: 'Dictation & Speech'},
          {text: 'Spotlight', value: 'Spotlight'},
          {text: 'Ink', value: 'Ink'},
          {text: 'Language & Region', value: 'Language & Region'},
          {text: 'CDs & DVDs', value: 'CDs & DVDs'},
          {text: 'Sharing', value: 'Sharing'},
          {text: 'Users & Groups', value: 'Users & Groups'},
          {text: 'Bluetooth', value: 'Bluetooth'},
          {text: 'Mouse', value: 'Mouse'},
          {text: 'Trackpad', value: 'Trackpad'},
          {text: 'Mission Control', value: 'Mission Control'},
          {text: 'Startup Disk', value: 'Startup Disk'},
          {text: 'Parental Controls', value: 'Parental Controls'},
          {text: 'Printers & Scanners', value: 'Printers & Scanners'},
          {text: 'iCloud', value: 'iCloud'}
        ]} />
      </argument>
    )
  }
}

class Application extends Phrase {
  describe () {
    return (
      <argument text='application' showForEmpty={true}>
        <list score={1} items={[
          {text: 'Calendar', value: 'Calendar'},
          {text: 'Contacts', value: 'Contacts'},
          {text: 'FaceTime', value: 'FaceTime'},
          {text: 'Finder', value: 'Finder'},
          {text: 'Game Center', value: 'Game Center'},
          {text: 'GarageBand', value: 'GarageBand'},
          {text: 'iBooks', value: 'iBooks'},
          {text: 'iMovie', value: 'iMovie'},
          {text: 'iPhoto', value: 'iPhoto'},
          {text: 'iTunes', value: 'iTunes'},
          {text: 'Keynote', value: 'Keynote'},
          {text: 'App Store', value: 'App Store'},
          {text: 'Mail', value: 'Mail'},
          {text: 'Maps', value: 'Maps'},
          {text: 'Messages', value: 'Messages'},
          {text: 'Notes', value: 'Notes'},
          {text: 'Numbers', value: 'Numbers'},
          {text: 'Pages', value: 'Pages'},
          {text: 'Photo Booth', value: 'Photo Booth'},
          {text: 'Reminders', value: 'Reminders'},
          {text: 'Safari', value: 'Safari'},
          {text: 'Google Chrome', value: 'Google Chrome'},
          {text: 'Firefox', value: 'Firefox'},
          {text: 'Automator', value: 'Automator'},
          {text: 'Calculator', value: 'Calculator'},
          {text: 'Chess', value: 'Chess'},
          {text: 'Dictionary', value: 'Dictionary'},
          {text: 'DVD Player', value: 'DVD Player'},
          {text: 'Font Book', value: 'Font Book'},
          {text: 'Image Capture', value: 'Image Capture'},
          {text: 'Preview', value: 'Preview'},
          {text: 'QuickTime Player', value: 'QuickTime Player'},
          {text: 'Stickies', value: 'Stickies'},
          {text: 'System Information', value: 'System Information'},
          {text: 'TextEdit', value: 'TextEdit'},
          {text: 'VoiceOver Utility', value: 'VoiceOver Utility'}
        ]} fuzzy={true} />
      </argument>
    )
  }
}

class Bookmark extends Phrase {
  describe () {
    return (
      <argument text='bookmark' showForEmpty={true}>
        <list items={[
          {text: 'Facebook', value:'http://facebook.com'},
          {text: 'Twitter', value:'http://twitter.com'},
          {text: 'Google', value:'http://google.com'},
          {text: 'Lifehacker', value:'http://lifehacker.com'},
          {text: 'xkcd', value:'http://xkcd.com'},
          {text: 'Github', value:'http://github.com'},
          {text: 'Gmail', value:'http://gmail.com'},
          {text: 'Youtube', value:'http://youtube.com'},
          {text: 'Wikipedia', value:'http://wikipedia.org'},
          {text: 'Ebay', value:'http://ebay.com'}
        ]} fuzzy={true} />
    </argument>
    )
  }
}

class AppsGroup extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', ', ', and ']} limit={1} max={this.props.max} />}>
        <choice>
          <Application id='app' />
        </choice>
      </repeat>
    )
  }
}

class OpenableGroup extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', ', ', and ']} limit={1} />}>
        <choice>
          <Application id='app' />
          <URL id='url' />
          <Bookmark id='url' />
          <File id='file' />
          <SystemPreference id='pref' />
        </choice>
      </repeat>
    )
  }
}

class OpenInableGroup extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', ', ', and ']} limit={1} />}>
        <choice>
          <URL id='url' />
          <Bookmark id='url' />
          <File id='file' />
        </choice>
      </repeat>
    )
  }
}

class Open extends Phrase {
  filter (result) {
    const allPrefs = _.filter(result.things, 'pref')
    return allPrefs.length < 2
  }

  describe () {
    return (
      <choice id='open'>
        <sequence>
          <literal text='open ' category='action' value='open' id='verb' />
          <choice merge={true}>
            <OpenableGroup id='things' />
            <sequence>
              <OpenInableGroup id='things' />
              <list items={[' with ', ' using ', ' in ']} limit={1} category='conjunction' />
              <AppsGroup id='openin' />
            </sequence>
          </choice>
        </sequence>
        <sequence>
          <literal text='switch to ' category='action' value='switch' id='verb' />
          <AppsGroup max={1} id='things' />
        </sequence>
        <sequence>
          <list items={[
              {text: 'close ', value: 'close'},
              {text: 'quit ', value: 'quit'},
              {text: 'kill ', value: 'kill'},
              {text: 'launch ', value: 'open'}
            ]} id='verb' category='action' limit={2} />
          <AppsGroup id='things' />
        </sequence>
      </choice>
    )
  }
}

export const open = {
  grammar: <Open id='open' />
}

class Birthday extends Phrase {
  getValue () {
    return new Date(2015, 9, 11, 0, 0, 0, 0)
  }

  describe () {
    return (
      <sequence>
        <literal text='on ' />
        <argument text='birthday' merge={true}>
          <choice>
            <sequence>
              <Contact argument={false} merge={true} />
              <literal text="'s birthday" />
            </sequence>
            <sequence>
              <Relationship argument={false} merge={true} />
              <literal text="'s birthday" />
            </sequence>
          </choice>
        </argument>
      </sequence>
    )
  }
}
Birthday.extends = [DatePhrase]

class Holiday extends Phrase {
  describe () {
    return (
      <argument text='holiday' showForEmpty={true}>
        <list items={[
          {text: 'New Years Day', value: new Date(2016, 0, 1)},
          {text: 'Martin Luther King Jr. Day', value: new Date(2016, 0, 18)},
          {text: 'Martin Luther King Day', value: new Date(2016, 0, 18)},
          {text: 'Dr. Martin Luther King Jr. Day', value: new Date(2016, 0, 18)},
          {text: 'Dr. Martin Luther King Day', value: new Date(2016, 0, 18)},
          {text: 'Valentines Day', value: new Date(2016, 1, 14)},
          {text: "Washington's Birthday", value: new Date(2016, 1, 15)},
          {text: 'Presidents Day', value: new Date(2016, 1, 15)},
          {text: 'Presidents Day', value: new Date(2016, 1, 15)},
          {text: 'Memorial Day', value: new Date(2016, 4, 30)},
          {text: 'Independence Day', value: new Date(2016, 6, 4)},
          {text: 'The Fourth of July', value: new Date(2016, 6, 4)},
          {text: 'Labor Day', value: new Date(2015, 8, 7)},
          {text: 'Columbus Day', value: new Date(2015, 9, 12)},
          {text: 'Christopher Columbus Day', value: new Date(2015, 9, 12)},
          {text: 'American Indian Day', value: new Date(2015, 9, 12)},
          {text: 'Native American Day', value: new Date(2015, 9, 12)},
          {text: "Indigenous People's Day ", value: new Date(2015, 9, 12)},
          {text: 'Veterans Day', value: new Date(2015, 10, 11)},
          {text: 'Thanksgiving Day', value: new Date(2015, 10, 26)},
          {text: 'Christmas Eve', value: new Date(2015, 11, 24)},
          {text: 'Christmas Day', value: new Date(2015, 11, 25)},
          {text: 'New Years Eve', value: new Date(2015, 11, 31)}]} />
      </argument>
    )
  }
}
Holiday.extends = [DatePhrase]

class LocationWithAt extends Phrase {
  describe () {
    return (
      <sequence>
        <list items={[' at ', ' on ', ' in ']} limit={1} category='conjunction' />
        <argument text='location' merge={true}>
          <freetext limit={1} splitOn=' ' />
        </argument>
      </sequence>
    )
  }
}

export const date = {
  grammar: (
    <choice id='date'>
      <sequence id='event' unique={true}>
        <list items={['schedule ', 'create an event ', 'create event ', 'add an event ', 'add event ']} limit={1} category='action' />
        <argument text='calendar event' id='title'>
          <freetext limit={1} splitOn=' ' />
        </argument>
        <LocationWithAt optional={true} id='location' prefered={false} />
        <list items={[' for ', ' at ', ' ']} category='conjunction' limit={1} />
        <choice limit={1} merge={true}>
          <DateTime id='datetime' />
          <Time id='time' />
          <DatePhrase id='date' />
          <TimePeriod id='period' />
        </choice>
        <LocationWithAt optional={true} prefered={false} id='location' />
      </sequence>
      <sequence id='reminder'>
        <list items={['remind me to ', 'create reminder ', 'create a reminder ', 'add a reminder ', 'add reminder ']} limit={1} category='action' />
        <argument text='reminder title' id='title'>
          <freetext limit={1} splitOn=' ' />
        </argument>
        <sequence optional={true} merge={true}>
          <literal text=' ' category='conjunction' />
          <choice merge={true}>
            <Time id='time' includeAt={true} allowPast={false} />
            <DatePhrase id='date' allowPast={false} />
            <DateTime id='datetime' includeAt={true} allowPast={false} />
          </choice>
        </sequence>
      </sequence>
    </choice>
  ),
  extensions: [Birthday, Holiday]
}

const engines = [
  {text: 'Google', value: 'Google'},
  {text: 'Wikipedia', value: 'Wikipedia'},
  {text: 'Bing', value: 'Bing'},
  {text: 'Yahoo', value: 'Yahoo'},
  {text: 'Amazon', value: 'Amazon'},
  {text: 'Google Images', value: 'Google Images'},
  {text: 'DuckDuckGo', value: 'DuckDuckGo'},
  {text: 'Pinterest', value: 'Pinterest'},
  {text: 'Google Maps', value: 'Google Maps'},
  {text: 'Gmail', value: 'Gmail'},
  {text: 'Google Drive', value: 'Google Drive'},
  {text: 'Apple Maps', value: 'Apple Maps'},
  {text: 'Twitter', value: 'Twitter'},
  {text: 'IMDB', value: 'IMDB'},
  {text: 'LinkedIn', value: 'LinkedIn'},
  {text: 'Youtube', value: 'Youtube'},
  {text: 'Rotten Tomatoes', value: 'Rotten Tomatoes'},
  {text: 'Yubnub', value: 'Yubnub'},
  {text: 'Wolfram Alpha', value: 'Wolfram|Alpha'},
  {text: 'Facebook', value: 'Facebook'},
  {text: 'eBay', value: 'eBay'}
]

class SearchEngines extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', ', ', and']} limit={1} />}>
        <argument text='search engine'>
          <list items={engines} fuzzy={true} limit={5} />
        </argument>
      </repeat>
    )
  }
}

export const search = {
  grammar: (
    <choice limit={1} id='search'>
      <sequence>
        <literal text='search ' category='action' />
        <SearchEngines id='engines' />
        <literal text=' ' />
        <decorator text='for ' category='conjunction' />
        <argument text='query' id='query'>
          <freetext consumeAll={true} />
        </argument>
      </sequence>
      <sequence>
        <literal text='search ' category='action' />
        <literal text='for ' category='conjunction' optional={true} prefered={true} limited={true} />
        <argument text='query' id='query'>
          <freetext splitOn={' '} limit={1} />
        </argument>
        <list items={[' on ', ' with ', ' using ']} limit={1} />
        <descriptor text='search engine' argument={true}>
          <list items={engines} fuzzy={true} limit={5} />
        </descriptor>
        <sequence optional={true}>
          <list items={[' and ', ', ', ', and']} limit={1} />
          <SearchEngines id='engines'/>
        </sequence>
      </sequence>
    </choice>
  )
}


// if (global.location && global.location.hash === '#videodemo') {
//   search.grammar = (
//     <choice>
//       <sequence>
//         <literal text='ابحث ' category='action' />
//         <literal text='في ' category='conjunction' />
//         <argument text='محرك البحث'>
//           <choice>
//             <literal text='جوجل' />
//             <literal text='يملي' />
//           </choice>
//         </argument>
//         <literal text=' ' />
//         <argument text='بحث'>
//           <freetext />
//         </argument>
//       </sequence>
//
//       <sequence>
//         <literal text='найти ' category='action' />
//         <literal text='в ' category='conjunction' />
//         <argument text='поисковик'>
//           <choice>
//             <literal text='Яндексе' />
//             <literal text='Гугле' />
//           </choice>
//         </argument>
//         <literal text=' ' />
//         <argument text='запрос'>
//           <freetext />
//         </argument>
//       </sequence>
//
//       <sequence>
//         <literal text='buscar ' category='action' />
//         <literal text='en ' category='conjunction' />
//         <argument text='buscador'>
//           <literal text='Google' />
//         </argument>
//         <literal text=' ' category='conjunction' />
//         <argument text='consulta'>
//           <freetext />
//         </argument>
//       </sequence>
//
//       <sequence>
//         <literal text='在' category='conjunction' />
//         <argument text='搜寻引擎'>
//           <choice>
//             <literal text='百度' />
//             <literal text='Google' />
//           </choice>
//         </argument>
//         <literal text='上' category='conjunction' />
//         <literal text='搜索' category='action' />
//         <argument text='查询'>
//           <freetext />
//         </argument>
//       </sequence>
//     </choice>
//   )
// }

function itemify (x) {
  return {text: x, value: x}
}

class MusicItems extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', ', ', and ']} limit={1} />}>
        <choice>
          <argument text='song' showForEmpty={true} id='song'>
            <list fuzzy={true} items={_.chain(tunes).map('name').filter().map(itemify).value()} limit={10} />
          </argument>
          <argument text='album' showForEmpty={true} id='album'>
            <list fuzzy={true} items={_.chain(tunes).map('album').filter().unique().map(itemify).value()} limit={10} />
          </argument>
          <argument text='artist' showForEmpty={true} id='artist'>
            <list fuzzy={true} items={_.chain(tunes).map('artist').filter().unique().map(itemify).value()} limit={10} />
          </argument>
          <argument text='genre' showForEmpty={true} id='genre'>
            <list fuzzy={true} items={_.chain(tunes).map('genre').filter().unique().map(itemify).value()} limit={10} />
          </argument>
          <argument text='playlist' showForEmpty={true} id='playlist'>
            <list fuzzy={true} items={['Jams', 'Chill', 'Workout', 'Driving'].map(itemify)} />
          </argument>
          <argument text='composer' showForEmpty={true} id='composer'><literal /></argument>
        </choice>
      </repeat>
    )
  }
}

export const play = {
  grammar: (
    <choice id='play'>
      <sequence>
        <literal text='play ' category='action'/>
        <choice merge={true}>
          <sequence>
            <MusicItems id='something' />
            <sequence merge={true} optional={true} id='shuffled' value={true}>
              <literal text=' ' />
              <descriptor argument={true} text='shuffled'>
                <literal text='shuffled' />
              </descriptor>
            </sequence>
          </sequence>
          <list id='previous' value={true} items={['previous track', 'previous song']} limit={1} category='argument5' />
        </choice>
      </sequence>
      <choice limit={1} value={{next: true}}>
        <sequence>
          <literal text='play ' category='action'/>
          <list items={['next track', 'next song']} limit={1} category='argument5' />
        </sequence>
        <sequence>
          <literal text='skip ' category='action'/>
          <list items={['track', 'song', 'this track', 'this song']} limit={1} category='argument5' />
        </sequence>
      </choice>
      <list value={{pause: true}} items={['pause music', 'pause this track', 'pause iTunes', 'pause track', 'pause song']} limit={1} category='action' />
      <list value={{stop: true}} items={['stop music', 'stop iTunes', 'stop track', 'stop song']} limit={1} category='action' />
    </choice>
  )
}

const contacts = [
  {text: 'Tony Stark', value: 'Tony Stark'},
  {text: 'Donald Blake', value: 'Donald Blake'},
  {text: 'Henry Pym', value: 'Henry Pym'},
  {text: 'Bruce Banner', value: 'Bruce Banner'},
  {text: 'Steve Rogers', value: 'Steve Rogers'},
  {text: 'Clinton Barton', value: 'Clinton Barton'},
  {text: 'Wanda Maximoff', value: 'Wanda Maximoff'},
  {text: 'Victor Shade', value: 'Victor Shade'},
  {text: 'Natalia Romanova', value: 'Natalia Romanova'},
  {text: 'Jennifer Walters', value: 'Jennifer Walters'},
  {text: 'Hank McCoy', value: 'Hank McCoy'},
  {text: 'Peter Quill', value: 'Peter Quill'},
  {text: 'Reed Richards', value: 'Reed Richards'},
  {text: 'Susan Richards', value: 'Susan Richards'},
  {text: 'Jim Hammond', value: 'Jim Hammond'},
  {text: 'Benjamin Grimm', value: 'Benjamin Grimm'},
  {text: 'Peter Parker', value: 'Peter Parker'},
  {text: 'Luke Cage', value: 'Luke Cage'},
  {text: 'Logan Howlett', value: 'Logan Howlett'},
  {text: 'James Barnes', value: 'James Barnes'},
  {text: 'Steven Strange', value: 'Steven Strange'},
  {text: 'Matt Murdock', value: 'Matt Murdock'},
  {text: 'Scott Summers', value: 'Scott Summers'},
  {text: 'Charles Xavier', value: 'Charles Xavier'},
  {text: 'Bobby Drake', value: 'Bobby Drake'},
  {text: 'Jean Grey-Summers', value: 'Jean Grey-Summers'},
  {text: 'Kurt Wagner', value: 'Kurt Wagner'},
  {text: 'Ororo Monroe', value: 'Ororo Monroe'},
  {text: 'Anna Marie', value: 'Anna Marie'},
  {text: 'Erik Lehnsherr', value: 'Erik Lehnsherr'}
]

class Contact extends Phrase {
  describe () {
    const firstNames = _.map(contacts, ({text, value}) => ({
      text: text.split(' ')[0],
      value,
      qualifier: text
    }))

    return (
      <descriptor placeholder={true} argument={this.props.argument} text='contact' showForEmpty={true}>
        <choice limit={1}>
          <list items={contacts} />
          <list items={firstNames} />
        </choice>
      </descriptor>
    )
  }
}
Contact.defaultProps = {
  argument: true
}


class Relationship extends Phrase {
  describe () {
    return (
      <descriptor placeholder={true} argument={this.props.argument} text='relationship' showForEmpty={true}>
        <sequence>
          <literal text='my ' optional={true} limited={true} />
          <list merge={true} items={[
            {text: 'Mom', value: 'your mom'},
            {text: 'Dad', value: 'your dad'},
            {text: 'Landlord', value: 'your landlord'},
            {text: 'Boss', value: 'your boss'},
            {text: 'Girlfriend', value: 'your girlfriend'},
            {text: 'Wife', value: 'your wife'},
            {text: 'Boyfriend', value: 'your boyfriend'},
            {text: 'Husband', value: 'your husband'}
          ]} />
        </sequence>
      </descriptor>
    )
  }
}
Relationship.defaultProps = {
  argument: true
}

class EmailGroup extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', and ', ', ']} limit={1} />}>
        <choice>
          <Email id='address' />
          <Relationship id='relationship' />
          <Contact id='contact' />
        </choice>
      </repeat>
    )
  }
}

class NumberGroup extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', and ', ', ']} limit={1} max={this.props.max} />}>
        <choice>
          <PhoneNumber id='number' />
          <Relationship id='relationship' />
          <Contact id='contact' />
        </choice>
      </repeat>
    )
  }
}

class AllGroup extends Phrase {
  describe () {
    return (
      <repeat unique={true} separator={<list items={[' and ', ', and ', ', ']} limit={1} max={this.props.max} />}>
        <choice>
          <Relationship id='relationship' />
          <Contact id='contact' />
          <PhoneNumber id='number' />
          <Email id='address' />
        </choice>
      </repeat>
    )
  }
}


export const contact = {
  grammar: (
    <choice id='contact'>
      <choice id='email'>
        <sequence>
          <list items={['email ', 'send an email to ', 'send email to ', 'shoot an email to ']} category='action' limit={1} />
          <EmailGroup id='to' />
        </sequence>
        <sequence>
          <list items={['send ']} category='action' limit={1} />
          <EmailGroup id='to' />
          <literal text=' an email' />
        </sequence>
        <sequence>
          <list items={['email ', 'send ']} category='action' limit={1}/>
          <argument text='message' id='message'>
            <freetext splitOn=' ' limit={1} />
          </argument>
          <literal text=' to ' category='conjunction' />
          <EmailGroup id='to' />
        </sequence>
        <sequence>
          <list items={['email ', 'send an email to ', 'send email to ', 'shoot an email to ']} category='action' limit={1} />
          <EmailGroup id='to' />
          <choice limit={1}>
            <literal text=' about ' />
            <literal text=' ' />
          </choice>
          <argument text='message' id='message'>
            <freetext splitOn=' ' limit={1} />
          </argument>
        </sequence>
        <sequence>
          <list items={['send ']} category='action' limit={1} />
          <EmailGroup id='to' />
          <choice limit={1} category='action'>
            <literal text=' an email about ' />
            <literal text=' an email ' />
            <literal text=' email about ' />
            <literal text=' email ' />
          </choice>
          <argument text='message' id='message'>
            <freetext splitOn=' ' limit={1} />
          </argument>
        </sequence>
      </choice>
      <sequence id='call'>
        <list items={['call ', 'ring ', 'call up ', 'ring up ']} category='action' limit={1} />
        <NumberGroup merge={true} max={1} />
      </sequence>
      <sequence id='facetime'>
        <literal text='facetime ' category='action' />
        <AllGroup merge={true} max={1} />
      </sequence>
      <choice id='text'>
        <sequence>
          <list items={['text ', 'iMessage ', 'shoot a text to ', 'send a text to ']} limit={1} category='action' />
          <AllGroup />
        </sequence>
        <sequence>
          <list items={['text ', 'iMessage ']} limit={1} category='action' />
          <argument text='message' id='message'>
            <freetext splitOn=' ' limit={1} />
          </argument>
          <literal text=' to ' category='conjunction' />
          <AllGroup id='to' />
        </sequence>
        <sequence>
          <list items={['send ']} limit={1} category='action' />
          <AllGroup id='to' />
          <choice limit={1} category='action'>
            <literal text=' a text saying ' />
            <literal text=' an iMessage saying' />
            <literal text=' a text ' />
            <literal text=' an iMessage' />
          </choice>
          <argument text='message' id='message'>
            <freetext splitOn=' ' limit={1} />
          </argument>
        </sequence>
        <sequence>
          <list items={['text ', 'iMessage ']} limit={1} category='action' />
          <AllGroup id='to' />
          <choice limit={1}>
            <literal text=' saying ' />
            <literal text=' ' />
          </choice>
          <argument text='message' id='message'>
            <freetext splitOn=' ' limit={1} />
          </argument>
        </sequence>
      </choice>
    </choice>
  )
}

class Language extends Phrase {
  describe () {
    return (
      <argument text='language'>
        <list items={[
          {text: 'Afrikaans', value: 'Afrikaans'},
          {text: 'Albanian', value: 'Albanian'},
          {text: 'Arabic', value: 'Arabic'},
          {text: 'Armenian', value: 'Armenian'},
          {text: 'Azerbaijani', value: 'Azerbaijani'},
          {text: 'Basque', value: 'Basque'},
          {text: 'Belarusian', value: 'Belarusian'},
          {text: 'Bengali', value: 'Bengali'},
          {text: 'Bosnian', value: 'Bosnian'},
          {text: 'Bulgarian', value: 'Bulgarian'},
          {text: 'Catalan', value: 'Catalan'},
          {text: 'Cebuano', value: 'Cebuano'},
          {text: 'Chichewa', value: 'Chichewa'},
          {text: 'Chinese', value: 'Chinese (Simplified)'},
          {text: 'Chinese (Simplified)', value: 'Chinese (Simplified)'},
          {text: 'Chinese (Traditional)', value: 'Chinese (Traditional)'},
          {text: 'Croatian', value: 'Croatian'},
          {text: 'Czech', value: 'Czech'},
          {text: 'Danish', value: 'Danish'},
          {text: 'Dutch', value: 'Dutch'},
          {text: 'English', value: 'English'},
          {text: 'Esperanto', value: 'Esperanto'},
          {text: 'Estonian', value: 'Estonian'},
          {text: 'Filipino', value: 'Filipino'},
          {text: 'Finnish', value: 'Finnish'},
          {text: 'French', value: 'French'},
          {text: 'Galician', value: 'Galician'},
          {text: 'Georgian', value: 'Georgian'},
          {text: 'German', value: 'German'},
          {text: 'Greek', value: 'Greek'},
          {text: 'Gujarati', value: 'Gujarati'},
          {text: 'Haitian Creole', value: 'Creole'},
          {text: 'Hausa', value: 'Hausa'},
          {text: 'Hebrew', value: 'Hebrew'},
          {text: 'Hindi', value: 'Hindi'},
          {text: 'Hmong', value: 'Hmong'},
          {text: 'Hungarian', value: 'Hungarian'},
          {text: 'Icelandic', value: 'Icelandic'},
          {text: 'Igbo', value: 'Igbo'},
          {text: 'Indonesian', value: 'Indonesian'},
          {text: 'Irish', value: 'Irish'},
          {text: 'Italian', value: 'Italian'},
          {text: 'Japanese', value: 'Japanese'},
          {text: 'Javanese', value: 'Javanese'},
          {text: 'Kannada', value: 'Kannada'},
          {text: 'Kazakh', value: 'Kazakh'},
          {text: 'Khmer', value: 'Khmer'},
          {text: 'Korean', value: 'Korean'},
          {text: 'Lao', value: 'Lao'},
          {text: 'Latin', value: 'Latin'},
          {text: 'Latvian', value: 'Latvian'},
          {text: 'Lithuanian', value: 'Lithuanian'},
          {text: 'Macedonian', value: 'Macedonian'},
          {text: 'Malagasy', value: 'Malagasy'},
          {text: 'Malay', value: 'Malay'},
          {text: 'Malayalam', value: 'Malayalam'},
          {text: 'Maltese', value: 'Maltese'},
          {text: 'Maori', value: 'Maori'},
          {text: 'Marathi', value: 'Marathi'},
          {text: 'Mongolian', value: 'Mongolian'},
          {text: 'Myanmar', value: 'Burmese'},
          {text: 'Burmese', value: 'Burmese'},
          {text: 'Nepali', value: 'Nepali'},
          {text: 'Norwegian', value: 'Norwegian'},
          {text: 'Persian', value: 'Persian'},
          {text: 'Polish', value: 'Polish'},
          {text: 'Portuguese', value: 'Portuguese'},
          {text: 'Punjabi', value: 'Punjabi'},
          {text: 'Romanian', value: 'Romanian'},
          {text: 'Russian', value: 'Russian'},
          {text: 'Serbian', value: 'Serbian'},
          {text: 'Sesotho', value: 'Sesotho'},
          {text: 'Sinhala', value: 'Sinhala'},
          {text: 'Slovak', value: 'Slovak'},
          {text: 'Slovenian', value: 'Slovenian'},
          {text: 'Somali', value: 'Somali'},
          {text: 'Spanish', value: 'Spanish'},
          {text: 'Sundanese', value: 'Sundanese'},
          {text: 'Swahili', value: 'Swahili'},
          {text: 'Swedish', value: 'Swedish'},
          {text: 'Tajik', value: 'Tajik'},
          {text: 'Tamil', value: 'Tamil'},
          {text: 'Telugu', value: 'Telugu'},
          {text: 'Thai', value: 'Thai'},
          {text: 'Turkish', value: 'Turkish'},
          {text: 'Ukrainian', value: 'Ukrainian'},
          {text: 'Urdu', value: 'Urdu'},
          {text: 'Uzbek', value: 'Uzbek'},
          {text: 'Vietnamese', value: 'Vietnamese'},
          {text: 'Welsh', value: 'Welsh'},
          {text: 'Yiddish', value: 'Yiddish'},
          {text: 'Yoruba', value: 'Yoruba'},
          {text: 'Zulu', value: 'Zulu'}
        ]} />
      </argument>
    )
  }
}

export const translate = {
  grammar: (
    <sequence id='translate'>
      <literal text='translate ' category='action' />
      <argument text='phrase' id='phrase'>
        <freetext splitOn=' ' limit={1} />
      </argument>
      <sequence optional={true} merge={true}>
        <literal text=' from ' category='conjunction' />
        <Language id='from' />
      </sequence>
      <sequence optional={true} merge={true}>
        <literal text=' to ' />
        <repeat separator={<list items={[', ', ' and ', ', and ']} category='conjunction' limit={1} />} id='to'>
          <Language />
        </repeat>
      </sequence>
    </sequence>
  )
}

export const settings = {
  grammar: (
    <choice id='settings'>
      <sequence id='settings'>
        <choice merge={true}>
          <sequence>
            <list items={[
                {text: 'disable ', value: 'turn off'},
                {text: 'enable ', value: 'turn on'},
                {text: 'toggle ', value: 'toggle'},
                {text: 'turn off ', value: 'turn off'},
                {text: 'turn on ', value: 'turn on'}
              ]} limit={3} category='action' id='verb' />
            <argument text='setting' merge={true}>
              <choice>
                <list items={['wifi', 'airport']} value={{setting: 'wifi'}} limit={1} />
                <literal text='bluetooth' value={{setting: 'bluetooth'}} />
                <literal text='Do Not Disturb' value={{setting: 'Do Not Disturb'}} />
                <literal text='notifications' value={{setting: 'Do Not Disturb', direction: -1}} />
                <list items={['sound', 'audio']} value={{setting: 'the sound'}} limit={1} />
                <list items={['sleep', 'autosleep']} value={{setting: 'automatic sleeping'}} limit={1} />
                <literal text='Dock magnification' value={{setting: 'Dock magnification'}} />
                <list items={['Dock hiding', 'dock autohide', 'dock autohiding']} value={{setting: 'Dock hiding'}} limit={1} />
              </choice>
            </argument>
          </sequence>
          <list items={['caffeinate', 'do not sleep', 'do not go to sleep']} limit={1} category='action' value={{setting: 'automatic sleeping', verb: 'turn off'}} />
          <list items={['do not disturb', 'do not disturb me']} limit={1} category='action' value={{setting: 'Do Not Disturb', verb: 'turn on'}} />
        </choice>
        <sequence optional={true} id='duration'>
          <literal text=' for ' category='conjunction' />
          <argument text='amount of time' merge={true}>
            <TimeDuration />
          </argument>
        </sequence>
      </sequence>
      <choice id='actions'>
        <sequence>
          <list items={[
              {text: 'restart', value: 'restart the computer'},
              {text: 'shutdown', value: 'shutdown the computer'},
              {text: 'sleep', value: 'put the computer to sleep'},
              {text: 'lock', value: 'lock the computer'}
            ]} category='action' id='verb' />
          <list items={[' computer', ' the computer', ' system', ' the system']} limit={1} optional={true} prefered={false} limited={true} category='action' />
        </sequence>
        <literal text='empty Trash' category='action' value='empty the Trash' id='verb'/>
        <sequence id='verb'>
          <literal text='turn on ' category='action' value='turn on the screensaver' merge={true} />
          <literal text='the ' optional={true} prefered={false} limited={true} category='action' />
          <list items={['screensaver', 'screen saver']} limit={1} category='action' />
        </sequence>
        <sequence id='verb'>
          <literal text='turn off ' category='action' />
          <literal text='the ' optional={true} prefered={false} limited={true} category='action' />
          <choice merge={true}>
            <list items={['display', 'screen']} limit={1} category='action' value='turn off the display' />
            <list items={['computer', 'system']} limit={1} category='action' value='shutdown the computer' />
          </choice>
        </sequence>
        <sequence>
          <list items={['eject ', 'unmount ', 'dismount ']} category='action' id='verb' value='eject' />
          <choice merge={true}>
            <list items={['all', 'everything', 'all devices']} limit={1} category='action' id='verb' value='eject every volume and drive' />
            <argument text='volume' id='object'>
              <list items={[
                  {text: 'Lacona.dmg', value:' Lacona.dmg'},
                  {text: 'Flash Drive', value: 'Flash Drive'},
                  {text: 'Remote Disc', value: 'Remote Disc'}
                ]} />
            </argument>
          </choice>
        </sequence>
      </choice>
    </choice>
  )
}

export const all = {
  grammar: (
    <choice>
      {open.grammar}
      {date.grammar}
      {search.grammar}
      {play.grammar}
      {contact.grammar}
      {translate.grammar}
      {settings.grammar}
    </choice>
  ),
  extensions: [Birthday, Holiday]
}

// export default class Sentence extends Phrase {
//   describe() {
//     const themeChoices = _.map(themes, theme => <literal value={`theme-${_.kebabCase(theme)}-light`} text={`${theme} Light`} fuzzy={true} />)
//       .concat(_.map(themes, theme => <literal value={`theme-${_.kebabCase(theme)}-dark`} text={`${theme} Dark`} fuzzy={true} />))
//
//     return (
//       <choice>
//         <sequence>
//           <literal text='learn ' id='action' value='learn' category='action' />
//           <literal text='more about Lacona' category='argument' join={true} />
//         </sequence>
//         <sequence>
//           <choice limit={1} id='action' value='subscribe' category='action'>
//             <literal text='add ' />
//             <literal text='subscribe ' />
//           </choice>
//           <placeholder text='your email address' id='email' category='argument'>
//             <Email />
//           </placeholder>
//           <literal text=' to the ' category='conjunction' />
//           <choice limit={1} category='actor' join={true}>
//             <literal text='newsletter' />
//             <literal text='mailing list' />
//           </choice>
//         </sequence>
//         <sequence>
//           <literal text='tweet ' id='action' value='tweet' category='action' />
//           <placeholder text='something about lacona' category='argument' id='message'>
//             <Validator />
//           </placeholder>
//         </sequence>
//         <sequence>
//           <literal text='share ' id='action' value='share' category='action' />
//           <choice limit={1} join={true} category='conjunction'>
//             <literal text='with ' />
//             <literal text='using ' />
//             <literal text='on ' />
//           </choice>
//           <placeholder text='a social network' category='actor' id='platform' >
//             <choice>
//               <literal text='Twitter' value='twitter' />
//               <literal text='Facebook' value='facebook' />
//               <literal text='Google+' value='google-plus' />
//               <literal text='Email' value='email' />
//             </choice>
//           </placeholder>
//         </sequence>
//         <sequence>
//           <literal text='follow ' id='action' value='follow' category='action' />
//           <literal text='@lacona ' category='argument' join={true} />
//           <literal text='on ' category='conjunction' join={true} />
//           <literal text='Twitter' category='actor' join={true} />
//         </sequence>
//         <sequence>
//           <literal text='contact us ' id='action' value='contact' category='action' />
//           <choice limit={1} join={true} category='conjunction'>
//             <literal text='using ' />
//             <literal text='over ' />
//             <literal text='with ' />
//             <literal text='on ' />
//           </choice>
//           <placeholder text='a social network' category='actor' id='platform'>
//             <choice>
//               <literal text='Twitter' value='twitter' />
//               <literal text='Email' value='email' />
//             </choice>
//           </placeholder>
//         </sequence>
//       </choice>
//     )
//   }
// }
*/

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo-config":1,"_process":9,"elliptical":231,"lacona-command":342,"lacona-communicate":344,"lacona-events":347,"lacona-finder":350,"lacona-itunes":353,"lacona-osx":363,"lacona-search-internet":373,"lacona-settings":375,"lacona-translate":378}],8:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":9}],9:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],10:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InternalDate = exports.Date = exports.Day = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _moment = (typeof window !== "undefined" ? window['moment'] : typeof global !== "undefined" ? global['moment'] : null);

var _moment2 = _interopRequireDefault(_moment);

var _duration2 = require('./duration');

var _ellipticalNumber = require('elliptical-number');

var _time = require('./time');

var _month = require('./month');

var _year = require('./year');

var _weekday = require('./weekday');

var _helpers = require('./helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [mapDate].map(_regenerator2.default.mark); /** @jsx createElement */


var Day = exports.Day = {
  defaultProps: {
    recurse: true
  },

  describe: function describe(_ref) {
    var props = _ref.props;

    if (props.nullify) return;

    return (0, _elliptical.createElement)(
      'choice',
      null,
      props.recurse ? (0, _elliptical.createElement)(
        'label',
        { text: 'day' },
        (0, _elliptical.createElement)(RecursiveDay, null)
      ) : null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        props.prepositions ? (0, _elliptical.createElement)('literal', { text: 'on ', optional: true, preferred: true, limited: true, category: 'conjunction' }) : null,
        (0, _elliptical.createElement)(
          'label',
          { text: 'day', merge: true },
          (0, _elliptical.createElement)(
            'choice',
            null,
            (0, _elliptical.createElement)(AmbiguousAbsoluteDay, null),
            (0, _elliptical.createElement)(AmbiguousAbsoluteNamedMonth, null)
          )
        )
      )
    );
  }
};

function mapDate(option) {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, result;

  return _regenerator2.default.wrap(function mapDate$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 3;
          _iterator = (0, _helpers.possibleDates)(option.result)[Symbol.iterator]();

        case 5:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 12;
            break;
          }

          result = _step.value;
          _context.next = 9;
          return _lodash2.default.assign({}, option, { result: result });

        case 9:
          _iteratorNormalCompletion = true;
          _context.next = 5;
          break;

        case 12:
          _context.next = 18;
          break;

        case 14:
          _context.prev = 14;
          _context.t0 = _context['catch'](3);
          _didIteratorError = true;
          _iteratorError = _context.t0;

        case 18:
          _context.prev = 18;
          _context.prev = 19;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 21:
          _context.prev = 21;

          if (!_didIteratorError) {
            _context.next = 24;
            break;
          }

          throw _iteratorError;

        case 24:
          return _context.finish(21);

        case 25:
          return _context.finish(18);

        case 26:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[3, 14, 18, 26], [19,, 21, 25]]);
}

var Date = exports.Date = {
  defaultProps: {
    recurse: true,
    prepositions: false,
    nullify: false,
    past: true,
    future: true
  },

  filterResult: function filterResult(result, _ref2) {
    var props = _ref2.props;

    if (!props.past && (0, _moment2.default)(result).isBefore((0, _moment2.default)())) {
      return false;
    }
    if (!props.future && (0, _moment2.default)(result).isAfter((0, _moment2.default)())) {
      return false;
    }

    return true;
  },
  describe: function describe(_ref3) {
    var props = _ref3.props;

    return (0, _elliptical.createElement)(
      'map',
      { outbound: mapDate, skipIncomplete: true, limit: 1 },
      (0, _elliptical.createElement)(InternalDate, props)
    );
  }
};

var InternalDate = exports.InternalDate = {
  defaultProps: {
    recurse: true,
    prepositions: false,
    nullify: false,
    past: true,
    future: true
  },

  describe: function describe(_ref4) {
    var props = _ref4.props;

    if (props.nullify) return;

    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'date' },
        (0, _elliptical.createElement)(
          'choice',
          null,
          (0, _elliptical.createElement)(RelativeNamed, null),
          (0, _elliptical.createElement)(RelativeNumbered, { prepositions: props.prepositions }),
          (0, _elliptical.createElement)(DayWithYear, { prepositions: props.prepositions }),
          (0, _elliptical.createElement)(RelativeAdjacent, null),
          props.recurse ? (0, _elliptical.createElement)(RecursiveDate, null) : null
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        props.prepositions ? (0, _elliptical.createElement)('literal', { text: 'on ', optional: true, preferred: true, limited: true, category: 'conjunction' }) : null,
        (0, _elliptical.createElement)(
          'label',
          { text: 'date', merge: true },
          (0, _elliptical.createElement)(
            'choice',
            null,
            (0, _elliptical.createElement)(RelativeWeekday, null),
            (0, _elliptical.createElement)(AbsoluteDay, null)
          )
        )
      )
    );
  }
};

var DayWithYear = {
  mapResult: function mapResult(result) {
    var day = result.day;
    var year = result.year;

    if (year) {
      var date = (0, _helpers.absoluteDate)(_lodash2.default.assign({ year: year.year }, day));
      return { date: date, _ambiguousCentury: year._ambiguousCentury };
    } else {
      return { date: (0, _helpers.absoluteDate)(day), _ambiguousYear: true };
    }
  },
  describe: function describe(_ref5) {
    var props = _ref5.props;

    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(Day, { prepositions: props.prepositions, id: 'day', recurse: false, ellipsis: true }),
      (0, _elliptical.createElement)(
        'sequence',
        { merge: true },
        (0, _elliptical.createElement)('list', { items: [', ', ' in ', ' '], category: 'conjunction', limit: 1 }),
        (0, _elliptical.createElement)(_year.Year, { id: 'year' })
      )
    );
  }
};

var ExtraDateDuration = {
  mapResult: function mapResult(result) {
    return (0, _defineProperty3.default)({}, result.type, result.multiplier || 1);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(
        'label',
        { argument: false, text: 'number' },
        (0, _elliptical.createElement)('literal', { text: 'the ' })
      ),
      (0, _elliptical.createElement)(
        'label',
        { argument: false, text: 'time period', merge: true },
        (0, _elliptical.createElement)('list', { items: [{ text: 'day', value: { type: 'days' } }, { text: 'fortnight', value: { type: 'days', multiplier: 14 } }, { text: 'week', value: { type: 'days', multiplier: 7 } }, { text: 'month', value: { type: 'months' } }, { text: 'year', value: { type: 'years' } }] })
      )
    );
  }
};

var RecursiveDay = {
  mapResult: function mapResult(result) {
    var duration = result.direction === -1 ? (0, _helpers.negateDuration)(result.duration) : result.duration;

    return (0, _helpers.relativeDay)(duration, result.day);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'offset', merge: true },
        (0, _elliptical.createElement)(
          'sequence',
          null,
          (0, _elliptical.createElement)(
            'choice',
            { id: 'duration' },
            (0, _elliptical.createElement)(ExtraDateDuration, null),
            (0, _elliptical.createElement)(_duration2.DateDuration, null)
          ),
          (0, _elliptical.createElement)('list', { merge: true, id: 'direction', items: [{ text: ' before', value: -1 }, { text: ' after', value: 1 }, { text: ' from', value: 1 }], limit: 2 })
        )
      ),
      (0, _elliptical.createElement)('literal', { text: ' ' }),
      (0, _elliptical.createElement)(
        'label',
        { argument: false, text: 'day', id: 'day' },
        (0, _elliptical.createElement)(Day, { recurse: false, prepositions: false })
      )
    );
  }
};

var RecursiveDate = {
  mapResult: function mapResult(result) {
    var duration = result.direction === -1 ? (0, _helpers.negateDuration)(result.duration) : result.duration;

    return _lodash2.default.assign({}, result.date, {
      date: (0, _helpers.relativeDate)(duration, result.date.date)
    });
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'offset', merge: true },
        (0, _elliptical.createElement)(
          'sequence',
          null,
          (0, _elliptical.createElement)(
            'choice',
            { id: 'duration' },
            (0, _elliptical.createElement)(ExtraDateDuration, null),
            (0, _elliptical.createElement)(_duration2.DateDuration, null)
          ),
          (0, _elliptical.createElement)('list', { merge: true, id: 'direction', items: [{ text: ' before', value: -1 }, { text: ' after', value: 1 }, { text: ' from', value: 1 }], limit: 2 })
        )
      ),
      (0, _elliptical.createElement)('literal', { text: ' ' }),
      (0, _elliptical.createElement)(InternalDate, { id: 'date', recurse: false, prepositions: false })
    );
  }
};

var RelativeNamed = {
  mapResult: function mapResult(result) {
    return { date: (0, _helpers.relativeDate)(result) };
  },
  describe: function describe() {
    return (0, _elliptical.createElement)('list', { items: [{ text: 'today', value: { days: 0 } }, { text: 'tomorrow', value: { days: 1 } }, { text: 'yesterday', value: { days: -1 } }, { text: 'now', value: { days: 0 } }, { text: 'right now', value: { days: 0 } }], limit: 3 });
  }
};

var RelativeNumbered = {
  mapResult: function mapResult(result) {
    var duration = result.direction === -1 ? (0, _helpers.negateDuration)(result.duration) : result.duration;

    return { date: (0, _helpers.relativeDate)(duration) };
  },
  describe: function describe(_ref7) {
    var props = _ref7.props;

    return (0, _elliptical.createElement)(
      'choice',
      null,
      props.prepositions ? (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'in ', id: 'direction', value: 1 }),
        (0, _elliptical.createElement)(_duration2.DateDuration, { id: 'duration' })
      ) : null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)(_duration2.DateDuration, { id: 'duration' }),
        (0, _elliptical.createElement)('literal', { text: ' ago', id: 'direction', value: -1 })
      )
    );
  }
};

var RelativeAdjacent = {
  mapResult: function mapResult(result) {
    var duration = (0, _defineProperty3.default)({}, result.type, result.num * (result.multiplier || 1));

    return { date: (0, _helpers.relativeDate)(duration) };
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'label',
      { text: 'time period' },
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { id: 'num', items: [{ text: 'next ', value: 1 }, { text: 'last ', value: -1 }] }),
        (0, _elliptical.createElement)(
          'label',
          { argument: false, text: 'time period', merge: true },
          (0, _elliptical.createElement)('list', { items: [{ text: 'week', value: { type: 'days', multiplier: 7 } }, { text: 'month', value: { type: 'months' } }, { text: 'year', value: { type: 'years' } }] })
        )
      )
    );
  }
};

function dateFromRelative(distance, weekday) {
  var day = distance * 7 + weekday;

  return (0, _moment2.default)().day(day).toDate();
}

var RelativeWeekday = {
  mapResult: function mapResult(result) {
    var date = dateFromRelative(result.distance || 0, result.weekday);

    if (result.distance == null) {
      return { date: date, _ambiguousWeek: true };
    } else {
      return { date: date };
    }
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { optional: true, id: 'distance', items: [{ text: 'last ', value: -1 }, { text: 'this ', value: 0 }, { text: 'next ', value: 1 }, { text: 'this upcoming ', value: 1 }], limit: 1 }),
        (0, _elliptical.createElement)(_weekday.Weekday, { id: 'weekday' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'the ' }),
        (0, _elliptical.createElement)(
          'label',
          { text: 'relative weekday', merge: true },
          (0, _elliptical.createElement)(
            'sequence',
            null,
            (0, _elliptical.createElement)(_weekday.Weekday, { id: 'weekday' }),
            (0, _elliptical.createElement)('list', { id: 'distance', items: [{ text: ' after next', value: 2 }, { text: ' after this', value: 1 }, { text: ' before this', value: -1 }, { text: ' before last', value: -2 }] })
          )
        )
      )
    );
  }
};

function leapYear(year) {
  return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
}

var MonthNumber = {
  mapResult: function mapResult(result) {
    return parseInt(result, 10) - 1;
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(_ellipticalNumber.DigitString, { maxLength: 2, max: 12, min: 1, argument: 'mm' });
  }
};

var DayNumber = {
  mapResult: function mapResult(result) {
    return parseInt(result, 10);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(_ellipticalNumber.DigitString, { maxLength: 2, max: 31, min: 1, argument: 'dd' });
  }
};

var AbsoluteDay = {
  mapResult: function mapResult(result) {
    var date = (0, _helpers.absoluteDate)(_lodash2.default.assign({}, result, { year: result.year.year }));
    return { date: date, _ambiguousCentury: result.year._ambiguousCentury };
  },
  filterResult: function filterResult(result) {
    var years = result._ambiguousCentury ? [0, 100, -100] : [0];
    return _lodash2.default.some(years, function (year) {
      var date = _lodash2.default.assign({}, result, { year: result.date.getFullYear() + year });
      return (0, _helpers.validateDay)(date);
    });
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(AmbiguousAbsoluteDay, { merge: true }),
      (0, _elliptical.createElement)('list', { items: ['/'], limit: 1 }),
      (0, _elliptical.createElement)(_year.Year, { id: 'year' })
    );
  }
};

var AmbiguousAbsoluteDay = {
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'filter',
      { 'function': _helpers.validateDay },
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)(MonthNumber, { id: 'month' }),
        (0, _elliptical.createElement)('list', { items: ['/'], limit: 1 }),
        (0, _elliptical.createElement)(DayNumber, { id: 'day' })
      )
    );
  }
};

var AmbiguousAbsoluteNamedMonth = {
  filterResult: function filterResult(result) {
    return (0, _helpers.validateDay)(result);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)(_month.Month, { id: 'month' }),
        (0, _elliptical.createElement)('list', { items: [' ', ' the '], limit: 1 }),
        (0, _elliptical.createElement)(
          'choice',
          { id: 'day', limit: 1 },
          (0, _elliptical.createElement)(_ellipticalNumber.Integer, { max: 31, min: 1, limit: 1 }),
          (0, _elliptical.createElement)(_ellipticalNumber.Ordinal, { max: 31, limit: 1 })
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'the ' }),
        (0, _elliptical.createElement)(
          'choice',
          { id: 'day', limit: 1 },
          (0, _elliptical.createElement)(_ellipticalNumber.Integer, { max: 31, min: 1, limit: 1 }),
          (0, _elliptical.createElement)(_ellipticalNumber.Ordinal, { max: 31, limit: 1 })
        ),
        (0, _elliptical.createElement)('list', { items: [' of ', ' '], limit: 1 }),
        (0, _elliptical.createElement)(_month.Month, { id: 'month' })
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./duration":12,"./helpers":13,"./month":15,"./time":17,"./weekday":18,"./year":19,"babel-runtime/helpers/defineProperty":27,"babel-runtime/regenerator":116,"elliptical":231,"elliptical-number":120}],11:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InternalDateTime = exports.DateTime = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _time = require('./time');

var _moment = (typeof window !== "undefined" ? window['moment'] : typeof global !== "undefined" ? global['moment'] : null);

var _moment2 = _interopRequireDefault(_moment);

var _helpers = require('./helpers');

var _date = require('./date');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [getDateTimeResults, getDateTimeOptions].map(_regenerator2.default.mark); /** @jsx createElement */


function isNoonOrMidnight(time) {
  return (time.hour === 12 || time.hour === 0) && !time.minute && !time.second;
}

function timeIsInAMPM(time, ampm) {
  if (ampm === 'am') {
    return time.hour >= 0 && time.hour < 12;
  } else if (ampm === 'pm') {
    return time.hour >= 12 && time.hour < 24;
  }
}

var TrueDate = {
  describe: function describe(_ref) {
    var props = _ref.props;

    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(
        'choice',
        { merge: true },
        (0, _elliptical.createElement)(_date.InternalDate, (0, _extends3.default)({}, props, { id: undefined })),
        (0, _elliptical.createElement)(
          'map',
          { 'function': function _function(result) {
              return { date: result };
            }, skipIncomplete: true },
          (0, _elliptical.createElement)(_date.Date, (0, _extends3.default)({}, props, { nullify: true }))
        )
      )
    );
  }
};

function getDateTimeResults(result, props) {
  var dates, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, date, _arr, _i, i;

  return _regenerator2.default.wrap(function getDateTimeResults$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          dates = void 0;

          if (result.date) {
            if (result._ambiguousWeek) {
              dates = _lodash2.default.map([0, 1, -1], function (weeks) {
                return (0, _moment2.default)(result.date).add(weeks, 'weeks').toDate();
              });
            } else if (result._ambiguousCentury) {
              dates = _lodash2.default.map([0, 100, -100], function (years) {
                return (0, _moment2.default)(result.date).add(years, 'years').toDate();
              });
            } else if (result._ambiguousYear) {
              dates = _lodash2.default.map([0, 1, -1], function (years) {
                return (0, _moment2.default)(result.date).add(years, 'years').toDate();
              });
            } else {
              dates = [result.date];
            }
          } else {
            dates = [undefined];
          }

          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 5;
          _iterator = dates[Symbol.iterator]();

        case 7:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 37;
            break;
          }

          date = _step.value;

          if (!(date && result.time)) {
            _context.next = 14;
            break;
          }

          _context.next = 12;
          return (0, _helpers.join)(date, result.time, props.timezoneOffset);

        case 12:
          _context.next = 34;
          break;

        case 14:
          if (!(result.time && result.relativeDate)) {
            _context.next = 19;
            break;
          }

          _context.next = 17;
          return (0, _helpers.join)((0, _helpers.relativeDate)(result.relativeDate), result.time, props.timezoneOffset);

        case 17:
          _context.next = 34;
          break;

        case 19:
          if (!date) {
            _context.next = 24;
            break;
          }

          _context.next = 22;
          return (0, _helpers.join)(date, props.defaultTime, props.timezoneOffset);

        case 22:
          _context.next = 34;
          break;

        case 24:
          if (!result.time) {
            _context.next = 34;
            break;
          }

          _arr = [0, 1, -1];
          _i = 0;

        case 27:
          if (!(_i < _arr.length)) {
            _context.next = 34;
            break;
          }

          i = _arr[_i];
          _context.next = 31;
          return (0, _helpers.join)((0, _helpers.relativeDate)({ days: i }), result.time, props.timezoneOffset);

        case 31:
          _i++;
          _context.next = 27;
          break;

        case 34:
          _iteratorNormalCompletion = true;
          _context.next = 7;
          break;

        case 37:
          _context.next = 43;
          break;

        case 39:
          _context.prev = 39;
          _context.t0 = _context['catch'](5);
          _didIteratorError = true;
          _iteratorError = _context.t0;

        case 43:
          _context.prev = 43;
          _context.prev = 44;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 46:
          _context.prev = 46;

          if (!_didIteratorError) {
            _context.next = 49;
            break;
          }

          throw _iteratorError;

        case 49:
          return _context.finish(46);

        case 50:
          return _context.finish(43);

        case 51:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[5, 39, 43, 51], [44,, 46, 50]]);
}

function getDateTimeOptions(option, props) {
  var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, result;

  return _regenerator2.default.wrap(function getDateTimeOptions$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context2.prev = 3;
          _iterator2 = getDateTimeResults(option.result, props)[Symbol.iterator]();

        case 5:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context2.next = 12;
            break;
          }

          result = _step2.value;
          _context2.next = 9;
          return _lodash2.default.assign({}, option, { result: result });

        case 9:
          _iteratorNormalCompletion2 = true;
          _context2.next = 5;
          break;

        case 12:
          _context2.next = 18;
          break;

        case 14:
          _context2.prev = 14;
          _context2.t0 = _context2['catch'](3);
          _didIteratorError2 = true;
          _iteratorError2 = _context2.t0;

        case 18:
          _context2.prev = 18;
          _context2.prev = 19;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 21:
          _context2.prev = 21;

          if (!_didIteratorError2) {
            _context2.next = 24;
            break;
          }

          throw _iteratorError2;

        case 24:
          return _context2.finish(21);

        case 25:
          return _context2.finish(18);

        case 26:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[3, 14, 18, 26], [19,, 21, 25]]);
}

var DateTime = exports.DateTime = {
  defaultProps: {
    defaultTime: { hour: 8, minute: 0, second: 0 },
    past: true,
    future: true,
    prepositions: false
  },

  filterResult: function filterResult(result, _ref2) {
    var props = _ref2.props;

    if (!props.past && (0, _moment2.default)().isAfter(result)) {
      return false;
    }

    if (!props.future && (0, _moment2.default)().isBefore(result)) {
      return false;
    }

    return true;
  },
  describe: function describe(_ref3) {
    var props = _ref3.props;

    return props.nullify ? null : (0, _elliptical.createElement)(
      'map',
      { outbound: function outbound(option) {
          return getDateTimeOptions(option, props);
        }, limit: 1,
        skipIncomplete: true },
      (0, _elliptical.createElement)(InternalDateTime, (0, _extends3.default)({}, props, { _allowAmbiguity: false }))
    );
  }
};

function filterInternalDateTime(option) {
  if (option.result.time && option.result.time._ambiguousAMPM && !option.result.timeOfDay) {
    return false;
  } else if (option.result.time && option.result.timeOfDay && isNoonOrMidnight(option.result.time)) {
    return false;
  } else if (option.result.time && option.result.timeOfDay && !option.result.time._ambiguousAMPM && !timeIsInAMPM(option.result.time, option.result.timeOfDay.impliedAMPM)) {
    return false;
  }

  return true;
}

var InternalDateTime = exports.InternalDateTime = {
  mapResult: function mapResult(result) {
    var time = result.time;
    if (result.timeOfDay && result.time && result.time._ambiguousAMPM) {
      time = (0, _helpers.ambiguousTime)(result.time, result.timeOfDay.impliedAMPM);
    } else if (result.timeOfDay && !result.time) {
      time = { hour: result.timeOfDay.default };
    }

    var date = result.date && result.date.date;
    if (result.relativeDate) {
      date = (0, _helpers.relativeDate)(result.relativeDate);
    }

    return {
      date: date,
      time: time,
      _ambiguousYear: result.date && result.date._ambiguousYear,
      _ambiguousCentury: result.date && result.date._ambiguousCentury,
      _ambiguousWeek: result.date && result.date._ambiguousWeek
    };
  },
  describe: function describe(_ref4) {
    var props = _ref4.props;

    return (0, _elliptical.createElement)(
      'label',
      { argument: false, text: 'date and time' },
      (0, _elliptical.createElement)(
        'filter',
        { outbound: filterInternalDateTime, skipIncomplete: true },
        (0, _elliptical.createElement)(
          'choice',
          null,
          (0, _elliptical.createElement)(
            'sequence',
            { unique: true },
            (0, _elliptical.createElement)(
              'sequence',
              { merge: true },
              (0, _elliptical.createElement)(_time.Time, { id: 'time', ellipsis: true, prepositions: props.prepositions, seconds: false }),
              (0, _elliptical.createElement)(
                'sequence',
                { optional: true, limited: true, ellipsis: true, merge: true },
                (0, _elliptical.createElement)(
                  'sequence',
                  { id: 'timeOfDay', optional: true, limited: true },
                  (0, _elliptical.createElement)('literal', { text: ' the ' }),
                  (0, _elliptical.createElement)(_time.TimeOfDay, { merge: true }),
                  (0, _elliptical.createElement)('literal', { text: ' of' })
                ),
                (0, _elliptical.createElement)(
                  'sequence',
                  { id: 'date' },
                  (0, _elliptical.createElement)('literal', { text: ' ' }),
                  (0, _elliptical.createElement)(TrueDate, { merge: true, prepositions: true })
                )
              ),
              (0, _elliptical.createElement)(
                'sequence',
                { id: 'timeOfDay' },
                (0, _elliptical.createElement)('list', { items: [' ', ' in the '], limit: 1 }),
                (0, _elliptical.createElement)(_time.TimeOfDay, { merge: true })
              )
            )
          ),
          (0, _elliptical.createElement)(
            'sequence',
            { unique: true },
            (0, _elliptical.createElement)(
              'sequence',
              { id: 'timeOfDay', optional: true, limited: true },
              (0, _elliptical.createElement)('literal', { text: 'the ' }),
              (0, _elliptical.createElement)(_time.TimeOfDay, { merge: true }),
              (0, _elliptical.createElement)('literal', { text: ' of ' })
            ),
            (0, _elliptical.createElement)(
              'choice',
              { merge: true, ellipsis: true },
              (0, _elliptical.createElement)(TrueDate, { id: 'date', prepositions: props.prepositions }),
              (0, _elliptical.createElement)(
                'sequence',
                null,
                (0, _elliptical.createElement)('literal', { id: 'relativeDate', text: 'this ', value: { day: 0 } }),
                (0, _elliptical.createElement)(_time.TimeOfDay, { id: 'timeOfDay' })
              ),
              (0, _elliptical.createElement)(
                'label',
                { text: 'date' },
                (0, _elliptical.createElement)('literal', { text: 'tonight', value: { relativeDate: { day: 0 }, time: { hour: 20 } } })
              )
            ),
            (0, _elliptical.createElement)(
              'sequence',
              { id: 'timeOfDay', optional: true, limited: true, ellipsis: true },
              (0, _elliptical.createElement)('list', { items: [' ', ' in the '], limit: 1 }),
              (0, _elliptical.createElement)(_time.TimeOfDay, { merge: true })
            ),
            (0, _elliptical.createElement)(
              'sequence',
              { id: 'time', ellipsis: true },
              (0, _elliptical.createElement)('literal', { text: ' ' }),
              (0, _elliptical.createElement)(_time.Time, { merge: true, prepositions: true, seconds: false })
            ),
            (0, _elliptical.createElement)(
              'sequence',
              { id: 'timeOfDay' },
              (0, _elliptical.createElement)('literal', { text: ' in the ' }),
              (0, _elliptical.createElement)(_time.TimeOfDay, { merge: true })
            )
          )
        )
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./date":10,"./helpers":13,"./time":17,"babel-runtime/helpers/extends":28,"babel-runtime/regenerator":116,"elliptical":231}],12:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Duration = exports.TimeDuration = exports.DateDuration = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalNumber = require('elliptical-number');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isUnique(array) {
  return _lodash2.default.uniq(array).length === array.length;
} /** @jsx createElement */


function filterBase(option) {
  return isUnique(_lodash2.default.map(option.result, 'id'));
}

var BaseDuration = {
  mapResult: function mapResult(result) {
    var newResult = {};
    _lodash2.default.forEach(result, function (_ref) {
      var num = _ref.num;
      var type = _ref.type;

      newResult[type] = (newResult[type] || 0) + num;
    });
    return newResult;
  },
  describe: function describe(_ref2) {
    var props = _ref2.props;
    var children = _ref2.children;

    return (0, _elliptical.createElement)(
      'label',
      { text: props.argument },
      (0, _elliptical.createElement)(
        'filter',
        { outbound: filterBase, skipIncomplete: true },
        (0, _elliptical.createElement)(
          'repeat',
          { separator: (0, _elliptical.createElement)('list', { items: [', ', ' and ', ', and '], limit: 1, category: 'conjunction' }) },
          children
        )
      )
    );
  }
};

function mapInternalDuration(option) {}

var InternalDuration = {
  mapResult: function mapResult(result) {
    return {
      id: result.id,
      type: result.type,
      num: result.num * (result.multiplier || 1)
    };
  },
  describe: function describe(_ref3) {
    var props = _ref3.props;

    var singularDurations = (props.type !== 'time' ? [{ text: 'day', value: { id: 'days', type: 'days' } }, { text: 'fortnight', value: { id: 'fortnights', type: 'days', multiplier: 14 } }, { text: 'week', value: { id: 'weeks', type: 'days', multiplier: 7 } }, { text: 'month', value: { id: 'months', type: 'months' } }, { text: 'year', value: { id: 'years', type: 'years' } }] : []).concat(props.type !== 'date' ? [{ text: 'hour', value: { id: 'hours', type: 'hours' } }, { text: 'minute', value: { id: 'minutes', type: 'minutes' } }] : []).concat(props.type !== 'date' && props.seconds ? [{ text: 'second', value: { id: 'seconds', type: 'seconds' } }] : []);

    var pluralDurations = _lodash2.default.map(singularDurations, function (_ref4) {
      var text = _ref4.text;
      var value = _ref4.value;
      return {
        text: text + 's',
        value: value
      };
    });

    return (0, _elliptical.createElement)(
      'choice',
      { limit: 1 },
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)(_ellipticalNumber.Integer, { max: 1, min: 1, id: 'num', limit: 1 }),
        (0, _elliptical.createElement)('literal', { text: ' ' }),
        (0, _elliptical.createElement)(
          'label',
          { text: 'time period', merge: true },
          (0, _elliptical.createElement)('list', { items: singularDurations })
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)(_ellipticalNumber.Integer, { id: 'num', min: 2, limit: 1 }),
        (0, _elliptical.createElement)('literal', { text: ' ' }),
        (0, _elliptical.createElement)(
          'label',
          { text: 'time period', merge: true },
          (0, _elliptical.createElement)('list', { items: pluralDurations })
        )
      )
    );
  }
};

var DateDuration = exports.DateDuration = {
  defaultProps: {
    argument: 'date duration'
  },
  describe: function describe(_ref5) {
    var props = _ref5.props;

    return (0, _elliptical.createElement)(
      BaseDuration,
      { argument: props.argument },
      (0, _elliptical.createElement)(InternalDuration, { type: 'date', seconds: props.seconds })
    );
  }
};

var TimeDuration = exports.TimeDuration = {
  defaultProps: {
    seconds: true,
    argument: 'time duration'
  },

  describe: function describe(_ref6) {
    var props = _ref6.props;

    return (0, _elliptical.createElement)(
      BaseDuration,
      { argument: props.argument },
      (0, _elliptical.createElement)(InternalDuration, { type: 'time', seconds: props.seconds })
    );
  }
};

var Duration = exports.Duration = {
  defaultProps: {
    seconds: false,
    argument: 'duration'
  },
  describe: function describe(_ref7) {
    var props = _ref7.props;

    return (0, _elliptical.createElement)(
      BaseDuration,
      { argument: props.argument },
      (0, _elliptical.createElement)(InternalDuration, { seconds: props.seconds })
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"elliptical-number":120}],13:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.join = join;
exports.negateDuration = negateDuration;
exports.relativeTime = relativeTime;
exports.absoluteTime = absoluteTime;
exports.ambiguousTime = ambiguousTime;
exports.absoluteDate = absoluteDate;
exports.relativeDate = relativeDate;
exports.relativeDay = relativeDay;
exports.validateDay = validateDay;
exports.possibleDates = possibleDates;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = (typeof window !== "undefined" ? window['moment'] : typeof global !== "undefined" ? global['moment'] : null);

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [possibleDates].map(_regenerator2.default.mark);

// combine a the date components of a Date object and the time components of {hour, minute, second}
// date: moment, Date, or {year, month, day}
// time: {hour, minute, second}
// timezoneOffset = new Date().getTimezoneOffset() from the user's system
function join(date, time, timezoneOffset) {
  if (timezoneOffset == null) {
    return (0, _moment2.default)(date).set(time).toDate();
  } else {
    var mom = (0, _moment2.default)(date);
    var yearComponents = { year: mom.year(), month: mom.month(), date: mom.date() };
    return (0, _moment2.default)().utcOffset(-timezoneOffset).set(yearComponents).set(time).toDate();
  }
}

function negateDuration(duration) {
  return _lodash2.default.mapValues(duration, function (num) {
    return -num;
  });
}

function relativeTime(duration, now) {
  var newTime = (0, _moment2.default)(now).add(_moment2.default.duration(duration));

  return { hour: newTime.hour(), minute: newTime.minute(), second: newTime.second() };
}

function absoluteTime(absolute) {
  return { hour: absolute.hour, minute: absolute.minute || 0, second: absolute.second || 0 };
}

function ambiguousTime(ambiguousTime, ampm) {
  var hour = ampmHourToHour(ambiguousTime.hour, ampm);

  return { hour: hour, minute: ambiguousTime.minute || 0, second: ambiguousTime.second || 0 };
}

function ampmHourToHour(hour, ampm) {
  if (ampm) {
    return ampm === 'am' ? hour === 12 ? 0 : hour : hour + 12;
  } else {
    return hour;
  }
}

// export function coerceAmbiguousTime (ambiguousTime, range) {
//   if (_.inRange(ambiguousTime.hour, ...range)) {
//     return ambiguousTime
//   } else {
//     return {hour: ambiguousTime.hour < 12 ? ambiguousTime.hour + 12 : ambiguousTime.hour - 12, minute: ambiguousTime.minute, second: ambiguousTime.second}
//   }
// }

function absoluteDate(absolute) {
  return (0, _moment2.default)(absolute).toDate();
}

function relativeDate(duration) {
  var now = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  return (0, _moment2.default)(now).add(_moment2.default.duration(duration)).toDate();
}

function relativeDay(duration) {
  var now = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var newMoment = (0, _moment2.default)(now).year(2010).add(_moment2.default.duration(duration)); // not leap year
  return { month: newMoment.month(), day: newMoment.date() };
}

function validateDay() {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var month = _ref.month;
  var day = _ref.day;
  var _ref$year = _ref.year;
  var year = _ref$year === undefined ? 2012 : _ref$year;
  //leap year
  if (_lodash2.default.isUndefined(month) || _lodash2.default.isUndefined(day)) return true;

  var dateMoment = (0, _moment2.default)({ year: year, month: month, day: day });
  return dateMoment.month() === month;
}

function possibleDates(obj, referenceDate) {
  var _arr, _i, i, _arr2, _i2, _i3, _arr3, _i4, _i5, _arr4, _i6, _i7;

  return _regenerator2.default.wrap(function possibleDates$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!obj.date) {
            _context.next = 41;
            break;
          }

          if (!obj._ambiguousWeek) {
            _context.next = 13;
            break;
          }

          _arr = [0, 7, -7, 14, -14];
          _i = 0;

        case 4:
          if (!(_i < _arr.length)) {
            _context.next = 11;
            break;
          }

          i = _arr[_i];
          _context.next = 8;
          return (0, _moment2.default)(obj.date).add(i, 'days').toDate();

        case 8:
          _i++;
          _context.next = 4;
          break;

        case 11:
          _context.next = 39;
          break;

        case 13:
          if (!obj._ambiguousYear) {
            _context.next = 25;
            break;
          }

          _arr2 = [0, 1, -1];
          _i2 = 0;

        case 16:
          if (!(_i2 < _arr2.length)) {
            _context.next = 23;
            break;
          }

          _i3 = _arr2[_i2];
          _context.next = 20;
          return (0, _moment2.default)(obj.date).add(_i3, 'years').toDate();

        case 20:
          _i2++;
          _context.next = 16;
          break;

        case 23:
          _context.next = 39;
          break;

        case 25:
          if (!obj._ambiguousCentury) {
            _context.next = 37;
            break;
          }

          _arr3 = [0, 100, -100];
          _i4 = 0;

        case 28:
          if (!(_i4 < _arr3.length)) {
            _context.next = 35;
            break;
          }

          _i5 = _arr3[_i4];
          _context.next = 32;
          return (0, _moment2.default)(obj.date).add(_i5, 'years').toDate();

        case 32:
          _i4++;
          _context.next = 28;
          break;

        case 35:
          _context.next = 39;
          break;

        case 37:
          _context.next = 39;
          return obj.date;

        case 39:
          _context.next = 50;
          break;

        case 41:
          _arr4 = [0, 1, -1];
          _i6 = 0;

        case 43:
          if (!(_i6 < _arr4.length)) {
            _context.next = 50;
            break;
          }

          _i7 = _arr4[_i6];
          _context.next = 47;
          return (0, _moment2.default)(referenceDate).add(_i7, 'days').toDate();

        case 47:
          _i6++;
          _context.next = 43;
          break;

        case 50:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"babel-runtime/regenerator":116}],14:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _datetime = require('./datetime');

Object.defineProperty(exports, 'DateTime', {
  enumerable: true,
  get: function get() {
    return _datetime.DateTime;
  }
});

var _date = require('./date');

Object.defineProperty(exports, 'Day', {
  enumerable: true,
  get: function get() {
    return _date.Day;
  }
});
Object.defineProperty(exports, 'Date', {
  enumerable: true,
  get: function get() {
    return _date.Date;
  }
});

var _time = require('./time');

Object.defineProperty(exports, 'Time', {
  enumerable: true,
  get: function get() {
    return _time.Time;
  }
});

var _duration = require('./duration');

Object.defineProperty(exports, 'Duration', {
  enumerable: true,
  get: function get() {
    return _duration.Duration;
  }
});
Object.defineProperty(exports, 'DateDuration', {
  enumerable: true,
  get: function get() {
    return _duration.DateDuration;
  }
});
Object.defineProperty(exports, 'TimeDuration', {
  enumerable: true,
  get: function get() {
    return _duration.TimeDuration;
  }
});

var _range = require('./range');

Object.defineProperty(exports, 'Range', {
  enumerable: true,
  get: function get() {
    return _range.Range;
  }
});
},{"./date":10,"./datetime":11,"./duration":12,"./range":16,"./time":17}],15:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Month = undefined;

var _elliptical = require('elliptical');

var Month = exports.Month = {
  defaultProps: {
    argument: 'month'
  },
  describe: function describe(_ref) {
    var props = _ref.props;

    return (0, _elliptical.createElement)(
      'label',
      { text: props.argument },
      (0, _elliptical.createElement)('list', { items: [{ text: 'January', value: 0 }, { text: 'Feburary', value: 1 }, { text: 'March', value: 2 }, { text: 'April', value: 3 }, { text: 'May', value: 4 }, { text: 'June', value: 5 }, { text: 'July', value: 6 }, { text: 'August', value: 7 }, { text: 'September', value: 8 }, { text: 'October', value: 9 }, { text: 'November', value: 10 }, { text: 'December', value: 11 }] })
    );
  }
}; /** @jsx createElement */
},{"elliptical":231}],16:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Range = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = (typeof window !== "undefined" ? window['moment'] : typeof global !== "undefined" ? global['moment'] : null);

var _moment2 = _interopRequireDefault(_moment);

var _elliptical = require('elliptical');

var _helpers = require('./helpers');

var _datetime = require('./datetime');

var _duration = require('./duration');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [mapRangeResults, mapRangeOptions].map(_regenerator2.default.mark); /** @jsx createElement */

var TrueDateTime = {
  describe: function describe(_ref) {
    var props = _ref.props;

    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)('literal', { text: 'all day ', id: 'allDay', value: true, optional: true, limited: true }),
      (0, _elliptical.createElement)(
        'choice',
        { merge: true },
        (0, _elliptical.createElement)(_datetime.InternalDateTime, (0, _extends3.default)({}, props, { id: undefined })),
        (0, _elliptical.createElement)(
          'map',
          { 'function': function _function(result) {
              return { dateTime: result };
            } },
          (0, _elliptical.createElement)(_datetime.DateTime, (0, _extends3.default)({}, props, { nullify: true }))
        )
      )
    );
  }
};

function mapRangeResults(result, props) {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, startDate, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, endDate, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _startDate, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _endDate, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, _startDate2, start, _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, _startDate3, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, _startDate4, _start;

  return _regenerator2.default.wrap(function mapRangeResults$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!(result.start && result.end)) {
            _context.next = 106;
            break;
          }

          if (!(!result.start.time && !result.end.time)) {
            _context.next = 54;
            break;
          }

          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 5;
          _iterator = (0, _helpers.possibleDates)(result.start)[Symbol.iterator]();

        case 7:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 38;
            break;
          }

          startDate = _step.value;
          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context.prev = 12;
          _iterator2 = (0, _helpers.possibleDates)(result.end)[Symbol.iterator]();

        case 14:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context.next = 21;
            break;
          }

          endDate = _step2.value;
          _context.next = 18;
          return {
            start: (0, _helpers.join)(startDate, { hour: 0, minute: 0, second: 0 }, props.timezoneOffset),
            end: (0, _helpers.join)(endDate, { hour: 0, minute: 0, second: 0 }, props.timezoneOffset),
            allDay: true
          };

        case 18:
          _iteratorNormalCompletion2 = true;
          _context.next = 14;
          break;

        case 21:
          _context.next = 27;
          break;

        case 23:
          _context.prev = 23;
          _context.t0 = _context['catch'](12);
          _didIteratorError2 = true;
          _iteratorError2 = _context.t0;

        case 27:
          _context.prev = 27;
          _context.prev = 28;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 30:
          _context.prev = 30;

          if (!_didIteratorError2) {
            _context.next = 33;
            break;
          }

          throw _iteratorError2;

        case 33:
          return _context.finish(30);

        case 34:
          return _context.finish(27);

        case 35:
          _iteratorNormalCompletion = true;
          _context.next = 7;
          break;

        case 38:
          _context.next = 44;
          break;

        case 40:
          _context.prev = 40;
          _context.t1 = _context['catch'](5);
          _didIteratorError = true;
          _iteratorError = _context.t1;

        case 44:
          _context.prev = 44;
          _context.prev = 45;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 47:
          _context.prev = 47;

          if (!_didIteratorError) {
            _context.next = 50;
            break;
          }

          throw _iteratorError;

        case 50:
          return _context.finish(47);

        case 51:
          return _context.finish(44);

        case 52:
          _context.next = 104;
          break;

        case 54:
          _iteratorNormalCompletion3 = true;
          _didIteratorError3 = false;
          _iteratorError3 = undefined;
          _context.prev = 57;
          _iterator3 = (0, _helpers.possibleDates)(result.start, result.end.date)[Symbol.iterator]();

        case 59:
          if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
            _context.next = 90;
            break;
          }

          _startDate = _step3.value;
          _iteratorNormalCompletion4 = true;
          _didIteratorError4 = false;
          _iteratorError4 = undefined;
          _context.prev = 64;
          _iterator4 = (0, _helpers.possibleDates)(result.end, _startDate)[Symbol.iterator]();

        case 66:
          if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {
            _context.next = 73;
            break;
          }

          _endDate = _step4.value;
          _context.next = 70;
          return {
            start: (0, _helpers.join)(_startDate, result.start.time || props.defaultTime, props.timezoneOffset),
            end: (0, _helpers.join)(_endDate, result.end.time || props.defaultTime, props.timezoneOffset),
            allDay: false
          };

        case 70:
          _iteratorNormalCompletion4 = true;
          _context.next = 66;
          break;

        case 73:
          _context.next = 79;
          break;

        case 75:
          _context.prev = 75;
          _context.t2 = _context['catch'](64);
          _didIteratorError4 = true;
          _iteratorError4 = _context.t2;

        case 79:
          _context.prev = 79;
          _context.prev = 80;

          if (!_iteratorNormalCompletion4 && _iterator4.return) {
            _iterator4.return();
          }

        case 82:
          _context.prev = 82;

          if (!_didIteratorError4) {
            _context.next = 85;
            break;
          }

          throw _iteratorError4;

        case 85:
          return _context.finish(82);

        case 86:
          return _context.finish(79);

        case 87:
          _iteratorNormalCompletion3 = true;
          _context.next = 59;
          break;

        case 90:
          _context.next = 96;
          break;

        case 92:
          _context.prev = 92;
          _context.t3 = _context['catch'](57);
          _didIteratorError3 = true;
          _iteratorError3 = _context.t3;

        case 96:
          _context.prev = 96;
          _context.prev = 97;

          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }

        case 99:
          _context.prev = 99;

          if (!_didIteratorError3) {
            _context.next = 102;
            break;
          }

          throw _iteratorError3;

        case 102:
          return _context.finish(99);

        case 103:
          return _context.finish(96);

        case 104:
          _context.next = 193;
          break;

        case 106:
          if (!(result.start && result.duration)) {
            _context.next = 136;
            break;
          }

          _iteratorNormalCompletion5 = true;
          _didIteratorError5 = false;
          _iteratorError5 = undefined;
          _context.prev = 110;
          _iterator5 = (0, _helpers.possibleDates)(result.start)[Symbol.iterator]();

        case 112:
          if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {
            _context.next = 120;
            break;
          }

          _startDate2 = _step5.value;
          start = (0, _helpers.join)(_startDate2, result.start.time || props.defaultTime, props.timezoneOffset);
          _context.next = 117;
          return {
            start: start,
            end: (0, _moment2.default)(start).add(result.duration).toDate(),
            allDay: false
          };

        case 117:
          _iteratorNormalCompletion5 = true;
          _context.next = 112;
          break;

        case 120:
          _context.next = 126;
          break;

        case 122:
          _context.prev = 122;
          _context.t4 = _context['catch'](110);
          _didIteratorError5 = true;
          _iteratorError5 = _context.t4;

        case 126:
          _context.prev = 126;
          _context.prev = 127;

          if (!_iteratorNormalCompletion5 && _iterator5.return) {
            _iterator5.return();
          }

        case 129:
          _context.prev = 129;

          if (!_didIteratorError5) {
            _context.next = 132;
            break;
          }

          throw _iteratorError5;

        case 132:
          return _context.finish(129);

        case 133:
          return _context.finish(126);

        case 134:
          _context.next = 193;
          break;

        case 136:
          if (!result.start) {
            _context.next = 193;
            break;
          }

          if (result.start.time) {
            _context.next = 166;
            break;
          }

          _iteratorNormalCompletion6 = true;
          _didIteratorError6 = false;
          _iteratorError6 = undefined;
          _context.prev = 141;
          _iterator6 = (0, _helpers.possibleDates)(result.start)[Symbol.iterator]();

        case 143:
          if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {
            _context.next = 150;
            break;
          }

          _startDate3 = _step6.value;
          _context.next = 147;
          return {
            start: _startDate3,
            end: _startDate3,
            allDay: true
          };

        case 147:
          _iteratorNormalCompletion6 = true;
          _context.next = 143;
          break;

        case 150:
          _context.next = 156;
          break;

        case 152:
          _context.prev = 152;
          _context.t5 = _context['catch'](141);
          _didIteratorError6 = true;
          _iteratorError6 = _context.t5;

        case 156:
          _context.prev = 156;
          _context.prev = 157;

          if (!_iteratorNormalCompletion6 && _iterator6.return) {
            _iterator6.return();
          }

        case 159:
          _context.prev = 159;

          if (!_didIteratorError6) {
            _context.next = 162;
            break;
          }

          throw _iteratorError6;

        case 162:
          return _context.finish(159);

        case 163:
          return _context.finish(156);

        case 164:
          _context.next = 193;
          break;

        case 166:
          _iteratorNormalCompletion7 = true;
          _didIteratorError7 = false;
          _iteratorError7 = undefined;
          _context.prev = 169;
          _iterator7 = (0, _helpers.possibleDates)(result.start)[Symbol.iterator]();

        case 171:
          if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {
            _context.next = 179;
            break;
          }

          _startDate4 = _step7.value;
          _start = (0, _helpers.join)(_startDate4, result.start.time, props.timezoneOffset);
          _context.next = 176;
          return {
            start: _start,
            end: (0, _moment2.default)(_start).add(props.defaultDuration).toDate(),
            allDay: false
          };

        case 176:
          _iteratorNormalCompletion7 = true;
          _context.next = 171;
          break;

        case 179:
          _context.next = 185;
          break;

        case 181:
          _context.prev = 181;
          _context.t6 = _context['catch'](169);
          _didIteratorError7 = true;
          _iteratorError7 = _context.t6;

        case 185:
          _context.prev = 185;
          _context.prev = 186;

          if (!_iteratorNormalCompletion7 && _iterator7.return) {
            _iterator7.return();
          }

        case 188:
          _context.prev = 188;

          if (!_didIteratorError7) {
            _context.next = 191;
            break;
          }

          throw _iteratorError7;

        case 191:
          return _context.finish(188);

        case 192:
          return _context.finish(185);

        case 193:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[5, 40, 44, 52], [12, 23, 27, 35], [28,, 30, 34], [45,, 47, 51], [57, 92, 96, 104], [64, 75, 79, 87], [80,, 82, 86], [97,, 99, 103], [110, 122, 126, 134], [127,, 129, 133], [141, 152, 156, 164], [157,, 159, 163], [169, 181, 185, 193], [186,, 188, 192]]);
}

function mapRangeOptions(option, props) {
  var _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, result;

  return _regenerator2.default.wrap(function mapRangeOptions$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _iteratorNormalCompletion8 = true;
          _didIteratorError8 = false;
          _iteratorError8 = undefined;
          _context2.prev = 3;
          _iterator8 = mapRangeResults(option.result, props)[Symbol.iterator]();

        case 5:
          if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {
            _context2.next = 12;
            break;
          }

          result = _step8.value;
          _context2.next = 9;
          return _lodash2.default.assign({}, option, { result: result });

        case 9:
          _iteratorNormalCompletion8 = true;
          _context2.next = 5;
          break;

        case 12:
          _context2.next = 18;
          break;

        case 14:
          _context2.prev = 14;
          _context2.t0 = _context2['catch'](3);
          _didIteratorError8 = true;
          _iteratorError8 = _context2.t0;

        case 18:
          _context2.prev = 18;
          _context2.prev = 19;

          if (!_iteratorNormalCompletion8 && _iterator8.return) {
            _iterator8.return();
          }

        case 21:
          _context2.prev = 21;

          if (!_didIteratorError8) {
            _context2.next = 24;
            break;
          }

          throw _iteratorError8;

        case 24:
          return _context2.finish(21);

        case 25:
          return _context2.finish(18);

        case 26:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[3, 14, 18, 26], [19,, 21, 25]]);
}

function filterRangeOption(option) {
  if (option.result.allDay && (!option.result.start._ambiguousTime || option.result.end && !option.result.end._ambiguousTime)) {
    return false;
  }

  return true;
}

var Range = exports.Range = {
  defaultProps: {
    prepositions: false,
    seconds: true,
    defaultTime: { hour: 8 },
    defaultDuration: { hours: 1 },
    future: true,
    past: true,
    argument: 'period of time'
  },

  filterResult: function filterResult(result, _ref2) {
    var props = _ref2.props;

    var startMoment = (0, _moment2.default)(result.start);
    var endMoment = (0, _moment2.default)(result.end);

    if (endMoment.isBefore(startMoment)) return false;

    var currentMoment = result.allDay ? (0, _moment2.default)({}) : (0, _moment2.default)();
    if (!props.past && currentMoment.isAfter(startMoment)) return false;
    if (!props.future && currentMoment.isBefore(endMoment)) return false;

    return true;
  },
  describe: function describe(_ref3) {
    var props = _ref3.props;

    return (0, _elliptical.createElement)(
      'label',
      { argument: false, text: props.argument },
      (0, _elliptical.createElement)(
        'map',
        { outbound: function outbound(option) {
            return mapRangeOptions(option, props);
          }, limit: 1 },
        (0, _elliptical.createElement)(
          'filter',
          { outbound: filterRangeOption },
          (0, _elliptical.createElement)(
            'sequence',
            { unique: true },
            (0, _elliptical.createElement)(
              'sequence',
              { id: 'duration', optional: true, limited: true },
              props.prepositions ? (0, _elliptical.createElement)('literal', { text: 'for ', optional: true, limited: true, preferred: true }) : null,
              (0, _elliptical.createElement)(_duration.Duration, { merge: true }),
              (0, _elliptical.createElement)('list', { items: [' ', ' starting '], limit: 1 })
            ),
            (0, _elliptical.createElement)(TrueDateTime, { ellipsis: true, id: 'start' }),
            (0, _elliptical.createElement)(
              'choice',
              { merge: true },
              (0, _elliptical.createElement)(
                'sequence',
                { id: 'end' },
                (0, _elliptical.createElement)('list', { items: [' to ', ' - ', '-'], limit: 1, category: 'conjunction' }),
                (0, _elliptical.createElement)(TrueDateTime, { merge: true })
              ),
              (0, _elliptical.createElement)(
                'sequence',
                { id: 'duration' },
                (0, _elliptical.createElement)('literal', { text: ' for ' }),
                (0, _elliptical.createElement)(_duration.Duration, { merge: true })
              )
            )
          )
        )
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./datetime":11,"./duration":12,"./helpers":13,"babel-runtime/helpers/extends":28,"babel-runtime/regenerator":116,"elliptical":231}],17:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Time = exports.TimeOfDay = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = (typeof window !== "undefined" ? window['moment'] : typeof global !== "undefined" ? global['moment'] : null);

var _moment2 = _interopRequireDefault(_moment);

var _elliptical = require('elliptical');

var _ellipticalNumber = require('elliptical-number');

var _helpers = require('./helpers');

var _duration = require('./duration');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

var TimeOfDay = exports.TimeOfDay = {
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'label',
      { text: 'time of day' },
      (0, _elliptical.createElement)('list', { items: [{ text: 'early morning', value: { default: 6, impliedAMPM: 'am' } }, { text: 'morning', value: { default: 8, impliedAMPM: 'am' } }, { text: 'late morning', value: { default: 10, impliedAMPM: 'am' } }, { text: 'afternoon', value: { default: 12, impliedAMPM: 'pm' } }, { text: 'late afternoon', value: { default: 15, impliedAMPM: 'pm' } }, { text: 'evening', value: { default: 17, impliedAMPM: 'pm' } }, { text: 'night', value: { default: 20, impliedAMPM: 'pm' } }] })
    );
  }
};

var Time = exports.Time = {
  defaultProps: {
    named: true,
    recurse: true,
    relative: true,
    prepositions: false,
    seconds: false,
    argument: 'time'
  },

  describe: function describe(_ref) {
    var props = _ref.props;

    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        props.prepositions ? (0, _elliptical.createElement)('list', { items: ['at ', 'from '], limit: 1, category: 'conjunction', optional: true, preferred: true, limited: true }) : null,
        (0, _elliptical.createElement)(
          'label',
          { text: props.argument, merge: true },
          (0, _elliptical.createElement)(
            'choice',
            null,
            (0, _elliptical.createElement)(AbsoluteNumeric, null),
            (0, _elliptical.createElement)(AbsoluteRelativeHour, null),
            (0, _elliptical.createElement)(AbsoluteNamed, null)
          )
        )
      ),
      (0, _elliptical.createElement)(
        'label',
        { text: props.argument },
        (0, _elliptical.createElement)(
          'choice',
          null,
          props.named ? (0, _elliptical.createElement)(RelativeNamed, null) : null,
          props.relative ? (0, _elliptical.createElement)(RelativeTime, null) : null,
          props.recurse ? (0, _elliptical.createElement)(RecursiveTime, null) : null
        )
      )
    );
  }
};

var RelativeTime = {
  mapResult: function mapResult(result) {
    var duration = result.direction === -1 ? (0, _helpers.negateDuration)(result.duration) : result.duration;

    return (0, _helpers.relativeTime)(duration);
  },
  describe: function describe(_ref2) {
    var props = _ref2.props;

    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'in ', id: 'direction', value: 1 }),
        (0, _elliptical.createElement)(_duration.TimeDuration, { id: 'duration', seconds: props.seconds })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)(_duration.TimeDuration, { id: 'duration', seconds: props.seconds }),
        (0, _elliptical.createElement)('literal', { text: ' from now', id: 'direction', value: 1 })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)(_duration.TimeDuration, { id: 'duration', seconds: props.seconds }),
        (0, _elliptical.createElement)('literal', { text: ' ago', id: 'direction', value: -1 })
      )
    );
  }
};

var RelativeNamed = {
  mapResult: function mapResult(result) {
    return (0, _helpers.relativeTime)(result);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)('list', { items: [{ text: 'now', value: {} }, { text: 'right now', value: {} }], limit: 1 });
  }
};

var AbsoluteTimeOfDay = {
  mapValue: function mapValue(result) {
    return (0, _helpers.coerceAmbiguousTime)(result.ambiguousTime, result.timeOfDay.range);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(
        'choice',
        { id: 'ambiguousTime' },
        (0, _elliptical.createElement)(AmbiguousAbsoluteNumeric, { seconds: props.seconds }),
        (0, _elliptical.createElement)(AmbiguousAbsoluteRelativeHour, null)
      ),
      (0, _elliptical.createElement)('literal', { text: ' in the ', category: 'conjunction' }),
      (0, _elliptical.createElement)(TimeOfDay, { id: 'timeOfDay' })
    );
  }
};

var AbsoluteNamed = {
  mapResult: function mapResult(result) {
    return (0, _helpers.absoluteTime)(result);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)('list', { items: [{ text: 'midnight', value: { hour: 0 } }, { text: 'noon', value: { hour: 12 } }] });
  }
};

var AbsoluteNumeric = {
  mapResult: function mapResult(result) {
    if (result.ampm) {
      return (0, _helpers.ambiguousTime)(result, result.ampm);
    } else {
      return _lodash2.default.assign({}, result, { _ambiguousAMPM: true });
    }
  },


  defaultProps: {
    minutes: true,
    seconds: false
  },

  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(Hour, { id: 'hour', ellipsis: true }),
      (0, _elliptical.createElement)(
        'sequence',
        { ellipsis: true, optional: true, limited: true, merge: true },
        (0, _elliptical.createElement)('literal', { text: ':' }),
        (0, _elliptical.createElement)(MinutesOrSeconds, { id: 'minute' })
      ),
      (0, _elliptical.createElement)(
        'choice',
        { id: 'ampm' },
        (0, _elliptical.createElement)('list', { items: [' am', 'am', ' a', 'a', ' a.m.', 'a.m.', ' a.m', 'a.m'], value: 'am', limit: 1 }),
        (0, _elliptical.createElement)('list', { items: [' pm', 'pm', ' p', 'p', ' p.m.', 'p.m.', ' p.m', 'p.m'], value: 'pm', limit: 1 })
      )
    );
  }
};

var AmbiguousAbsoluteRelativeHour = {
  describe: function describe() {
    return (0, _elliptical.createElement)(BaseAbsoluteRelativeHour, { ambiguous: true });
  }
};

var AbsoluteRelativeHour = {
  describe: function describe() {
    return (0, _elliptical.createElement)(BaseAbsoluteRelativeHour, null);
  }
};

var BaseAbsoluteRelativeHour = {
  defaultProps: {
    ambiguous: false
  },

  mapResult: function mapResult(result) {
    var duration = result.direction === -1 ? (0, _helpers.negateDuration)(result.duration) : result.duration;

    return (0, _helpers.relativeTime)(duration, result.absolute);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'number', id: 'duration' },
        (0, _elliptical.createElement)(
          'choice',
          null,
          (0, _elliptical.createElement)('list', { id: 'minutes', items: [{ text: 'quarter', value: 15 }, { text: 'half', value: 30 }] }),
          (0, _elliptical.createElement)(_ellipticalNumber.Integer, { id: 'minutes', min: 1, max: 59, merge: true, limit: 1 })
        )
      ),
      (0, _elliptical.createElement)('list', { limit: 2, id: 'direction', items: [{ text: ' past ', value: 1 }, { text: ' to ', value: -1 }, { text: ' of ', value: -1 }, { text: ' til ', value: -1 }, { text: ' before ', value: -1 }, { text: ' from ', value: -1 }] }),
      (0, _elliptical.createElement)(
        'label',
        { argument: false, text: 'hour', id: 'absolute' },
        (0, _elliptical.createElement)(
          'choice',
          null,
          (0, _elliptical.createElement)(AbsoluteNumeric, { minutes: false }),
          (0, _elliptical.createElement)(AbsoluteNamed, null)
        )
      )
    );
  }
};

var RecursiveTime = {
  mapResult: function mapResult(result) {
    var duration = result.direction === -1 ? (0, _helpers.negateDuration)(result.duration) : result.duration;

    return (0, _helpers.relativeTime)(duration, result.time);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        { merge: true },
        (0, _elliptical.createElement)(_duration.TimeDuration, { id: 'duration' }),
        (0, _elliptical.createElement)('list', { id: 'direction', items: [{ text: ' before ', value: -1 }, { text: ' after ', value: 1 }, { text: ' from ', value: 1 }, { text: ' past ', value: 1 }, { text: ' to ', value: -1 }, { text: ' of ', value: -1 }, { text: ' til ', value: -1 }], limit: 2 })
      ),
      (0, _elliptical.createElement)(Time, { recurse: false, relative: false, id: 'time' })
    );
  }
};

var MinutesOrSeconds = {
  mapResult: function mapResult(result) {
    return parseInt(result, 10);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(_ellipticalNumber.DigitString, { argument: 'minutes', max: 59, minLength: 2, maxLength: 2 });
  }
};

var Hour = {
  mapResult: function mapResult(result) {
    return parseInt(result, 10);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(_ellipticalNumber.DigitString, { argument: 'hour', min: 1, max: 12, allowLeadingZeros: false });
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./duration":12,"./helpers":13,"elliptical":231,"elliptical-number":120}],18:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Weekday = undefined;

var _elliptical = require('elliptical');

var Weekday = exports.Weekday = {
  defaultProps: {
    argument: 'day of the week'
  },

  describe: function describe(_ref) {
    var props = _ref.props;

    return (0, _elliptical.createElement)(
      'label',
      { text: props.argument },
      (0, _elliptical.createElement)('list', { items: [{ text: 'Sunday', value: 0 }, { text: 'Monday', value: 1 }, { text: 'Tuesday', value: 2 }, { text: 'Wednesday', value: 3 }, { text: 'Thursday', value: 4 }, { text: 'Friday', value: 5 }, { text: 'Saturday', value: 6 }] })
    );
  }
}; /** @jsx createElement */
},{"elliptical":231}],19:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Year = undefined;

var _elliptical = require('elliptical');

var _ellipticalNumber = require('elliptical-number');

/** @jsx createElement */

function suppressYear(input) {
  return (/^('\d|\d|\d{3})$/.test(input)
  );
}

function mapResult(result) {
  if (result.twoDigitYear) {
    var decade = parseInt(result.twoDigitYear, 10);
    var year = decade < 29 ? 2000 + decade : 1900 + decade;
    return { year: year, _ambiguousCentury: true };
  } else if (result.fourDigitYear) {
    return { year: parseInt(result.fourDigitYear, 10) };
  }
}

function describe() {
  return (0, _elliptical.createElement)(
    'label',
    { suppressWhen: suppressYear, text: 'year' },
    (0, _elliptical.createElement)(
      'choice',
      { limit: 1 },
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: '\'', optional: true, limited: true }),
        (0, _elliptical.createElement)(_ellipticalNumber.DigitString, { minLength: 2, maxLength: 2, id: 'twoDigitYear' })
      ),
      (0, _elliptical.createElement)(_ellipticalNumber.DigitString, { minLength: 4, maxLength: 4, id: 'fourDigitYear' })
    )
  );
}

var Year = exports.Year = { mapResult: mapResult, describe: describe };
},{"elliptical":231,"elliptical-number":120}],20:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/assign"), __esModule: true };
},{"core-js/library/fn/object/assign":30}],21:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/create"), __esModule: true };
},{"core-js/library/fn/object/create":31}],22:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/define-property"), __esModule: true };
},{"core-js/library/fn/object/define-property":32}],23:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/set-prototype-of"), __esModule: true };
},{"core-js/library/fn/object/set-prototype-of":33}],24:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/promise"), __esModule: true };
},{"core-js/library/fn/promise":34}],25:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/symbol"), __esModule: true };
},{"core-js/library/fn/symbol":35}],26:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/symbol/iterator"), __esModule: true };
},{"core-js/library/fn/symbol/iterator":36}],27:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _defineProperty = require("babel-runtime/core-js/object/define-property");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};
},{"babel-runtime/core-js/object/define-property":22}],28:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _assign = require("babel-runtime/core-js/object/assign");

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
},{"babel-runtime/core-js/object/assign":20}],29:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _iterator = require("babel-runtime/core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("babel-runtime/core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
},{"babel-runtime/core-js/symbol":25,"babel-runtime/core-js/symbol/iterator":26}],30:[function(require,module,exports){
require('../../modules/es6.object.assign');
module.exports = require('../../modules/_core').Object.assign;
},{"../../modules/_core":44,"../../modules/es6.object.assign":107}],31:[function(require,module,exports){
require('../../modules/es6.object.create');
var $Object = require('../../modules/_core').Object;
module.exports = function create(P, D){
  return $Object.create(P, D);
};
},{"../../modules/_core":44,"../../modules/es6.object.create":108}],32:[function(require,module,exports){
require('../../modules/es6.object.define-property');
var $Object = require('../../modules/_core').Object;
module.exports = function defineProperty(it, key, desc){
  return $Object.defineProperty(it, key, desc);
};
},{"../../modules/_core":44,"../../modules/es6.object.define-property":109}],33:[function(require,module,exports){
require('../../modules/es6.object.set-prototype-of');
module.exports = require('../../modules/_core').Object.setPrototypeOf;
},{"../../modules/_core":44,"../../modules/es6.object.set-prototype-of":110}],34:[function(require,module,exports){
require('../modules/es6.object.to-string');
require('../modules/es6.string.iterator');
require('../modules/web.dom.iterable');
require('../modules/es6.promise');
module.exports = require('../modules/_core').Promise;
},{"../modules/_core":44,"../modules/es6.object.to-string":111,"../modules/es6.promise":112,"../modules/es6.string.iterator":113,"../modules/web.dom.iterable":115}],35:[function(require,module,exports){
require('../../modules/es6.symbol');
require('../../modules/es6.object.to-string');
module.exports = require('../../modules/_core').Symbol;
},{"../../modules/_core":44,"../../modules/es6.object.to-string":111,"../../modules/es6.symbol":114}],36:[function(require,module,exports){
require('../../modules/es6.string.iterator');
require('../../modules/web.dom.iterable');
module.exports = require('../../modules/_wks')('iterator');
},{"../../modules/_wks":104,"../../modules/es6.string.iterator":113,"../../modules/web.dom.iterable":115}],37:[function(require,module,exports){
module.exports = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};
},{}],38:[function(require,module,exports){
module.exports = function(){ /* empty */ };
},{}],39:[function(require,module,exports){
module.exports = function(it, Constructor, name, forbiddenField){
  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};
},{}],40:[function(require,module,exports){
var isObject = require('./_is-object');
module.exports = function(it){
  if(!isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};
},{"./_is-object":63}],41:[function(require,module,exports){
// false -> Array#indexOf
// true  -> Array#includes
var toIObject = require('./_to-iobject')
  , toLength  = require('./_to-length')
  , toIndex   = require('./_to-index');
module.exports = function(IS_INCLUDES){
  return function($this, el, fromIndex){
    var O      = toIObject($this)
      , length = toLength(O.length)
      , index  = toIndex(fromIndex, length)
      , value;
    // Array#includes uses SameValueZero equality algorithm
    if(IS_INCLUDES && el != el)while(length > index){
      value = O[index++];
      if(value != value)return true;
    // Array#toIndex ignores holes, Array#includes - not
    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
      if(O[index] === el)return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};
},{"./_to-index":97,"./_to-iobject":99,"./_to-length":100}],42:[function(require,module,exports){
// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = require('./_cof')
  , TAG = require('./_wks')('toStringTag')
  // ES3 wrong here
  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key){
  try {
    return it[key];
  } catch(e){ /* empty */ }
};

module.exports = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};
},{"./_cof":43,"./_wks":104}],43:[function(require,module,exports){
var toString = {}.toString;

module.exports = function(it){
  return toString.call(it).slice(8, -1);
};
},{}],44:[function(require,module,exports){
var core = module.exports = {version: '2.2.2'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef
},{}],45:[function(require,module,exports){
// optional / simple context binding
var aFunction = require('./_a-function');
module.exports = function(fn, that, length){
  aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};
},{"./_a-function":37}],46:[function(require,module,exports){
// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};
},{}],47:[function(require,module,exports){
// Thank's IE8 for his funny defineProperty
module.exports = !require('./_fails')(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});
},{"./_fails":52}],48:[function(require,module,exports){
var isObject = require('./_is-object')
  , document = require('./_global').document
  // in old IE typeof document.createElement is 'object'
  , is = isObject(document) && isObject(document.createElement);
module.exports = function(it){
  return is ? document.createElement(it) : {};
};
},{"./_global":54,"./_is-object":63}],49:[function(require,module,exports){
// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');
},{}],50:[function(require,module,exports){
// all enumerable object keys, includes symbols
var getKeys = require('./_object-keys')
  , gOPS    = require('./_object-gops')
  , pIE     = require('./_object-pie');
module.exports = function(it){
  var result     = getKeys(it)
    , getSymbols = gOPS.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = pIE.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};
},{"./_object-gops":81,"./_object-keys":84,"./_object-pie":85}],51:[function(require,module,exports){
var global    = require('./_global')
  , core      = require('./_core')
  , ctx       = require('./_ctx')
  , hide      = require('./_hide')
  , PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , IS_WRAP   = type & $export.W
    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
    , expProto  = exports[PROTOTYPE]
    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
    , key, own, out;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if(own && key in exports)continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function(C){
      var F = function(a, b, c){
        if(this instanceof C){
          switch(arguments.length){
            case 0: return new C;
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if(IS_PROTO){
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library` 
module.exports = $export;
},{"./_core":44,"./_ctx":45,"./_global":54,"./_hide":56}],52:[function(require,module,exports){
module.exports = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};
},{}],53:[function(require,module,exports){
var ctx         = require('./_ctx')
  , call        = require('./_iter-call')
  , isArrayIter = require('./_is-array-iter')
  , anObject    = require('./_an-object')
  , toLength    = require('./_to-length')
  , getIterFn   = require('./core.get-iterator-method');
module.exports = function(iterable, entries, fn, that, ITERATOR){
  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
    , f      = ctx(fn, that, entries ? 2 : 1)
    , index  = 0
    , length, step, iterator;
  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
    call(iterator, f, step.value, entries);
  }
};
},{"./_an-object":40,"./_ctx":45,"./_is-array-iter":61,"./_iter-call":64,"./_to-length":100,"./core.get-iterator-method":105}],54:[function(require,module,exports){
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef
},{}],55:[function(require,module,exports){
var hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key){
  return hasOwnProperty.call(it, key);
};
},{}],56:[function(require,module,exports){
var dP         = require('./_object-dp')
  , createDesc = require('./_property-desc');
module.exports = require('./_descriptors') ? function(object, key, value){
  return dP.f(object, key, createDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};
},{"./_descriptors":47,"./_object-dp":76,"./_property-desc":86}],57:[function(require,module,exports){
module.exports = require('./_global').document && document.documentElement;
},{"./_global":54}],58:[function(require,module,exports){
module.exports = !require('./_descriptors') && !require('./_fails')(function(){
  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;
});
},{"./_descriptors":47,"./_dom-create":48,"./_fails":52}],59:[function(require,module,exports){
// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function(fn, args, that){
  var un = that === undefined;
  switch(args.length){
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return              fn.apply(that, args);
};
},{}],60:[function(require,module,exports){
// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = require('./_cof');
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return cof(it) == 'String' ? it.split('') : Object(it);
};
},{"./_cof":43}],61:[function(require,module,exports){
// check on default Array iterator
var Iterators  = require('./_iterators')
  , ITERATOR   = require('./_wks')('iterator')
  , ArrayProto = Array.prototype;

module.exports = function(it){
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};
},{"./_iterators":69,"./_wks":104}],62:[function(require,module,exports){
// 7.2.2 IsArray(argument)
var cof = require('./_cof');
module.exports = Array.isArray || function isArray(arg){
  return cof(arg) == 'Array';
};
},{"./_cof":43}],63:[function(require,module,exports){
module.exports = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};
},{}],64:[function(require,module,exports){
// call something on iterator step with safe closing on error
var anObject = require('./_an-object');
module.exports = function(iterator, fn, value, entries){
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)anObject(ret.call(iterator));
    throw e;
  }
};
},{"./_an-object":40}],65:[function(require,module,exports){
'use strict';
var create         = require('./_object-create')
  , descriptor     = require('./_property-desc')
  , setToStringTag = require('./_set-to-string-tag')
  , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
require('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });

module.exports = function(Constructor, NAME, next){
  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
  setToStringTag(Constructor, NAME + ' Iterator');
};
},{"./_hide":56,"./_object-create":75,"./_property-desc":86,"./_set-to-string-tag":91,"./_wks":104}],66:[function(require,module,exports){
'use strict';
var LIBRARY        = require('./_library')
  , $export        = require('./_export')
  , redefine       = require('./_redefine')
  , hide           = require('./_hide')
  , has            = require('./_has')
  , Iterators      = require('./_iterators')
  , $iterCreate    = require('./_iter-create')
  , setToStringTag = require('./_set-to-string-tag')
  , getPrototypeOf = require('./_object-gpo')
  , ITERATOR       = require('./_wks')('iterator')
  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  , FF_ITERATOR    = '@@iterator'
  , KEYS           = 'keys'
  , VALUES         = 'values';

var returnThis = function(){ return this; };

module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  $iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
    , methods, key, IteratorPrototype;
  // Fix native
  if($anyNative){
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
    if(IteratorPrototype !== Object.prototype){
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if(DEF_VALUES && $native && $native.name !== VALUES){
    VALUES_BUG = true;
    $default = function values(){ return $native.call(this); };
  }
  // Define iterator
  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES ? $default : getMethod(VALUES),
      keys:    IS_SET     ? $default : getMethod(KEYS),
      entries: $entries
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};
},{"./_export":51,"./_has":55,"./_hide":56,"./_iter-create":65,"./_iterators":69,"./_library":71,"./_object-gpo":82,"./_redefine":88,"./_set-to-string-tag":91,"./_wks":104}],67:[function(require,module,exports){
var ITERATOR     = require('./_wks')('iterator')
  , SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

module.exports = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR]();
    iter.next = function(){ return {done: safe = true}; };
    arr[ITERATOR] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};
},{"./_wks":104}],68:[function(require,module,exports){
module.exports = function(done, value){
  return {value: value, done: !!done};
};
},{}],69:[function(require,module,exports){
module.exports = {};
},{}],70:[function(require,module,exports){
var getKeys   = require('./_object-keys')
  , toIObject = require('./_to-iobject');
module.exports = function(object, el){
  var O      = toIObject(object)
    , keys   = getKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};
},{"./_object-keys":84,"./_to-iobject":99}],71:[function(require,module,exports){
module.exports = true;
},{}],72:[function(require,module,exports){
var META     = require('./_uid')('meta')
  , isObject = require('./_is-object')
  , has      = require('./_has')
  , setDesc  = require('./_object-dp').f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !require('./_fails')(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};
},{"./_fails":52,"./_has":55,"./_is-object":63,"./_object-dp":76,"./_uid":103}],73:[function(require,module,exports){
var global    = require('./_global')
  , macrotask = require('./_task').set
  , Observer  = global.MutationObserver || global.WebKitMutationObserver
  , process   = global.process
  , Promise   = global.Promise
  , isNode    = require('./_cof')(process) == 'process'
  , head, last, notify;

var flush = function(){
  var parent, fn;
  if(isNode && (parent = process.domain))parent.exit();
  while(head){
    fn = head.fn;
    fn(); // <- currently we use it only for Promise - try / catch not required
    head = head.next;
  } last = undefined;
  if(parent)parent.enter();
};

// Node.js
if(isNode){
  notify = function(){
    process.nextTick(flush);
  };
// browsers with MutationObserver
} else if(Observer){
  var toggle = true
    , node   = document.createTextNode('');
  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
  notify = function(){
    node.data = toggle = !toggle;
  };
// environments with maybe non-completely correct, but existent Promise
} else if(Promise && Promise.resolve){
  notify = function(){
    Promise.resolve().then(flush);
  };
// for other environments - macrotask based on:
// - setImmediate
// - MessageChannel
// - window.postMessag
// - onreadystatechange
// - setTimeout
} else {
  notify = function(){
    // strange IE + webpack dev server bug - use .call(global)
    macrotask.call(global, flush);
  };
}

module.exports = function(fn){
  var task = {fn: fn, next: undefined};
  if(last)last.next = task;
  if(!head){
    head = task;
    notify();
  } last = task;
};
},{"./_cof":43,"./_global":54,"./_task":96}],74:[function(require,module,exports){
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys  = require('./_object-keys')
  , gOPS     = require('./_object-gops')
  , pIE      = require('./_object-pie')
  , toObject = require('./_to-object')
  , IObject  = require('./_iobject')
  , $assign  = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || require('./_fails')(function(){
  var A = {}
    , B = {}
    , S = Symbol()
    , K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function(k){ B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
  var T     = toObject(target)
    , aLen  = arguments.length
    , index = 1
    , getSymbols = gOPS.f
    , isEnum     = pIE.f;
  while(aLen > index){
    var S      = IObject(arguments[index++])
      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
      , length = keys.length
      , j      = 0
      , key;
    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
  } return T;
} : $assign;
},{"./_fails":52,"./_iobject":60,"./_object-gops":81,"./_object-keys":84,"./_object-pie":85,"./_to-object":101}],75:[function(require,module,exports){
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject    = require('./_an-object')
  , dPs         = require('./_object-dps')
  , enumBugKeys = require('./_enum-bug-keys')
  , IE_PROTO    = require('./_shared-key')('IE_PROTO')
  , Empty       = function(){ /* empty */ }
  , PROTOTYPE   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function(){
  // Thrash, waste and sodomy: IE GC bug
  var iframe = require('./_dom-create')('iframe')
    , i      = enumBugKeys.length
    , gt     = '>'
    , iframeDocument;
  iframe.style.display = 'none';
  require('./_html').appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write('<script>document.F=Object</script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties){
  var result;
  if(O !== null){
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty;
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};
},{"./_an-object":40,"./_dom-create":48,"./_enum-bug-keys":49,"./_html":57,"./_object-dps":77,"./_shared-key":92}],76:[function(require,module,exports){
var anObject       = require('./_an-object')
  , IE8_DOM_DEFINE = require('./_ie8-dom-define')
  , toPrimitive    = require('./_to-primitive')
  , dP             = Object.defineProperty;

exports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if(IE8_DOM_DEFINE)try {
    return dP(O, P, Attributes);
  } catch(e){ /* empty */ }
  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
  if('value' in Attributes)O[P] = Attributes.value;
  return O;
};
},{"./_an-object":40,"./_descriptors":47,"./_ie8-dom-define":58,"./_to-primitive":102}],77:[function(require,module,exports){
var dP       = require('./_object-dp')
  , anObject = require('./_an-object')
  , getKeys  = require('./_object-keys');

module.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){
  anObject(O);
  var keys   = getKeys(Properties)
    , length = keys.length
    , i = 0
    , P;
  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
  return O;
};
},{"./_an-object":40,"./_descriptors":47,"./_object-dp":76,"./_object-keys":84}],78:[function(require,module,exports){
var pIE            = require('./_object-pie')
  , createDesc     = require('./_property-desc')
  , toIObject      = require('./_to-iobject')
  , toPrimitive    = require('./_to-primitive')
  , has            = require('./_has')
  , IE8_DOM_DEFINE = require('./_ie8-dom-define')
  , gOPD           = Object.getOwnPropertyDescriptor;

exports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){
  O = toIObject(O);
  P = toPrimitive(P, true);
  if(IE8_DOM_DEFINE)try {
    return gOPD(O, P);
  } catch(e){ /* empty */ }
  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
};
},{"./_descriptors":47,"./_has":55,"./_ie8-dom-define":58,"./_object-pie":85,"./_property-desc":86,"./_to-iobject":99,"./_to-primitive":102}],79:[function(require,module,exports){
// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = require('./_to-iobject')
  , gOPN      = require('./_object-gopn').f
  , toString  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN(it);
  } catch(e){
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it){
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};

},{"./_object-gopn":80,"./_to-iobject":99}],80:[function(require,module,exports){
// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys      = require('./_object-keys-internal')
  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return $keys(O, hiddenKeys);
};
},{"./_enum-bug-keys":49,"./_object-keys-internal":83}],81:[function(require,module,exports){
exports.f = Object.getOwnPropertySymbols;
},{}],82:[function(require,module,exports){
// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has         = require('./_has')
  , toObject    = require('./_to-object')
  , IE_PROTO    = require('./_shared-key')('IE_PROTO')
  , ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function(O){
  O = toObject(O);
  if(has(O, IE_PROTO))return O[IE_PROTO];
  if(typeof O.constructor == 'function' && O instanceof O.constructor){
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};
},{"./_has":55,"./_shared-key":92,"./_to-object":101}],83:[function(require,module,exports){
var has          = require('./_has')
  , toIObject    = require('./_to-iobject')
  , arrayIndexOf = require('./_array-includes')(false)
  , IE_PROTO     = require('./_shared-key')('IE_PROTO');

module.exports = function(object, names){
  var O      = toIObject(object)
    , i      = 0
    , result = []
    , key;
  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while(names.length > i)if(has(O, key = names[i++])){
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};
},{"./_array-includes":41,"./_has":55,"./_shared-key":92,"./_to-iobject":99}],84:[function(require,module,exports){
// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys       = require('./_object-keys-internal')
  , enumBugKeys = require('./_enum-bug-keys');

module.exports = Object.keys || function keys(O){
  return $keys(O, enumBugKeys);
};
},{"./_enum-bug-keys":49,"./_object-keys-internal":83}],85:[function(require,module,exports){
exports.f = {}.propertyIsEnumerable;
},{}],86:[function(require,module,exports){
module.exports = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};
},{}],87:[function(require,module,exports){
var hide = require('./_hide');
module.exports = function(target, src, safe){
  for(var key in src){
    if(safe && target[key])target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};
},{"./_hide":56}],88:[function(require,module,exports){
module.exports = require('./_hide');
},{"./_hide":56}],89:[function(require,module,exports){
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = require('./_is-object')
  , anObject = require('./_an-object');
var check = function(O, proto){
  anObject(O);
  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};
},{"./_an-object":40,"./_ctx":45,"./_is-object":63,"./_object-gopd":78}],90:[function(require,module,exports){
'use strict';
var global      = require('./_global')
  , core        = require('./_core')
  , dP          = require('./_object-dp')
  , DESCRIPTORS = require('./_descriptors')
  , SPECIES     = require('./_wks')('species');

module.exports = function(KEY){
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
    configurable: true,
    get: function(){ return this; }
  });
};
},{"./_core":44,"./_descriptors":47,"./_global":54,"./_object-dp":76,"./_wks":104}],91:[function(require,module,exports){
var def = require('./_object-dp').f
  , has = require('./_has')
  , TAG = require('./_wks')('toStringTag');

module.exports = function(it, tag, stat){
  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};
},{"./_has":55,"./_object-dp":76,"./_wks":104}],92:[function(require,module,exports){
var shared = require('./_shared')('keys')
  , uid    = require('./_uid');
module.exports = function(key){
  return shared[key] || (shared[key] = uid(key));
};
},{"./_shared":93,"./_uid":103}],93:[function(require,module,exports){
var global = require('./_global')
  , SHARED = '__core-js_shared__'
  , store  = global[SHARED] || (global[SHARED] = {});
module.exports = function(key){
  return store[key] || (store[key] = {});
};
},{"./_global":54}],94:[function(require,module,exports){
// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject  = require('./_an-object')
  , aFunction = require('./_a-function')
  , SPECIES   = require('./_wks')('species');
module.exports = function(O, D){
  var C = anObject(O).constructor, S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};
},{"./_a-function":37,"./_an-object":40,"./_wks":104}],95:[function(require,module,exports){
var toInteger = require('./_to-integer')
  , defined   = require('./_defined');
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING){
  return function(that, pos){
    var s = String(defined(that))
      , i = toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};
},{"./_defined":46,"./_to-integer":98}],96:[function(require,module,exports){
var ctx                = require('./_ctx')
  , invoke             = require('./_invoke')
  , html               = require('./_html')
  , cel                = require('./_dom-create')
  , global             = require('./_global')
  , process            = global.process
  , setTask            = global.setImmediate
  , clearTask          = global.clearImmediate
  , MessageChannel     = global.MessageChannel
  , counter            = 0
  , queue              = {}
  , ONREADYSTATECHANGE = 'onreadystatechange'
  , defer, channel, port;
var run = function(){
  var id = +this;
  if(queue.hasOwnProperty(id)){
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function(event){
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!setTask || !clearTask){
  setTask = function setImmediate(fn){
    var args = [], i = 1;
    while(arguments.length > i)args.push(arguments[i++]);
    queue[++counter] = function(){
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id){
    delete queue[id];
  };
  // Node.js 0.8-
  if(require('./_cof')(process) == 'process'){
    defer = function(id){
      process.nextTick(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if(MessageChannel){
    channel = new MessageChannel;
    port    = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
    defer = function(id){
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if(ONREADYSTATECHANGE in cel('script')){
    defer = function(id){
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function(id){
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set:   setTask,
  clear: clearTask
};
},{"./_cof":43,"./_ctx":45,"./_dom-create":48,"./_global":54,"./_html":57,"./_invoke":59}],97:[function(require,module,exports){
var toInteger = require('./_to-integer')
  , max       = Math.max
  , min       = Math.min;
module.exports = function(index, length){
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};
},{"./_to-integer":98}],98:[function(require,module,exports){
// 7.1.4 ToInteger
var ceil  = Math.ceil
  , floor = Math.floor;
module.exports = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};
},{}],99:[function(require,module,exports){
// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = require('./_iobject')
  , defined = require('./_defined');
module.exports = function(it){
  return IObject(defined(it));
};
},{"./_defined":46,"./_iobject":60}],100:[function(require,module,exports){
// 7.1.15 ToLength
var toInteger = require('./_to-integer')
  , min       = Math.min;
module.exports = function(it){
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};
},{"./_to-integer":98}],101:[function(require,module,exports){
// 7.1.13 ToObject(argument)
var defined = require('./_defined');
module.exports = function(it){
  return Object(defined(it));
};
},{"./_defined":46}],102:[function(require,module,exports){
// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = require('./_is-object');
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function(it, S){
  if(!isObject(it))return it;
  var fn, val;
  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  throw TypeError("Can't convert object to primitive value");
};
},{"./_is-object":63}],103:[function(require,module,exports){
var id = 0
  , px = Math.random();
module.exports = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};
},{}],104:[function(require,module,exports){
var store      = require('./_shared')('wks')
  , uid        = require('./_uid')
  , Symbol     = require('./_global').Symbol
  , USE_SYMBOL = typeof Symbol == 'function';
module.exports = function(name){
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};
},{"./_global":54,"./_shared":93,"./_uid":103}],105:[function(require,module,exports){
var classof   = require('./_classof')
  , ITERATOR  = require('./_wks')('iterator')
  , Iterators = require('./_iterators');
module.exports = require('./_core').getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};
},{"./_classof":42,"./_core":44,"./_iterators":69,"./_wks":104}],106:[function(require,module,exports){
'use strict';
var addToUnscopables = require('./_add-to-unscopables')
  , step             = require('./_iter-step')
  , Iterators        = require('./_iterators')
  , toIObject        = require('./_to-iobject');

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return step(1);
  }
  if(kind == 'keys'  )return step(0, index);
  if(kind == 'values')return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');
},{"./_add-to-unscopables":38,"./_iter-define":66,"./_iter-step":68,"./_iterators":69,"./_to-iobject":99}],107:[function(require,module,exports){
// 19.1.3.1 Object.assign(target, source)
var $export = require('./_export');

$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});
},{"./_export":51,"./_object-assign":74}],108:[function(require,module,exports){
var $export = require('./_export')
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', {create: require('./_object-create')});
},{"./_export":51,"./_object-create":75}],109:[function(require,module,exports){
var $export = require('./_export');
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});
},{"./_descriptors":47,"./_export":51,"./_object-dp":76}],110:[function(require,module,exports){
// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = require('./_export');
$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});
},{"./_export":51,"./_set-proto":89}],111:[function(require,module,exports){

},{}],112:[function(require,module,exports){
'use strict';
var LIBRARY            = require('./_library')
  , global             = require('./_global')
  , ctx                = require('./_ctx')
  , classof            = require('./_classof')
  , $export            = require('./_export')
  , isObject           = require('./_is-object')
  , anObject           = require('./_an-object')
  , aFunction          = require('./_a-function')
  , anInstance         = require('./_an-instance')
  , forOf              = require('./_for-of')
  , setProto           = require('./_set-proto').set
  , speciesConstructor = require('./_species-constructor')
  , task               = require('./_task').set
  , microtask          = require('./_microtask')
  , PROMISE            = 'Promise'
  , TypeError          = global.TypeError
  , process            = global.process
  , $Promise           = global[PROMISE]
  , process            = global.process
  , isNode             = classof(process) == 'process'
  , empty              = function(){ /* empty */ }
  , Internal, GenericPromiseCapability, Wrapper;

var USE_NATIVE = !!function(){
  try {
    // correct subclassing with @@species support
    var promise     = $Promise.resolve(1)
      , FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function(exec){ exec(empty, empty); };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
  } catch(e){ /* empty */ }
}();

// helpers
var sameConstructor = function(a, b){
  // with library wrapper special case
  return a === b || a === $Promise && b === Wrapper;
};
var isThenable = function(it){
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var newPromiseCapability = function(C){
  return sameConstructor($Promise, C)
    ? new PromiseCapability(C)
    : new GenericPromiseCapability(C);
};
var PromiseCapability = GenericPromiseCapability = function(C){
  var resolve, reject;
  this.promise = new C(function($$resolve, $$reject){
    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject  = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject  = aFunction(reject);
};
var perform = function(exec){
  try {
    exec();
  } catch(e){
    return {error: e};
  }
};
var notify = function(promise, isReject){
  if(promise._n)return;
  promise._n = true;
  var chain = promise._c;
  microtask(function(){
    var value = promise._v
      , ok    = promise._s == 1
      , i     = 0;
    var run = function(reaction){
      var handler = ok ? reaction.ok : reaction.fail
        , resolve = reaction.resolve
        , reject  = reaction.reject
        , domain  = reaction.domain
        , result, then;
      try {
        if(handler){
          if(!ok){
            if(promise._h == 2)onHandleUnhandled(promise);
            promise._h = 1;
          }
          if(handler === true)result = value;
          else {
            if(domain)domain.enter();
            result = handler(value);
            if(domain)domain.exit();
          }
          if(result === reaction.promise){
            reject(TypeError('Promise-chain cycle'));
          } else if(then = isThenable(result)){
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch(e){
        reject(e);
      }
    };
    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if(isReject && !promise._h)onUnhandled(promise);
  });
};
var onUnhandled = function(promise){
  task.call(global, function(){
    var value = promise._v
      , abrupt, handler, console;
    if(isUnhandled(promise)){
      abrupt = perform(function(){
        if(isNode){
          process.emit('unhandledRejection', value, promise);
        } else if(handler = global.onunhandledrejection){
          handler({promise: promise, reason: value});
        } else if((console = global.console) && console.error){
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if(abrupt)throw abrupt.error;
  });
};
var isUnhandled = function(promise){
  if(promise._h == 1)return false;
  var chain = promise._a || promise._c
    , i     = 0
    , reaction;
  while(chain.length > i){
    reaction = chain[i++];
    if(reaction.fail || !isUnhandled(reaction.promise))return false;
  } return true;
};
var onHandleUnhandled = function(promise){
  task.call(global, function(){
    var handler;
    if(isNode){
      process.emit('rejectionHandled', promise);
    } else if(handler = global.onrejectionhandled){
      handler({promise: promise, reason: promise._v});
    }
  });
};
var $reject = function(value){
  var promise = this;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if(!promise._a)promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function(value){
  var promise = this
    , then;
  if(promise._d)return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if(promise === value)throw TypeError("Promise can't be resolved itself");
    if(then = isThenable(value)){
      microtask(function(){
        var wrapper = {_w: promise, _d: false}; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch(e){
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch(e){
    $reject.call({_w: promise, _d: false}, e); // wrap
  }
};

// constructor polyfill
if(!USE_NATIVE){
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor){
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch(err){
      $reject.call(this, err);
    }
  };
  Internal = function Promise(executor){
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = require('./_redefine-all')($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected){
      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail   = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if(this._a)this._a.push(reaction);
      if(this._s)notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function(onRejected){
      return this.then(undefined, onRejected);
    }
  });
  PromiseCapability = function(){
    var promise  = new Internal;
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject  = ctx($reject, promise, 1);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
require('./_set-to-string-tag')($Promise, PROMISE);
require('./_set-species')(PROMISE);
Wrapper = require('./_core')[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r){
    var capability = newPromiseCapability(this)
      , $$reject   = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x){
    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
    var capability = newPromiseCapability(this)
      , $$resolve  = capability.resolve;
    $$resolve(x);
    return capability.promise;
  }
});
$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function(iter){
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , resolve    = capability.resolve
      , reject     = capability.reject;
    var abrupt = perform(function(){
      var values    = []
        , index     = 0
        , remaining = 1;
      forOf(iterable, false, function(promise){
        var $index        = index++
          , alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function(value){
          if(alreadyCalled)return;
          alreadyCalled  = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable){
    var C          = this
      , capability = newPromiseCapability(C)
      , reject     = capability.reject;
    var abrupt = perform(function(){
      forOf(iterable, false, function(promise){
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if(abrupt)reject(abrupt.error);
    return capability.promise;
  }
});
},{"./_a-function":37,"./_an-instance":39,"./_an-object":40,"./_classof":42,"./_core":44,"./_ctx":45,"./_export":51,"./_for-of":53,"./_global":54,"./_is-object":63,"./_iter-detect":67,"./_library":71,"./_microtask":73,"./_redefine-all":87,"./_set-proto":89,"./_set-species":90,"./_set-to-string-tag":91,"./_species-constructor":94,"./_task":96,"./_wks":104}],113:[function(require,module,exports){
'use strict';
var $at  = require('./_string-at')(true);

// 21.1.3.27 String.prototype[@@iterator]()
require('./_iter-define')(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});
},{"./_iter-define":66,"./_string-at":95}],114:[function(require,module,exports){
'use strict';
// ECMAScript 6 symbols shim
var global         = require('./_global')
  , core           = require('./_core')
  , has            = require('./_has')
  , DESCRIPTORS    = require('./_descriptors')
  , $export        = require('./_export')
  , redefine       = require('./_redefine')
  , META           = require('./_meta').KEY
  , $fails         = require('./_fails')
  , shared         = require('./_shared')
  , setToStringTag = require('./_set-to-string-tag')
  , uid            = require('./_uid')
  , wks            = require('./_wks')
  , keyOf          = require('./_keyof')
  , enumKeys       = require('./_enum-keys')
  , isArray        = require('./_is-array')
  , anObject       = require('./_an-object')
  , toIObject      = require('./_to-iobject')
  , toPrimitive    = require('./_to-primitive')
  , createDesc     = require('./_property-desc')
  , _create        = require('./_object-create')
  , gOPNExt        = require('./_object-gopn-ext')
  , $GOPD          = require('./_object-gopd')
  , $DP            = require('./_object-dp')
  , gOPD           = $GOPD.f
  , dP             = $DP.f
  , gOPN           = gOPNExt.f
  , $Symbol        = global.Symbol
  , $JSON          = global.JSON
  , _stringify     = $JSON && $JSON.stringify
  , setter         = false
  , PROTOTYPE      = 'prototype'
  , HIDDEN         = wks('_hidden')
  , TO_PRIMITIVE   = wks('toPrimitive')
  , isEnum         = {}.propertyIsEnumerable
  , SymbolRegistry = shared('symbol-registry')
  , AllSymbols     = shared('symbols')
  , ObjectProto    = Object[PROTOTYPE]
  , USE_NATIVE     = typeof $Symbol == 'function'
  , QObject        = global.QObject;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function(){
  return _create(dP({}, 'a', {
    get: function(){ return dP(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto, key);
  if(protoDesc)delete ObjectProto[key];
  dP(it, key, D);
  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  DESCRIPTORS && setter && setSymbolDesc(ObjectProto, tag, {
    configurable: true,
    set: function(value){
      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    }
  });
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if(has(AllSymbols, key)){
    if(!D.enumerable){
      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _create(D, {enumerable: createDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  anObject(it);
  var keys = enumKeys(P = toIObject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum.call(this, key = toPrimitive(key, true));
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  var D = gOPD(it = toIObject(it), key = toPrimitive(key, true));
  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i)if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i)if(has(AllSymbols, key = names[i++]))result.push(AllSymbols[key]);
  return result;
};
var $stringify = function stringify(it){
  if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
  var args = [it]
    , i    = 1
    , replacer, $replacer;
  while(arguments.length > i)args.push(arguments[i++]);
  replacer = args[1];
  if(typeof replacer == 'function')$replacer = replacer;
  if($replacer || !isArray(replacer))replacer = function(key, value){
    if($replacer)value = $replacer.call(this, key, value);
    if(!isSymbol(value))return value;
  };
  args[1] = replacer;
  return _stringify.apply($JSON, args);
};
var BUGGY_JSON = $fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
});

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    return wrap(uid(arguments.length > 0 ? arguments[0] : undefined));
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f   = $defineProperty;
  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;
  require('./_object-pie').f  = $propertyIsEnumerable
  require('./_object-gops').f = $getOwnPropertySymbols;

  if(DESCRIPTORS && !require('./_library')){
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

// 19.4.2.2 Symbol.hasInstance
// 19.4.2.3 Symbol.isConcatSpreadable
// 19.4.2.4 Symbol.iterator
// 19.4.2.6 Symbol.match
// 19.4.2.8 Symbol.replace
// 19.4.2.9 Symbol.search
// 19.4.2.10 Symbol.species
// 19.4.2.11 Symbol.split
// 19.4.2.12 Symbol.toPrimitive
// 19.4.2.13 Symbol.toStringTag
// 19.4.2.14 Symbol.unscopables
for(var symbols = (
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i = 0; symbols.length > i; ){
  var key     = symbols[i++]
    , Wrapper = core.Symbol
    , sym     = wks(key);
  if(!(key in Wrapper))dP(Wrapper, key, {value: USE_NATIVE ? sym : wrap(sym)});
};

// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
if(!QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild)setter = true;

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || BUGGY_JSON), 'JSON', {stringify: $stringify});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);
},{"./_an-object":40,"./_core":44,"./_descriptors":47,"./_enum-keys":50,"./_export":51,"./_fails":52,"./_global":54,"./_has":55,"./_hide":56,"./_is-array":62,"./_keyof":70,"./_library":71,"./_meta":72,"./_object-create":75,"./_object-dp":76,"./_object-gopd":78,"./_object-gopn":80,"./_object-gopn-ext":79,"./_object-gops":81,"./_object-pie":85,"./_property-desc":86,"./_redefine":88,"./_set-to-string-tag":91,"./_shared":93,"./_to-iobject":99,"./_to-primitive":102,"./_uid":103,"./_wks":104}],115:[function(require,module,exports){
require('./es6.array.iterator');
var global        = require('./_global')
  , hide          = require('./_hide')
  , Iterators     = require('./_iterators')
  , TO_STRING_TAG = require('./_wks')('toStringTag');

for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
  var NAME       = collections[i]
    , Collection = global[NAME]
    , proto      = Collection && Collection.prototype;
  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}
},{"./_global":54,"./_hide":56,"./_iterators":69,"./_wks":104,"./es6.array.iterator":106}],116:[function(require,module,exports){
(function (global){
// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g =
  typeof global === "object" ? global :
  typeof window === "object" ? window :
  typeof self === "object" ? self : this;

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = require("./runtime");

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}

module.exports = { "default": module.exports, __esModule: true };

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./runtime":117}],117:[function(require,module,exports){
(function (process,global){
"use strict";

var _promise = require("babel-runtime/core-js/promise");

var _promise2 = _interopRequireDefault(_promise);

var _setPrototypeOf = require("babel-runtime/core-js/object/set-prototype-of");

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = require("babel-runtime/core-js/object/create");

var _create2 = _interopRequireDefault(_create);

var _typeof2 = require("babel-runtime/helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

var _iterator = require("babel-runtime/core-js/symbol/iterator");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require("babel-runtime/core-js/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
 * additional grant of patent rights can be found in the PATENTS file in
 * the same directory.
 */

!function (global) {
  "use strict";

  var hasOwn = Object.prototype.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var iteratorSymbol = typeof _symbol2.default === "function" && _iterator2.default || "@@iterator";

  var inModule = (typeof module === "undefined" ? "undefined" : (0, _typeof3.default)(module)) === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided, then outerFn.prototype instanceof Generator.
    var generator = (0, _create2.default)((outerFn || Generator).prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      prototype[method] = function (arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction ||
    // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  runtime.mark = function (genFun) {
    if (_setPrototypeOf2.default) {
      (0, _setPrototypeOf2.default)(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
    }
    genFun.prototype = (0, _create2.default)(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `value instanceof AwaitArgument` to determine if the yielded value is
  // meant to be awaited. Some may consider the name of this method too
  // cutesy, but they are curmudgeons.
  runtime.awrap = function (arg) {
    return new AwaitArgument(arg);
  };

  function AwaitArgument(arg) {
    this.arg = arg;
  }

  function AsyncIterator(generator) {
    // This invoke function is written in a style that assumes some
    // calling function (or Promise) will handle exceptions.
    function invoke(method, arg) {
      var result = generator[method](arg);
      var value = result.value;
      return value instanceof AwaitArgument ? _promise2.default.resolve(value.arg).then(invokeNext, invokeThrow) : _promise2.default.resolve(value).then(function (unwrapped) {
        // When a yielded Promise is resolved, its final value becomes
        // the .value of the Promise<{value,done}> result for the
        // current iteration. If the Promise is rejected, however, the
        // result for this iteration will be rejected with the same
        // reason. Note that rejections of yielded Promises are not
        // thrown back into the generator function, as is the case
        // when an awaited Promise is rejected. This difference in
        // behavior between yield and await is important, because it
        // allows the consumer to decide what to do with the yielded
        // rejection (swallow it and continue, manually .throw it back
        // into the generator, abandon iteration, whatever). With
        // await, by contrast, there is no opportunity to examine the
        // rejection reason outside the generator function, so the
        // only option is to throw it from the await expression, and
        // let the generator function handle the exception.
        result.value = unwrapped;
        return result;
      });
    }

    if ((typeof process === "undefined" ? "undefined" : (0, _typeof3.default)(process)) === "object" && process.domain) {
      invoke = process.domain.bind(invoke);
    }

    var invokeNext = invoke.bind(generator, "next");
    var invokeThrow = invoke.bind(generator, "throw");
    var invokeReturn = invoke.bind(generator, "return");
    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return invoke(method, arg);
      }

      return previousPromise =
      // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,
      // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : new _promise2.default(function (resolve) {
        resolve(callInvokeWithMethodAndArg());
      });
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function (innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          if (method === "return" || method === "throw" && delegate.iterator[method] === undefined) {
            // A return or throw (when the delegate iterator has no throw
            // method) always terminates the yield* loop.
            context.delegate = null;

            // If the delegate iterator has a return method, give it a
            // chance to clean up.
            var returnMethod = delegate.iterator["return"];
            if (returnMethod) {
              var record = tryCatch(returnMethod, delegate.iterator, arg);
              if (record.type === "throw") {
                // If the return method threw an exception, let that
                // exception prevail over the original return or throw.
                method = "throw";
                arg = record.arg;
                continue;
              }
            }

            if (method === "return") {
              // Continue with the outer return, now that the delegate
              // iterator has been terminated.
              continue;
            }
          }

          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);

          if (record.type === "throw") {
            context.delegate = null;

            // Like returning generator.throw(uncaught), but without the
            // overhead of an extra function call.
            method = "throw";
            arg = record.arg;
            continue;
          }

          // Delegate generator ran and handled its own exceptions so
          // regardless of what the method was, we continue as if it is
          // "next" with an undefined arg.
          method = "next";
          arg = undefined;

          var info = record.arg;
          if (info.done) {
            context[delegate.resultName] = info.value;
            context.next = delegate.nextLoc;
          } else {
            state = GenStateSuspendedYield;
            return info;
          }

          context.delegate = null;
        }

        if (method === "next") {
          context._sent = arg;

          if (state === GenStateSuspendedYield) {
            context.sent = arg;
          } else {
            context.sent = undefined;
          }
        } else if (method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw arg;
          }

          if (context.dispatchException(arg)) {
            // If the dispatched exception was caught by a catch block,
            // then let that catch block handle the exception normally.
            method = "next";
            arg = undefined;
          }
        } else if (method === "return") {
          context.abrupt("return", arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          var info = {
            value: record.arg,
            done: context.done
          };

          if (record.arg === ContinueSentinel) {
            if (context.delegate && method === "next") {
              // Deliberately forget the last sent value so that we don't
              // accidentally pass it on to the delegate.
              arg = undefined;
            }
          } else {
            return info;
          }
        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(arg) call above.
          method = "throw";
          arg = record.arg;
        }
      }
    };
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function (object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      this.sent = undefined;
      this.done = false;
      this.delegate = null;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function stop() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;
        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.next = finallyEntry.finallyLoc;
      } else {
        this.complete(record);
      }

      return ContinueSentinel;
    },

    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = record.arg;
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }
    },

    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      return ContinueSentinel;
    }
  };
}(
// Among the various tricks for obtaining a reference to the global
// object, this seems to be the most reliable technique that does not
// use indirect eval (which violates Content Security Policy).
(typeof global === "undefined" ? "undefined" : (0, _typeof3.default)(global)) === "object" ? global : (typeof window === "undefined" ? "undefined" : (0, _typeof3.default)(window)) === "object" ? window : (typeof self === "undefined" ? "undefined" : (0, _typeof3.default)(self)) === "object" ? self : undefined);
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":9,"babel-runtime/core-js/object/create":21,"babel-runtime/core-js/object/set-prototype-of":23,"babel-runtime/core-js/promise":24,"babel-runtime/core-js/symbol":25,"babel-runtime/core-js/symbol/iterator":26,"babel-runtime/helpers/typeof":29}],118:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;

function isSignedDecimal(input) {
  return (/^[\-\+]?(\d+(\.\d*)?|\.\d+)$/.test(input)
  );
}

function parseDecimal(string) {
  var parts = string.split('.');
  var num = 0;
  if (parts[0] !== '' && parts[0] !== '-' && parts[0] !== '+') {
    num = parseInt(parts[0], 10);
  }
  if (parts.length > 1 && parts[1].length > 0) {
    var frac = parseInt(parts[1], 10) / Math.pow(10, parts[1].length);
    num += _lodash2.default.startsWith(parts[0], '-') ? -frac : frac;
  }

  return num;
}

function getValue(option) {
  return _lodash2.default.assign({}, option, { result: parseDecimal(option.result) });
}

function _suppressWhen(input, props) {
  if (input === '-' || input === '+' || input === '.' || input === '-.' || input === '+.') return true;
  if (!isSignedDecimal(input)) return false;

  var numValue = parseDecimal(input);

  if (props.min >= 0) {
    if (_lodash2.default.startsWith(input, '-')) return false;
    if (numValue < 0) return false;
    if (numValue > props.max) return false;
    if (numValue < props.min) return true;
  } else if (props.max <= 0) {
    if (!_lodash2.default.startsWith(input, '-')) return false;
    if (numValue > 0) return false;
    if (numValue < props.min) return false;
    if (numValue > props.max) return true;
  }

  return false;
}

var defaultProps = {
  max: MAX_SAFE_INTEGER,
  min: -MAX_SAFE_INTEGER,
  argument: 'decimal',
  limit: 1
};

function filterResult(result, _ref) {
  var props = _ref.props;

  return result <= props.max && result >= props.min;
}

function describe(_ref2) {
  var props = _ref2.props;

  return (0, _elliptical.createElement)(
    'label',
    { text: props.argument,
      suppressWhen: function suppressWhen(input) {
        return _suppressWhen(input, props);
      } },
    (0, _elliptical.createElement)(
      'map',
      { outbound: getValue },
      (0, _elliptical.createElement)('freetext', { filter: isSignedDecimal, limit: props.limit,
        splitOn: /[^\d\.]/, score: 1 })
    )
  );
}

exports.default = { defaultProps: defaultProps, describe: describe, filterResult: filterResult };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231}],119:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _elliptical = require('elliptical');

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */


function isNumeric(input) {
  return (/^\d+$/.test(input)
  );
}

function _suppressWhen(input, props) {
  if (!isNumeric(input)) return false;

  if (!props.allowLeadingZeros && input !== '0' && _lodash2.default.startsWith(input, '0')) return false;

  if (input.length < props.minLength) return true;

  var intValue = parseInt(input, 10);
  if (intValue < props.min) return true;
  return false;
}

var defaultProps = {
  minLength: 1,
  maxLength: 9007199254740991,
  min: 0,
  max: 9007199254740991,
  allowLeadingZeros: true,
  argument: 'digit string'
};

function filterResult(result, _ref) {
  var props = _ref.props;

  if (result.length > props.maxLength) return false;
  if (result.length < props.minLength) return false;

  if (!props.allowLeadingZeros && result !== '0' && _lodash2.default.startsWith(result, '0')) return false;

  var intValue = parseInt(result, 10);
  if (isNaN(intValue)) return false;
  if (intValue > props.max) return false;
  if (intValue < props.min) return false;

  return true;
}

function describe(_ref2) {
  var props = _ref2.props;

  return (0, _elliptical.createElement)(
    'label',
    {
      text: props.argument,
      suppressWhen: function suppressWhen(input) {
        return _suppressWhen(input, props);
      },
      suppressEmpty: true },
    (0, _elliptical.createElement)('freetext', { filter: isNumeric, splitOn: /\D/, score: 1 })
  );
}

exports.default = { defaultProps: defaultProps, filterResult: filterResult, describe: describe };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231}],120:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _integer = require('./integer');

Object.defineProperty(exports, 'Integer', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_integer).default;
  }
});

var _digitstring = require('./digitstring');

Object.defineProperty(exports, 'DigitString', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_digitstring).default;
  }
});

var _ordinal = require('./ordinal');

Object.defineProperty(exports, 'Ordinal', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_ordinal).default;
  }
});

var _decimal = require('./decimal');

Object.defineProperty(exports, 'Decimal', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_decimal).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./decimal":118,"./digitstring":119,"./integer":121,"./ordinal":122}],121:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;

function isSignedNumeric(input) {
  return (/^[\-\+]?\d+$/.test(input)
  );
}

function getValue(option) {
  return _lodash2.default.assign({}, option, { result: parseInt(option.result, 10) });
}

function _suppressWhen(input, props) {
  if (input === '-' || input === '+') return true;
  if (!isSignedNumeric(input)) return false;

  var intValue = parseInt(input, 10);

  if (props.min >= 0) {
    if (_lodash2.default.startsWith(input, '-')) return false;
    if (intValue < 0) return false;
    if (intValue > props.max) return false;
    if (intValue < props.min) return true;
  } else if (props.max <= 0) {
    if (!_lodash2.default.startsWith(input, '-')) return false;
    if (intValue > 0) return false;
    if (intValue < props.min) return false;
    if (intValue > props.max) return true;
  }

  return false;
}

var defaultProps = {
  max: MAX_SAFE_INTEGER,
  min: -MAX_SAFE_INTEGER,
  argument: 'integer',
  limit: 1
};

function filterResult(result, _ref) {
  var props = _ref.props;

  return result <= props.max && result >= props.min;
}

function describe(_ref2) {
  var props = _ref2.props;

  return (0, _elliptical.createElement)(
    'label',
    { text: props.argument,
      suppressWhen: function suppressWhen(input) {
        return _suppressWhen(input, props);
      }, suppressEmpty: true },
    (0, _elliptical.createElement)(
      'map',
      { outbound: getValue, skipIncomplete: true },
      (0, _elliptical.createElement)('freetext', { filter: isSignedNumeric, limit: props.limit, splitOn: /\D/, score: 1 })
    )
  );
}

exports.default = { defaultProps: defaultProps, filterResult: filterResult, describe: describe };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231}],122:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;

function pureNumber(input) {
  return (/^[1-9]\d*$/.test(input)
  );
}

function incompleteOrdinal(input) {
  if (_lodash2.default.startsWith(input, '0')) return false;
  return (/^(?:\d+t|\d*1s|\d*2n|\d*3r)$/.test(input)
  );
}

function completeOrdinal(input) {
  if (_lodash2.default.startsWith(input, '0')) return false;
  return (/^(?:\d+th|\d+t|\d*1st|\d*2nd|\d*3rd)$/.test(input)
  );
}

function getValue(option) {
  return _lodash2.default.assign({}, option, { result: parseInt(option.result, 10) });
}

function _suppressWhen(input, props) {
  var intValue = parseInt(input, 10);

  if (pureNumber(input)) {
    if (intValue < props.max) return true;
  } else if (incompleteOrdinal(input)) {
    if (intValue <= props.max && intValue >= props.min) return true;
  }

  return false;
}

var defaultProps = {
  min: 1,
  max: MAX_SAFE_INTEGER,
  argument: 'ordinal'
};

function filterResult(result, _ref) {
  var props = _ref.props;

  return result <= props.max && result >= props.min;
}

function describe(_ref2) {
  var props = _ref2.props;

  return (0, _elliptical.createElement)(
    'label',
    {
      text: props.argument,
      suppressWhen: function suppressWhen(input) {
        return _suppressWhen(input, props);
      },
      suppressEmpty: true },
    (0, _elliptical.createElement)(
      'map',
      { outbound: getValue, skipIncomplete: true },
      (0, _elliptical.createElement)('freetext', {
        filter: completeOrdinal,
        limit: props.limit,
        splitOn: /[^0-9stndhr]/,
        score: 1 })
    )
  );
}

exports.default = { defaultProps: defaultProps, describe: describe, filterResult: filterResult };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231}],123:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmailAddress = undefined;

var _elliptical = require('elliptical');

function suppressWhen(input) {
  return (/^[\d\w_+.-]+(|@[\d\w_-]{0,63}|@[\d\w_-]{1,63}\.\w?)$/.test(input)
  );
} /** @jsx createElement */

function filter(input) {
  return (/^[\d\w_+.-]+@[\d\w_.-]{1,63}\.\w{2,63}$/.test(input)
  );
}

var defaultProps = {
  argument: 'email address'
};

function describe(_ref) {
  var props = _ref.props;

  return (0, _elliptical.createElement)(
    'label',
    { text: props.argument, suppressWhen: suppressWhen },
    (0, _elliptical.createElement)('freetext', { filter: filter })
  );
}

var EmailAddress = exports.EmailAddress = { defaultProps: defaultProps, describe: describe };
},{"elliptical":231}],124:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _processor = require('./processor');

Object.defineProperty(exports, 'createProcessor', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_processor).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./processor":125}],125:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; }; /** @jsx createElement */


exports.default = createProcessor;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createProcessor(extensions) {
  return function process(element) {
    // you can't extend builtins
    if (_lodash2.default.isString(element)) return element;

    var theseExtensions = _lodash2.default.chain(extensions).filter(function (extension) {
      return _lodash2.default.includes(extension.extends, element.type);
    }).map(function (extension) {
      var newProps = _lodash2.default.assign({}, element.props, { id: undefined });
      return _lodash2.default.assign({}, element, { type: extension }, { props: newProps });
    }).map(function (extension) {
      var final = extension;

      if (element.type.mapResult) {
        var map = function map(option) {
          var result = element.type.mapResult(option.result, extension);
          return _lodash2.default.assign({}, option, { result: result });
        };

        final = (0, _elliptical.createElement)(
          'map',
          { outbound: map, skipIncomplete: true },
          final
        );
      }
      if (element.type.filterResult) {
        var filter = function filter(option) {
          return element.type.filterResult(option.result, extension);
        };

        final = (0, _elliptical.createElement)(
          'filter',
          { outbound: filter, skipIncomplete: true },
          final
        );
      }

      return final;
    }).value();

    if (theseExtensions.length) {
      var _ret = function () {
        var describe = function describe(model) {
          return (0, _elliptical.createElement)(
            'choice',
            null,
            newElement,
            theseExtensions
          );
        };

        var newPhrase = _lodash2.default.clone(element.type); // to prevent duplicate extension
        var newProps = _lodash2.default.assign({}, element.props, { id: undefined });
        var newElement = _lodash2.default.assign({}, element, { type: newPhrase }, { props: newProps });

        return {
          v: _lodash2.default.assign({}, element, { type: { describe: describe } })
        };
      }();

      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
    } else {
      return element;
    }
  };
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231}],126:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _stringUtils = require('./string-utils');

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [optionsForString, optionsForSubstrings, visit].map(_regenerator2.default.mark);

function optionsForString(string, option, props, register, traverse) {
  var observation, currentValue, description;
  return _regenerator2.default.wrap(function optionsForString$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          observation = props.observe ? props.observe(string, { props: {}, children: [] }) : undefined;
          currentValue = observation ? register(observation) : undefined;
          description = props.describe ? props.describe({ props: {}, children: [], data: currentValue }) : undefined;

          if (!description) {
            _context.next = 5;
            break;
          }

          return _context.delegateYield(traverse(description, option), 't0', 5);

        case 5:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}

function optionsForSubstrings(option, props, register, traverse) {
  var iterations, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, substring, success;

  return _regenerator2.default.wrap(function optionsForSubstrings$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          iterations = option.text == null ? [undefined] : (0, _stringUtils.substrings)(option.text, props);
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context2.prev = 4;
          _iterator = iterations[Symbol.iterator]();

        case 6:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context2.next = 13;
            break;
          }

          substring = _step.value;
          success = false;
          return _context2.delegateYield(optionsForString(substring, option, props, register, traverse), 't0', 10);

        case 10:
          _iteratorNormalCompletion = true;
          _context2.next = 6;
          break;

        case 13:
          _context2.next = 19;
          break;

        case 15:
          _context2.prev = 15;
          _context2.t1 = _context2['catch'](4);
          _didIteratorError = true;
          _iteratorError = _context2.t1;

        case 19:
          _context2.prev = 19;
          _context2.prev = 20;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 22:
          _context2.prev = 22;

          if (!_didIteratorError) {
            _context2.next = 25;
            break;
          }

          throw _iteratorError;

        case 25:
          return _context2.finish(22);

        case 26:
          return _context2.finish(19);

        case 27:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[4, 15, 19, 27], [20,, 22, 26]]);
}

function visit(option, _ref, traverse) {
  var props = _ref.props;
  var register = _ref.register;
  var options;
  return _regenerator2.default.wrap(function visit$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          options = optionsForSubstrings(option, props, register, traverse);
          return _context3.delegateYield((0, _utils.limitIterator)(options, props.limit), 't0', 2);

        case 2:
        case 'end':
          return _context3.stop();
      }
    }
  }, _marked[2], this);
}

exports.default = { visit: visit };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./string-utils":131,"./utils":132,"babel-runtime/regenerator":220}],127:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _parser = require('./parser');

Object.defineProperty(exports, 'createParser', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_parser).default;
  }
});

var _store = require('./store');

Object.defineProperty(exports, 'createStore', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_store).default;
  }
});

var _processor = require('./processor');

Object.defineProperty(exports, 'createProcessor', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_processor).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./parser":128,"./processor":129,"./store":130}],128:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createParser;

var _elliptical = require('elliptical');

var _processor = require('./processor');

var _processor2 = _interopRequireDefault(_processor);

var _store = require('./store');

var _store2 = _interopRequireDefault(_store);

var _zenObservable = require('zen-observable');

var _zenObservable2 = _interopRequireDefault(_zenObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

function createParser(element, otherProcessor) {
  var store = (0, _store2.default)();

  var currentObserver = void 0;
  var currentInput = void 0;
  var processor = (0, _processor2.default)(store.register);

  var trueProcessor = processor;
  if (otherProcessor) {
    trueProcessor = (0, _elliptical.combineProcessors)(processor, otherProcessor);
  }
  var _parse = (0, _elliptical.compile)(element, trueProcessor);

  function traverse() {
    var outputs = _parse(currentInput);
    currentObserver.next(outputs);
  }

  store.data.subscribe({
    next: function next() {
      if (currentObserver) {
        traverse();
      }
    }
  });

  return {
    watch: function watch(input) {
      if (currentObserver) {
        currentObserver.complete();
      }

      return new _zenObservable2.default(function (observer) {
        currentObserver = observer;
        currentInput = input;
        traverse();
      });
    },
    parse: function parse(input) {
      return _parse(input);
    },

    store: store
  };
}
},{"./processor":129,"./store":130,"elliptical":231,"zen-observable":580}],129:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

exports.default = createProcessor;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _store = require('./store');

var _store2 = _interopRequireDefault(_store);

var _dynamic = require('./dynamic');

var _dynamic2 = _interopRequireDefault(_dynamic);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

function createProcessor(register, processor) {
  return function process(element) {
    if (element.type.observe) {
      var _ret = function () {
        var visit = function visit(option, e, traverse) {
          var data = register(source);
          if (oldData !== data) {
            oldData = data;
            if (element.type.describe) {
              desc = element.type.describe(_lodash2.default.assign({}, element, { data: data }));
            }
          }
          if (element.type.describe) {
            return traverse(desc, option);
          } else {
            return e.type._oldVisit(option, _lodash2.default.assign({}, e, { data: data }), traverse);
          }
        };

        var source = element.type.observe(element);

        if (processor) {
          source = processor(source);
        }
        var oldData = register(source);
        var desc = void 0;
        if (element.type.describe) {
          desc = element.type.describe(_lodash2.default.assign({}, element, { data: oldData }));
        }

        var type = _lodash2.default.assign({}, element.type, {
          visit: visit,
          _oldVisit: element.type.visit,
          describe: undefined
        });
        return {
          v: _lodash2.default.assign({}, element, { type: type })
        };
      }();

      if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
    } else if (element.type === "dynamic") {
      return _lodash2.default.assign({}, element, { type: _dynamic2.default, register: register });
    }
    return element;
  };
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./dynamic":126,"./store":130,"babel-runtime/helpers/typeof":138,"elliptical":231}],130:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

exports.default = createStore;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _zenObservable = require('zen-observable');

var _zenObservable2 = _interopRequireDefault(_zenObservable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createStore() {
  var items = [];
  var observer = void 0;
  var data = new _zenObservable2.default(function (newObserver) {
    observer = newObserver;
  });

  function register(element) {
    var existing = _lodash2.default.find(items, function (item) {
      return _lodash2.default.isEqual(element, item.element);
    });

    if (existing) {
      return existing.value;
    } else {
      var _ret = function () {
        var newItem = { element: element };
        items.push(newItem);

        var fetched = element.type.fetch(element);

        var subscription = fetched.subscribe({
          next: function next(value) {
            newItem.value = value;

            if (observer) {
              observer.next({ element: element, value: value });
            }
          }
        });
        newItem.subscription = subscription;

        return {
          v: newItem.value
        };
      }();

      if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === "object") return _ret.v;
    }
  }

  function remove(item) {
    var index = items.indexOf(item);
    var removed = items.splice(index, 1);
    removed[0].subscription.unsubscribe();
  }

  return { data: data, register: register, items: items, remove: remove };
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"babel-runtime/helpers/typeof":138,"zen-observable":580}],131:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.substrings = substrings;

var _smartSplit = require('smart-split');

var _smartSplit2 = _interopRequireDefault(_smartSplit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [substrings].map(_regenerator2.default.mark);

function substrings(input, _ref) {
  var _ref$splitOn = _ref.splitOn;
  var splitOn = _ref$splitOn === undefined ? '' : _ref$splitOn;
  var _ref$consumeAll = _ref.consumeAll;
  var consumeAll = _ref$consumeAll === undefined ? false : _ref$consumeAll;
  var _ref$greedy = _ref.greedy;
  var greedy = _ref$greedy === undefined ? false : _ref$greedy;
  var inputs, i;
  return _regenerator2.default.wrap(function substrings$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!consumeAll) {
            _context.next = 4;
            break;
          }

          _context.next = 3;
          return input;

        case 3:
          return _context.abrupt('return');

        case 4:
          inputs = (0, _smartSplit2.default)(input, splitOn);
          i = 0;

        case 6:
          if (!(i < inputs.length)) {
            _context.next = 17;
            break;
          }

          if (!greedy) {
            _context.next = 12;
            break;
          }

          _context.next = 10;
          return inputs.slice(0, inputs.length - i).join('');

        case 10:
          _context.next = 14;
          break;

        case 12:
          _context.next = 14;
          return inputs.slice(0, i + 1).join('');

        case 14:
          i += 2;
          _context.next = 6;
          break;

        case 17:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}
},{"babel-runtime/regenerator":220,"smart-split":579}],132:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.isComplete = isComplete;
exports.limitIterator = limitIterator;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [limitIterator].map(_regenerator2.default.mark);

function isComplete(option) {
  return !_lodash2.default.some(option.words, 'placeholder');
}

// Accepts either an iterator of Options, or an iterator of iterators of Options
function limitIterator(iterator, limit) {
  var successes, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, success, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, option, mods, _mods, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _item;

  return _regenerator2.default.wrap(function limitIterator$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!limit) {
            _context.next = 65;
            break;
          }

          successes = 0;
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 5;
          _iterator = iterator[Symbol.iterator]();

        case 7:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 49;
            break;
          }

          item = _step.value;
          success = false;

          if (!item[Symbol.iterator]) {
            _context.next = 40;
            break;
          }

          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context.prev = 14;
          _iterator2 = item[Symbol.iterator]();

        case 16:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context.next = 24;
            break;
          }

          option = _step2.value;
          mods = {
            callbacks: option.callbacks.concat(function () {
              success = true;
            })
          };
          _context.next = 21;
          return _lodash2.default.assign({}, option, mods);

        case 21:
          _iteratorNormalCompletion2 = true;
          _context.next = 16;
          break;

        case 24:
          _context.next = 30;
          break;

        case 26:
          _context.prev = 26;
          _context.t0 = _context['catch'](14);
          _didIteratorError2 = true;
          _iteratorError2 = _context.t0;

        case 30:
          _context.prev = 30;
          _context.prev = 31;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 33:
          _context.prev = 33;

          if (!_didIteratorError2) {
            _context.next = 36;
            break;
          }

          throw _iteratorError2;

        case 36:
          return _context.finish(33);

        case 37:
          return _context.finish(30);

        case 38:
          _context.next = 43;
          break;

        case 40:
          _mods = {
            callbacks: item.callbacks.concat(function () {
              success = true;
            })
          };
          _context.next = 43;
          return _lodash2.default.assign({}, item, _mods);

        case 43:

          if (success) successes++;

          if (!(limit <= successes)) {
            _context.next = 46;
            break;
          }

          return _context.abrupt('break', 49);

        case 46:
          _iteratorNormalCompletion = true;
          _context.next = 7;
          break;

        case 49:
          _context.next = 55;
          break;

        case 51:
          _context.prev = 51;
          _context.t1 = _context['catch'](5);
          _didIteratorError = true;
          _iteratorError = _context.t1;

        case 55:
          _context.prev = 55;
          _context.prev = 56;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 58:
          _context.prev = 58;

          if (!_didIteratorError) {
            _context.next = 61;
            break;
          }

          throw _iteratorError;

        case 61:
          return _context.finish(58);

        case 62:
          return _context.finish(55);

        case 63:
          _context.next = 95;
          break;

        case 65:
          _iteratorNormalCompletion3 = true;
          _didIteratorError3 = false;
          _iteratorError3 = undefined;
          _context.prev = 68;
          _iterator3 = iterator[Symbol.iterator]();

        case 70:
          if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
            _context.next = 81;
            break;
          }

          _item = _step3.value;

          if (!_item[Symbol.iterator]) {
            _context.next = 76;
            break;
          }

          return _context.delegateYield(_item, 't2', 74);

        case 74:
          _context.next = 78;
          break;

        case 76:
          _context.next = 78;
          return _item;

        case 78:
          _iteratorNormalCompletion3 = true;
          _context.next = 70;
          break;

        case 81:
          _context.next = 87;
          break;

        case 83:
          _context.prev = 83;
          _context.t3 = _context['catch'](68);
          _didIteratorError3 = true;
          _iteratorError3 = _context.t3;

        case 87:
          _context.prev = 87;
          _context.prev = 88;

          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }

        case 90:
          _context.prev = 90;

          if (!_didIteratorError3) {
            _context.next = 93;
            break;
          }

          throw _iteratorError3;

        case 93:
          return _context.finish(90);

        case 94:
          return _context.finish(87);

        case 95:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[5, 51, 55, 63], [14, 26, 30, 38], [31,, 33, 37], [56,, 58, 62], [68, 83, 87, 95], [88,, 90, 94]]);
}

// export function addWords (option, words) {
//   if (s
//   const mods = {
//     phrases: {
//       [option.phrases.length - 1]:
//   _.last(option.phrases)
// }
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"babel-runtime/regenerator":220}],133:[function(require,module,exports){
arguments[4][21][0].apply(exports,arguments)
},{"core-js/library/fn/object/create":139,"dup":21}],134:[function(require,module,exports){
arguments[4][23][0].apply(exports,arguments)
},{"core-js/library/fn/object/set-prototype-of":140,"dup":23}],135:[function(require,module,exports){
arguments[4][24][0].apply(exports,arguments)
},{"core-js/library/fn/promise":141,"dup":24}],136:[function(require,module,exports){
arguments[4][25][0].apply(exports,arguments)
},{"core-js/library/fn/symbol":142,"dup":25}],137:[function(require,module,exports){
arguments[4][26][0].apply(exports,arguments)
},{"core-js/library/fn/symbol/iterator":143,"dup":26}],138:[function(require,module,exports){
arguments[4][29][0].apply(exports,arguments)
},{"babel-runtime/core-js/symbol":136,"babel-runtime/core-js/symbol/iterator":137,"dup":29}],139:[function(require,module,exports){
arguments[4][31][0].apply(exports,arguments)
},{"../../modules/_core":151,"../../modules/es6.object.create":213,"dup":31}],140:[function(require,module,exports){
arguments[4][33][0].apply(exports,arguments)
},{"../../modules/_core":151,"../../modules/es6.object.set-prototype-of":214,"dup":33}],141:[function(require,module,exports){
arguments[4][34][0].apply(exports,arguments)
},{"../modules/_core":151,"../modules/es6.object.to-string":215,"../modules/es6.promise":216,"../modules/es6.string.iterator":217,"../modules/web.dom.iterable":219,"dup":34}],142:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"../../modules/_core":151,"../../modules/es6.object.to-string":215,"../../modules/es6.symbol":218,"dup":35}],143:[function(require,module,exports){
arguments[4][36][0].apply(exports,arguments)
},{"../../modules/_wks":210,"../../modules/es6.string.iterator":217,"../../modules/web.dom.iterable":219,"dup":36}],144:[function(require,module,exports){
arguments[4][37][0].apply(exports,arguments)
},{"dup":37}],145:[function(require,module,exports){
arguments[4][38][0].apply(exports,arguments)
},{"dup":38}],146:[function(require,module,exports){
arguments[4][39][0].apply(exports,arguments)
},{"dup":39}],147:[function(require,module,exports){
arguments[4][40][0].apply(exports,arguments)
},{"./_is-object":170,"dup":40}],148:[function(require,module,exports){
arguments[4][41][0].apply(exports,arguments)
},{"./_to-index":203,"./_to-iobject":205,"./_to-length":206,"dup":41}],149:[function(require,module,exports){
arguments[4][42][0].apply(exports,arguments)
},{"./_cof":150,"./_wks":210,"dup":42}],150:[function(require,module,exports){
arguments[4][43][0].apply(exports,arguments)
},{"dup":43}],151:[function(require,module,exports){
arguments[4][44][0].apply(exports,arguments)
},{"dup":44}],152:[function(require,module,exports){
arguments[4][45][0].apply(exports,arguments)
},{"./_a-function":144,"dup":45}],153:[function(require,module,exports){
arguments[4][46][0].apply(exports,arguments)
},{"dup":46}],154:[function(require,module,exports){
arguments[4][47][0].apply(exports,arguments)
},{"./_fails":159,"dup":47}],155:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"./_global":161,"./_is-object":170,"dup":48}],156:[function(require,module,exports){
arguments[4][49][0].apply(exports,arguments)
},{"dup":49}],157:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"./_object-gops":187,"./_object-keys":190,"./_object-pie":191,"dup":50}],158:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"./_core":151,"./_ctx":152,"./_global":161,"./_hide":163,"dup":51}],159:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"dup":52}],160:[function(require,module,exports){
arguments[4][53][0].apply(exports,arguments)
},{"./_an-object":147,"./_ctx":152,"./_is-array-iter":168,"./_iter-call":171,"./_to-length":206,"./core.get-iterator-method":211,"dup":53}],161:[function(require,module,exports){
arguments[4][54][0].apply(exports,arguments)
},{"dup":54}],162:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"dup":55}],163:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"./_descriptors":154,"./_object-dp":182,"./_property-desc":192,"dup":56}],164:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"./_global":161,"dup":57}],165:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"./_descriptors":154,"./_dom-create":155,"./_fails":159,"dup":58}],166:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"dup":59}],167:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"./_cof":150,"dup":60}],168:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"./_iterators":176,"./_wks":210,"dup":61}],169:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"./_cof":150,"dup":62}],170:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],171:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"./_an-object":147,"dup":64}],172:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./_hide":163,"./_object-create":181,"./_property-desc":192,"./_set-to-string-tag":197,"./_wks":210,"dup":65}],173:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"./_export":158,"./_has":162,"./_hide":163,"./_iter-create":172,"./_iterators":176,"./_library":178,"./_object-gpo":188,"./_redefine":194,"./_set-to-string-tag":197,"./_wks":210,"dup":66}],174:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./_wks":210,"dup":67}],175:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"dup":68}],176:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"dup":69}],177:[function(require,module,exports){
arguments[4][70][0].apply(exports,arguments)
},{"./_object-keys":190,"./_to-iobject":205,"dup":70}],178:[function(require,module,exports){
arguments[4][71][0].apply(exports,arguments)
},{"dup":71}],179:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"./_fails":159,"./_has":162,"./_is-object":170,"./_object-dp":182,"./_uid":209,"dup":72}],180:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./_cof":150,"./_global":161,"./_task":202,"dup":73}],181:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./_an-object":147,"./_dom-create":155,"./_enum-bug-keys":156,"./_html":164,"./_object-dps":183,"./_shared-key":198,"dup":75}],182:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"./_an-object":147,"./_descriptors":154,"./_ie8-dom-define":165,"./_to-primitive":208,"dup":76}],183:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"./_an-object":147,"./_descriptors":154,"./_object-dp":182,"./_object-keys":190,"dup":77}],184:[function(require,module,exports){
arguments[4][78][0].apply(exports,arguments)
},{"./_descriptors":154,"./_has":162,"./_ie8-dom-define":165,"./_object-pie":191,"./_property-desc":192,"./_to-iobject":205,"./_to-primitive":208,"dup":78}],185:[function(require,module,exports){
arguments[4][79][0].apply(exports,arguments)
},{"./_object-gopn":186,"./_to-iobject":205,"dup":79}],186:[function(require,module,exports){
arguments[4][80][0].apply(exports,arguments)
},{"./_enum-bug-keys":156,"./_object-keys-internal":189,"dup":80}],187:[function(require,module,exports){
arguments[4][81][0].apply(exports,arguments)
},{"dup":81}],188:[function(require,module,exports){
arguments[4][82][0].apply(exports,arguments)
},{"./_has":162,"./_shared-key":198,"./_to-object":207,"dup":82}],189:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./_array-includes":148,"./_has":162,"./_shared-key":198,"./_to-iobject":205,"dup":83}],190:[function(require,module,exports){
arguments[4][84][0].apply(exports,arguments)
},{"./_enum-bug-keys":156,"./_object-keys-internal":189,"dup":84}],191:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"dup":85}],192:[function(require,module,exports){
arguments[4][86][0].apply(exports,arguments)
},{"dup":86}],193:[function(require,module,exports){
arguments[4][87][0].apply(exports,arguments)
},{"./_hide":163,"dup":87}],194:[function(require,module,exports){
arguments[4][88][0].apply(exports,arguments)
},{"./_hide":163,"dup":88}],195:[function(require,module,exports){
arguments[4][89][0].apply(exports,arguments)
},{"./_an-object":147,"./_ctx":152,"./_is-object":170,"./_object-gopd":184,"dup":89}],196:[function(require,module,exports){
arguments[4][90][0].apply(exports,arguments)
},{"./_core":151,"./_descriptors":154,"./_global":161,"./_object-dp":182,"./_wks":210,"dup":90}],197:[function(require,module,exports){
arguments[4][91][0].apply(exports,arguments)
},{"./_has":162,"./_object-dp":182,"./_wks":210,"dup":91}],198:[function(require,module,exports){
arguments[4][92][0].apply(exports,arguments)
},{"./_shared":199,"./_uid":209,"dup":92}],199:[function(require,module,exports){
arguments[4][93][0].apply(exports,arguments)
},{"./_global":161,"dup":93}],200:[function(require,module,exports){
arguments[4][94][0].apply(exports,arguments)
},{"./_a-function":144,"./_an-object":147,"./_wks":210,"dup":94}],201:[function(require,module,exports){
arguments[4][95][0].apply(exports,arguments)
},{"./_defined":153,"./_to-integer":204,"dup":95}],202:[function(require,module,exports){
arguments[4][96][0].apply(exports,arguments)
},{"./_cof":150,"./_ctx":152,"./_dom-create":155,"./_global":161,"./_html":164,"./_invoke":166,"dup":96}],203:[function(require,module,exports){
arguments[4][97][0].apply(exports,arguments)
},{"./_to-integer":204,"dup":97}],204:[function(require,module,exports){
arguments[4][98][0].apply(exports,arguments)
},{"dup":98}],205:[function(require,module,exports){
arguments[4][99][0].apply(exports,arguments)
},{"./_defined":153,"./_iobject":167,"dup":99}],206:[function(require,module,exports){
arguments[4][100][0].apply(exports,arguments)
},{"./_to-integer":204,"dup":100}],207:[function(require,module,exports){
arguments[4][101][0].apply(exports,arguments)
},{"./_defined":153,"dup":101}],208:[function(require,module,exports){
arguments[4][102][0].apply(exports,arguments)
},{"./_is-object":170,"dup":102}],209:[function(require,module,exports){
arguments[4][103][0].apply(exports,arguments)
},{"dup":103}],210:[function(require,module,exports){
arguments[4][104][0].apply(exports,arguments)
},{"./_global":161,"./_shared":199,"./_uid":209,"dup":104}],211:[function(require,module,exports){
arguments[4][105][0].apply(exports,arguments)
},{"./_classof":149,"./_core":151,"./_iterators":176,"./_wks":210,"dup":105}],212:[function(require,module,exports){
arguments[4][106][0].apply(exports,arguments)
},{"./_add-to-unscopables":145,"./_iter-define":173,"./_iter-step":175,"./_iterators":176,"./_to-iobject":205,"dup":106}],213:[function(require,module,exports){
arguments[4][108][0].apply(exports,arguments)
},{"./_export":158,"./_object-create":181,"dup":108}],214:[function(require,module,exports){
arguments[4][110][0].apply(exports,arguments)
},{"./_export":158,"./_set-proto":195,"dup":110}],215:[function(require,module,exports){
arguments[4][111][0].apply(exports,arguments)
},{"dup":111}],216:[function(require,module,exports){
arguments[4][112][0].apply(exports,arguments)
},{"./_a-function":144,"./_an-instance":146,"./_an-object":147,"./_classof":149,"./_core":151,"./_ctx":152,"./_export":158,"./_for-of":160,"./_global":161,"./_is-object":170,"./_iter-detect":174,"./_library":178,"./_microtask":180,"./_redefine-all":193,"./_set-proto":195,"./_set-species":196,"./_set-to-string-tag":197,"./_species-constructor":200,"./_task":202,"./_wks":210,"dup":112}],217:[function(require,module,exports){
arguments[4][113][0].apply(exports,arguments)
},{"./_iter-define":173,"./_string-at":201,"dup":113}],218:[function(require,module,exports){
arguments[4][114][0].apply(exports,arguments)
},{"./_an-object":147,"./_core":151,"./_descriptors":154,"./_enum-keys":157,"./_export":158,"./_fails":159,"./_global":161,"./_has":162,"./_hide":163,"./_is-array":169,"./_keyof":177,"./_library":178,"./_meta":179,"./_object-create":181,"./_object-dp":182,"./_object-gopd":184,"./_object-gopn":186,"./_object-gopn-ext":185,"./_object-gops":187,"./_object-pie":191,"./_property-desc":192,"./_redefine":194,"./_set-to-string-tag":197,"./_shared":199,"./_to-iobject":205,"./_to-primitive":208,"./_uid":209,"./_wks":210,"dup":114}],219:[function(require,module,exports){
arguments[4][115][0].apply(exports,arguments)
},{"./_global":161,"./_hide":163,"./_iterators":176,"./_wks":210,"./es6.array.iterator":212,"dup":115}],220:[function(require,module,exports){
arguments[4][116][0].apply(exports,arguments)
},{"./runtime":221,"dup":116}],221:[function(require,module,exports){
arguments[4][117][0].apply(exports,arguments)
},{"_process":9,"babel-runtime/core-js/object/create":133,"babel-runtime/core-js/object/set-prototype-of":134,"babel-runtime/core-js/promise":135,"babel-runtime/core-js/symbol":136,"babel-runtime/core-js/symbol/iterator":137,"babel-runtime/helpers/typeof":138,"dup":117}],222:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneNumber = undefined;

var _elliptical = require('elliptical');

var defaultProps = {
  argument: 'phone number'
}; /** @jsx createElement */


function suppressWhen(input) {
  return (/^\+?\(?(\d[ ()/-]{0,2}){0,6}$/.test(input)
  );
}

function filter(input) {
  return (/^\+?\(?(\d[ ()/-]{0,2}){7,15}$/.test(input)
  );
}

function describe(_ref) {
  var props = _ref.props;

  return (0, _elliptical.createElement)(
    'label',
    { text: props.argument, suppressWhen: suppressWhen },
    (0, _elliptical.createElement)('freetext', { filter: filter, splitOn: /[^0-9()+-]/ })
  );
}

var PhoneNumber = exports.PhoneNumber = { defaultProps: defaultProps, describe: describe };
},{"elliptical":231}],223:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.String = undefined;

var _elliptical = require('elliptical');

var defaultProps = {
  argument: 'string',
  limit: 1,
  trimmed: true
}; /** @jsx createElement */


function describe(_ref) {
  var props = _ref.props;

  return (0, _elliptical.createElement)(
    'label',
    { text: props.argument },
    (0, _elliptical.createElement)('freetext', {
      greedy: props.greedy,
      consumeAll: props.consumeAll,
      splitOn: props.splitOn,
      trimmed: props.trimmed,
      filter: function filter(input) {
        return _filter(input, props);
      },
      limit: props.limit })
  );
}

function _filter(input, props) {
  if (props.trimmed && (/^\s/.test(input) || /\s$/.test(input))) {
    return false;
  }

  if (props.filter) {
    return props.filter(input);
  }

  return true;
}

var String = exports.String = { defaultProps: defaultProps, describe: describe };
},{"elliptical":231}],224:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _elliptical = require('elliptical');

function mapResult(result) {
  return 'http://' + result.remaining;
} /** @jsx createElement */


function filter(input) {
  return (/^([\w-]+\.)+\w{2,63}\S*$/i.test(input)
  );
}

function describe(_ref) {
  var props = _ref.props;

  return (0, _elliptical.createElement)(
    'sequence',
    null,
    (0, _elliptical.createElement)('literal', { decorate: true, allowInput: false, text: 'http://' }),
    (0, _elliptical.createElement)('freetext', { filter: filter, splitOn: props.splitOn, limit: props.limit, id: 'remaining' })
  );
}

exports.default = { mapResult: mapResult, describe: describe };
},{"elliptical":231}],225:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.URL = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /** @jsx createElement */


var _elliptical = require('elliptical');

var _impliedUrl = require('./implied-url');

var _impliedUrl2 = _interopRequireDefault(_impliedUrl);

var _specificUrl = require('./specific-url');

var _specificUrl2 = _interopRequireDefault(_specificUrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
  splitOn: /\s|,/,
  argument: 'URL',
  limit: 1
};

function suppressWhen(input) {
  return (/^(h|ht|htt|https?|https?:|https?:\/|https?:\/\/|(https?:\/\/)?|\w*|\w+\.|\w+\.[a-z])$/.test(input)
  );
}

function describe(_ref) {
  var props = _ref.props;

  return (0, _elliptical.createElement)(
    'label',
    { text: props.argument, suppressWhen: suppressWhen },
    (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(_impliedUrl2.default, _extends({}, props, { id: undefined })),
      (0, _elliptical.createElement)(_specificUrl2.default, _extends({}, props, { id: undefined }))
    )
  );
}

var URL = exports.URL = { defaultProps: defaultProps, describe: describe };
},{"./implied-url":224,"./specific-url":226,"elliptical":231}],226:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _elliptical = require('elliptical');

function filter(input) {
  return (/^https?:\/\/\S+/i.test(input)
  );
} /** @jsx createElement */


function describe(_ref) {
  var props = _ref.props;

  return (0, _elliptical.createElement)('freetext', { filter: filter,
    splitOn: props.splitOn, limit: props.limit });
}

exports.default = { describe: describe };
},{"elliptical":231}],227:[function(require,module,exports){
(function (global){
const _ = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null)

exports.createProcessor = function createProcessor (value, name) {
  return function processor (element) {
    return _.assign({}, element, {[name]: value})
  }
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],228:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = combineProcessors;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function combineProcessors() {
  for (var _len = arguments.length, processors = Array(_len), _key = 0; _key < _len; _key++) {
    processors[_key] = arguments[_key];
  }

  return function (element) {
    return _lodash2.default.reduce(processors, function (acc, processor) {
      if (acc) {
        return processor(acc);
      }
    }, element);
  };
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],229:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.default = compile;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require('./utils');

var _phrases = require('./phrases');

var phrases = _interopRequireWildcard(_phrases);

var _option = require('./option');

var _option2 = _interopRequireDefault(_option);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [postProcess].map(_regenerator2.default.mark);

function applyDefaults(element) {
  return _lodash2.default.assign({}, element, {
    props: _lodash2.default.defaults({}, element.props, element.type.defaultProps || {})
  });
}

function compileSubElement(subElement, process, elementMap) {
  var traverse = void 0;
  try {
    traverse = compileNonRoot(subElement, process);
  } catch (e) {
    console.log('Element failed compilation. Element: ' + subElement);
    console.error(e);
    return subElement;
  }

  elementMap.set(subElement, traverse);
}

function next(elementMap, subElement, option) {
  var traverser = elementMap.get(subElement);
  if (traverser) {
    return traverser(option);
  } else {
    var newTraverser = compileNonRoot(subElement);
    return newTraverser(option);
  }
}

function compileProp(prop, process, elementMap) {
  if (prop && prop.type && prop.props && prop.children && (_lodash2.default.isPlainObject(prop.type) || _lodash2.default.isString(prop.type)) && _lodash2.default.isPlainObject(prop.props) && _lodash2.default.isArray(prop.children)) {
    // We can be pretty sure this is an element,
    return compileSubElement(prop, process, elementMap);
  } else {
    return prop;
  }
}

function getPhrase(element) {
  return _lodash2.default.isString(element.type) ? phrases[element.type] : element.type;
}

function compileNonRoot(element, process) {
  // ignore null elements
  if (element == null) return function () {
    return [];
  };

  // assign defaultProps
  element = applyDefaults(element);

  if (process) {
    element = process(element);

    // allow process calls to nullify elements
    if (element == null) return function () {
      return [];
    };
  }

  var phrase = getPhrase(element);

  // call describe
  if (phrase.describe) {
    var description = phrase.describe(element);
    var _traverse = compileNonRoot(description, process);
    return addOutbound(element, _traverse);
  }

  var elementMap = new Map();

  // if there's no describe, check to see if any props are elements
  // and compile those
  _lodash2.default.forEach(element.props, function (prop) {
    return compileProp(prop, process, elementMap);
  });

  // generate the traverse thunk
  _lodash2.default.forEach(element.children, function (child) {
    return compileSubElement(child, process, elementMap);
  });

  var subTraverse = function subTraverse(subElem, option) {
    return next(elementMap, subElem, option);
  };
  var traverse = function traverse(option) {
    return phrase.visit(option, element, subTraverse);
  };

  return addOutbound(element, traverse);
}

function addOutbound(element, traverse) {
  return _regenerator2.default.mark(function _callee(option) {
    var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, newResult, mods;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            _context.prev = 3;
            _iterator = traverse(option)[Symbol.iterator]();

          case 5:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              _context.next = 20;
              break;
            }

            output = _step.value;

            if (!(0, _utils.isComplete)(output)) {
              _context.next = 11;
              break;
            }

            if (element.type.mapResult) {
              newResult = element.type.mapResult(output.result, element);

              output = _lodash2.default.assign({}, output, { result: newResult });
            }

            if (!(element.type.filterResult && !element.type.filterResult(output.result, element))) {
              _context.next = 11;
              break;
            }

            return _context.abrupt('continue', 17);

          case 11:
            mods = {};

            if (element.props.value != null) {
              mods.result = element.props.value;
            }
            if (element.props.qualifiers != null) {
              mods.qualifiers = element.props.qualifiers;
            }
            if (element.props.score != null) {
              mods.score = element.props.score;
            }

            _context.next = 17;
            return _lodash2.default.assign({}, output, mods);

          case 17:
            _iteratorNormalCompletion = true;
            _context.next = 5;
            break;

          case 20:
            _context.next = 26;
            break;

          case 22:
            _context.prev = 22;
            _context.t0 = _context['catch'](3);
            _didIteratorError = true;
            _iteratorError = _context.t0;

          case 26:
            _context.prev = 26;
            _context.prev = 27;

            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }

          case 29:
            _context.prev = 29;

            if (!_didIteratorError) {
              _context.next = 32;
              break;
            }

            throw _iteratorError;

          case 32:
            return _context.finish(29);

          case 33:
            return _context.finish(26);

          case 34:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[3, 22, 26, 34], [27,, 29, 33]]);
  });
}

function compile(element, process) {
  var compiled = compileNonRoot(element, process);
  return function traverse(input) {
    var postProcessed = postProcess(compiled, input);
    var allOutputs = Array.from(postProcessed);
    return _lodash2.default.sortBy(allOutputs, function (output) {
      return -output.score;
    });
  };
}

function postProcess(compiled, input) {
  var option, outputs, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _output, newOutput;

  return _regenerator2.default.wrap(function postProcess$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          option = (0, _option2.default)({ text: input });
          outputs = compiled(option);
          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context2.prev = 5;
          _iterator2 = outputs[Symbol.iterator]();

        case 7:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context2.next = 18;
            break;
          }

          _output = _step2.value;

          if (!(_output.text === '' || _output.text == null)) {
            _context2.next = 15;
            break;
          }

          _lodash2.default.forEach(_output.callbacks, function (callback) {
            return callback();
          });

          newOutput = _lodash2.default.clone(_output);

          delete newOutput.callbacks;
          _context2.next = 15;
          return newOutput;

        case 15:
          _iteratorNormalCompletion2 = true;
          _context2.next = 7;
          break;

        case 18:
          _context2.next = 24;
          break;

        case 20:
          _context2.prev = 20;
          _context2.t0 = _context2['catch'](5);
          _didIteratorError2 = true;
          _iteratorError2 = _context2.t0;

        case 24:
          _context2.prev = 24;
          _context2.prev = 25;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 27:
          _context2.prev = 27;

          if (!_didIteratorError2) {
            _context2.next = 30;
            break;
          }

          throw _iteratorError2;

        case 30:
          return _context2.finish(27);

        case 31:
          return _context2.finish(24);

        case 32:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[0], this, [[5, 20, 24, 32], [25,, 27, 31]]);
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./option":233,"./phrases":237,"./utils":246,"babel-runtime/regenerator":338}],230:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (type, props) {
  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    children[_key - 2] = arguments[_key];
  }

  return {
    type: type,
    props: props == null ? {} : props,
    children: _lodash2.default.chain(children).flattenDeep().filter().value()
  };
};

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],231:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _element = require('./element');

Object.defineProperty(exports, 'createElement', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_element).default;
  }
});

var _compile = require('./compile');

Object.defineProperty(exports, 'compile', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_compile).default;
  }
});

var _combine = require('./combine');

Object.defineProperty(exports, 'combineProcessors', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_combine).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./combine":228,"./compile":229,"./element":230}],232:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.match = match;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _escapeStringRegexp = require('escape-string-regexp');

var _escapeStringRegexp2 = _interopRequireDefault(_escapeStringRegexp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// returns a `words` object if its a match, else null

function match(_ref) {
  var input = _ref.input;
  var text = _ref.text;
  var strategy = _ref.strategy;

  var nullInput = nullMatch({ input: input, text: text });
  if (nullInput) return nullInput;

  var inputLower = input.toLowerCase();
  var textLower = text.toLowerCase();

  var partialBeginning = partialBeginningMatch({ input: input, text: text, inputLower: inputLower, textLower: textLower });
  if (partialBeginning) return partialBeginning;

  var fullBeginning = fullBeginningMatch({ input: input, text: text, inputLower: inputLower, textLower: textLower });
  if (fullBeginning) return fullBeginning;

  if (strategy === 'contain' || strategy === 'fuzzy') {
    var anywhere = anywhereMatch({ input: input, text: text, inputLower: inputLower, textLower: textLower });
    if (anywhere) return anywhere;
  }

  if (strategy === 'fuzzy') {
    var fuzzy = fuzzyMatch({ input: input, text: text, inputLower: inputLower, textLower: textLower });
    if (fuzzy) return fuzzy;
  }
}

function nullMatch(_ref2) {
  var input = _ref2.input;
  var text = _ref2.text;

  if (input == null) {
    return {
      words: [{ text: text, input: false }],
      remaining: null,
      score: 1
    };
  }
}

function partialBeginningMatch(_ref3) {
  var input = _ref3.input;
  var text = _ref3.text;
  var inputLower = _ref3.inputLower;
  var textLower = _ref3.textLower;

  if (_lodash2.default.startsWith(inputLower, textLower)) {
    return {
      words: [{ text: text, input: true }],
      remaining: input.substring(text.length),
      score: 1
    };
  }
}

function fullBeginningMatch(_ref4) {
  var input = _ref4.input;
  var text = _ref4.text;
  var inputLower = _ref4.inputLower;
  var textLower = _ref4.textLower;

  if (_lodash2.default.startsWith(textLower, inputLower)) {
    var words = [];
    if (input.length > 0) {
      words.push({ text: text.substring(0, input.length), input: true });
    }
    if (text.length > input.length) {
      words.push({ text: text.substring(input.length), input: false });
    }

    return {
      words: words,
      remaining: null,
      score: 1
    };
  }
}

function anywhereMatch(_ref5) {
  var input = _ref5.input;
  var text = _ref5.text;
  var inputLower = _ref5.inputLower;
  var textLower = _ref5.textLower;

  var index = textLower.indexOf(inputLower);

  if (index > -1) {
    var words = [];
    var endIndex = index + input.length;

    if (index > 0) {
      words.push({ text: text.slice(0, index), input: false });
    }

    words.push({ text: text.slice(index, endIndex), input: true });

    if (endIndex <= text.length - 1) {
      words.push({ text: text.slice(endIndex), input: false });
    }

    return {
      words: words,
      remaining: null,
      score: 1 - index / (2 * text.length)
    };
  }

  return null;
}

function regexSplit(text) {
  return _lodash2.default.map(text.split(''), _escapeStringRegexp2.default);
}

function acronymMatches(_ref6) {
  var inputLower = _ref6.inputLower;
  var text = _ref6.text;

  if (_lodash2.default.includes(text, ' ')) {
    var chars = regexSplit(inputLower);
    var fuzzyString = chars.reduce(function (a, b) {
      return a + '(.*(?:\\s|^))(' + b + ')';
    }, '^') + '(.*)$';
    var fuzzyRegex = new RegExp(fuzzyString, 'i');
    var matches = text.match(fuzzyRegex);
    if (matches) {
      return { score: 0.5, matches: matches };
    }
  }
}

function capitalMatches(_ref7) {
  var inputLower = _ref7.inputLower;
  var text = _ref7.text;

  if (/[A-Z]/.test(text)) {
    var chars = regexSplit(inputLower);
    var fuzzyString = chars.reduce(function (a, b) {
      var bUpper = b.toUpperCase();
      return a + '([^' + bUpper + ']*)(' + bUpper + ')';
    }, '^') + '(.*)$';
    var fuzzyRegex = new RegExp(fuzzyString);
    var matches = text.match(fuzzyRegex);
    if (matches) {
      return { score: 0.4, matches: matches };
    }
  }
}

function trueFuzzyMatches(_ref8) {
  var inputLower = _ref8.inputLower;
  var text = _ref8.text;

  var chars = regexSplit(inputLower);
  var fuzzyString = chars.reduce(function (a, b) {
    return a + '([^' + b + ']*)(' + b + ')';
  }, '^') + '(.*)$';
  var fuzzyRegex = new RegExp(fuzzyString, 'i');
  var matches = text.match(fuzzyRegex);
  if (matches) {
    return { score: 0.3 * (1 / matches.length), matches: matches };
  }
}

function fuzzyMatch(_ref9) {
  var input = _ref9.input;
  var text = _ref9.text;
  var inputLower = _ref9.inputLower;
  var textLower = _ref9.textLower;

  var _ref10 = acronymMatches({ inputLower: inputLower, text: text }) || capitalMatches({ inputLower: inputLower, text: text }) || trueFuzzyMatches({ inputLower: inputLower, text: text }) || {};

  var score = _ref10.score;
  var matches = _ref10.matches;


  if (matches) {
    var words = [];
    for (var i = 1, l = matches.length; i < l; i++) {
      if (matches[i].length > 0) {
        words.push({
          text: matches[i],
          input: i % 2 === 0
        });
      }
    }

    return {
      words: words,
      remaining: null,
      score: score
    };
  }
  return null;
}

// export function * sort (input, items) {
//   let itemSet = _.map(items, item => ({item, matched: false}))
//
//   for (let [func, score] of [[beginningMatch, 1], [anywhereMatch, 0.5]]) {
//     yield * sortFunction({input, itemSet, func, score})
//   }
// }
//
// function * sortFunction ({input, itemSet, func, score}) {
//   for (let obj of itemSet) {
//     if (!obj.matched) {
//       const words = func({input, text: obj.item.text, qualifier: obj.item.qualifier})
//       if (words) {
//         obj.matched = true
//         _.forEach(words, word => word.descriptor = obj.item.descriptor)
//         yield {words, result: obj.item.value, score}
//       }
//     }
//   }
// }
//
// escape special characters, and wrap in parens (for matching)
// function regexEscape (str) {
//   return `(${str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/, '\\$&')})`
// }

// function beginningMatch ({input, text, qualifier}) {
//   if (_.startsWith(text.toLowerCase(), input.toLowerCase())) {
//     const matches = [{text: text.slice(0, input.length), input: true, qualifier}]
//     if (input.length < text.length) {
//       matches.push({text: text.slice(input.length), input: false, qualifier})
//     }
//     return matches
//   }
//   return null
// }
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"escape-string-regexp":340}],233:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createOption;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createOption(mods) {
  return _lodash2.default.defaults({}, mods, {
    text: '',
    words: [],
    qualifiers: [],
    score: 1,
    callbacks: []
  });
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],234:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [traverseChild, childrenTraversals, visit].map(_regenerator2.default.mark);

function traverseChild(option, child, traverse) {
  var childOutputs, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, newResult, mods;

  return _regenerator2.default.wrap(function traverseChild$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          childOutputs = traverse(child, option);

          // slight performance optimization

          if (!(child.props.id == null)) {
            _context.next = 5;
            break;
          }

          return _context.delegateYield(childOutputs, 't0', 3);

        case 3:
          _context.next = 33;
          break;

        case 5:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 8;
          _iterator = childOutputs[Symbol.iterator]();

        case 10:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 19;
            break;
          }

          output = _step.value;
          newResult = child.props.id != null ? (0, _defineProperty3.default)({}, child.props.id, output.result) : output.result;
          mods = { result: newResult };
          _context.next = 16;
          return _lodash2.default.assign({}, output, mods);

        case 16:
          _iteratorNormalCompletion = true;
          _context.next = 10;
          break;

        case 19:
          _context.next = 25;
          break;

        case 21:
          _context.prev = 21;
          _context.t1 = _context['catch'](8);
          _didIteratorError = true;
          _iteratorError = _context.t1;

        case 25:
          _context.prev = 25;
          _context.prev = 26;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 28:
          _context.prev = 28;

          if (!_didIteratorError) {
            _context.next = 31;
            break;
          }

          throw _iteratorError;

        case 31:
          return _context.finish(28);

        case 32:
          return _context.finish(25);

        case 33:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[8, 21, 25, 33], [26,, 28, 32]]);
}

function childrenTraversals(option, children, traverse) {
  var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, child;

  return _regenerator2.default.wrap(function childrenTraversals$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          if (!(children && children.length > 0)) {
            _context2.next = 27;
            break;
          }

          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context2.prev = 4;
          _iterator2 = children[Symbol.iterator]();

        case 6:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context2.next = 13;
            break;
          }

          child = _step2.value;
          _context2.next = 10;
          return traverseChild(option, child, traverse);

        case 10:
          _iteratorNormalCompletion2 = true;
          _context2.next = 6;
          break;

        case 13:
          _context2.next = 19;
          break;

        case 15:
          _context2.prev = 15;
          _context2.t0 = _context2['catch'](4);
          _didIteratorError2 = true;
          _iteratorError2 = _context2.t0;

        case 19:
          _context2.prev = 19;
          _context2.prev = 20;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 22:
          _context2.prev = 22;

          if (!_didIteratorError2) {
            _context2.next = 25;
            break;
          }

          throw _iteratorError2;

        case 25:
          return _context2.finish(22);

        case 26:
          return _context2.finish(19);

        case 27:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[4, 15, 19, 27], [20,, 22, 26]]);
}

function visit(option, _ref2, traverse) {
  var props = _ref2.props;
  var children = _ref2.children;
  var traversals;
  return _regenerator2.default.wrap(function visit$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          traversals = childrenTraversals(option, children, traverse);
          return _context3.delegateYield((0, _utils.limitIterator)(traversals, props.limit), 't0', 2);

        case 2:
        case 'end':
          return _context3.stop();
      }
    }
  }, _marked[2], this);
}

exports.default = { visit: visit };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../utils":246,"babel-runtime/helpers/defineProperty":253,"babel-runtime/regenerator":338}],235:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [visit].map(_regenerator2.default.mark);

var defaultProps = {
  skipIncomplete: false,
  option: false
};

function visit(option, _ref, traverse) {
  var props = _ref.props;
  var children = _ref.children;

  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output;

  return _regenerator2.default.wrap(function visit$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!props.inbound) {
            _context.next = 3;
            break;
          }

          if (props.inbound(option)) {
            _context.next = 3;
            break;
          }

          return _context.abrupt('return');

        case 3:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 6;
          _iterator = traverse(children[0], option)[Symbol.iterator]();

        case 8:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 21;
            break;
          }

          output = _step.value;

          if (!(props.skipIncomplete && !(0, _utils.isComplete)(output))) {
            _context.next = 15;
            break;
          }

          _context.next = 13;
          return output;

        case 13:
          _context.next = 18;
          break;

        case 15:
          if (!(!props.outbound || props.outbound(output))) {
            _context.next = 18;
            break;
          }

          _context.next = 18;
          return output;

        case 18:
          _iteratorNormalCompletion = true;
          _context.next = 8;
          break;

        case 21:
          _context.next = 27;
          break;

        case 23:
          _context.prev = 23;
          _context.t0 = _context['catch'](6);
          _didIteratorError = true;
          _iteratorError = _context.t0;

        case 27:
          _context.prev = 27;
          _context.prev = 28;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 30:
          _context.prev = 30;

          if (!_didIteratorError) {
            _context.next = 33;
            break;
          }

          throw _iteratorError;

        case 33:
          return _context.finish(30);

        case 34:
          return _context.finish(27);

        case 35:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[6, 23, 27, 35], [28,, 30, 34]]);
}

exports.default = { defaultProps: defaultProps, visit: visit };
},{"../utils":246,"babel-runtime/regenerator":338}],236:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [filterInput].map(_regenerator2.default.mark); /** @jsx createElement */


function describe(_ref) {
  var props = _ref.props;

  return (0, _element2.default)('raw', { func: function func(input) {
      return filterInput(input, props);
    }, limit: props.limit });
}

function filterInput(input, props) {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, substring, score;

  return _regenerator2.default.wrap(function filterInput$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 3;
          _iterator = (0, _utils.substrings)(input || '', props)[Symbol.iterator]();

        case 5:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 14;
            break;
          }

          substring = _step.value;

          if (!(!props.filter || props.filter(substring))) {
            _context.next = 11;
            break;
          }

          score = props.greedy ? 0.1 + (1 - 1 / substring.length) : 0.1 + 1 / substring.length;
          _context.next = 11;
          return {
            words: [{ text: substring, input: true }],
            result: substring,
            remaining: input.substring(substring.length),
            score: score
          };

        case 11:
          _iteratorNormalCompletion = true;
          _context.next = 5;
          break;

        case 14:
          _context.next = 20;
          break;

        case 16:
          _context.prev = 16;
          _context.t0 = _context['catch'](3);
          _didIteratorError = true;
          _iteratorError = _context.t0;

        case 20:
          _context.prev = 20;
          _context.prev = 21;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 23:
          _context.prev = 23;

          if (!_didIteratorError) {
            _context.next = 26;
            break;
          }

          throw _iteratorError;

        case 26:
          return _context.finish(23);

        case 27:
          return _context.finish(20);

        case 28:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[3, 16, 20, 28], [21,, 23, 27]]);
}

exports.default = { describe: describe };
},{"../element":230,"../utils":246,"babel-runtime/regenerator":338}],237:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _literal = require('./literal');

Object.defineProperty(exports, 'literal', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_literal).default;
  }
});

var _list = require('./list');

Object.defineProperty(exports, 'list', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_list).default;
  }
});

var _freetext = require('./freetext');

Object.defineProperty(exports, 'freetext', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_freetext).default;
  }
});

var _choice = require('./choice');

Object.defineProperty(exports, 'choice', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_choice).default;
  }
});

var _sequence = require('./sequence');

Object.defineProperty(exports, 'sequence', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_sequence).default;
  }
});

var _label = require('./label');

Object.defineProperty(exports, 'label', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_label).default;
  }
});

var _repeat = require('./repeat');

Object.defineProperty(exports, 'repeat', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_repeat).default;
  }
});

var _map = require('./map');

Object.defineProperty(exports, 'map', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_map).default;
  }
});

var _filter = require('./filter');

Object.defineProperty(exports, 'filter', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_filter).default;
  }
});

var _tap = require('./tap');

Object.defineProperty(exports, 'tap', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_tap).default;
  }
});

var _raw = require('./raw');

Object.defineProperty(exports, 'raw', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_raw).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./choice":234,"./filter":235,"./freetext":236,"./label":238,"./list":239,"./literal":240,"./map":241,"./raw":242,"./repeat":243,"./sequence":244,"./tap":245}],238:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [visit, parseChild].map(_regenerator2.default.mark);

var defaultProps = {
  suppress: true,
  argument: true,
  suppressEmpty: true
};

function visit(option, _ref, traverse) {
  var props = _ref.props;
  var children = _ref.children;
  var child;
  return _regenerator2.default.wrap(function visit$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          props = _lodash2.default.defaults({}, props, defaultProps);
          child = children[0];

          if (!(props.suppress && option.text == null || props.suppressEmpty && option.text === '' || props.suppressWhen && props.suppressWhen(option.text))) {
            _context.next = 7;
            break;
          }

          _context.next = 5;
          return outputSelf(option, child, props);

        case 5:
          _context.next = 8;
          break;

        case 7:
          return _context.delegateYield(parseChild(option, child, props, traverse), 't0', 8);

        case 8:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}

function parseChild(option, child, props, traverse) {
  var didSetCurrentArgument, modification, optionWithArgument, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output;

  return _regenerator2.default.wrap(function parseChild$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          didSetCurrentArgument = false;
          modification = {};

          if (props.argument && !option.currentArgument) {
            modification.currentArgument = props.text;
            didSetCurrentArgument = true;
          }

          optionWithArgument = _lodash2.default.assign({}, option, modification);
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context2.prev = 7;
          _iterator = traverse(child, optionWithArgument)[Symbol.iterator]();

        case 9:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context2.next = 21;
            break;
          }

          output = _step.value;

          if (!didSetCurrentArgument) {
            _context2.next = 16;
            break;
          }

          _context2.next = 14;
          return _lodash2.default.assign({}, output, { currentArgument: undefined });

        case 14:
          _context2.next = 18;
          break;

        case 16:
          _context2.next = 18;
          return output;

        case 18:
          _iteratorNormalCompletion = true;
          _context2.next = 9;
          break;

        case 21:
          _context2.next = 27;
          break;

        case 23:
          _context2.prev = 23;
          _context2.t0 = _context2['catch'](7);
          _didIteratorError = true;
          _iteratorError = _context2.t0;

        case 27:
          _context2.prev = 27;
          _context2.prev = 28;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 30:
          _context2.prev = 30;

          if (!_didIteratorError) {
            _context2.next = 33;
            break;
          }

          throw _iteratorError;

        case 33:
          return _context2.finish(30);

        case 34:
          return _context2.finish(27);

        case 35:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[7, 23, 27, 35], [28,, 30, 34]]);
}

function outputSelf(option, child, props) {
  var word = {
    text: props.text,
    input: false,
    placeholder: true,
    argument: option.currentArgument || (props.argument ? props.text : undefined)
  };

  var modification = {
    score: 0.01,
    result: undefined,
    text: null
  };

  modification.words = option.words.concat(word);

  return _lodash2.default.assign({}, option, modification);
}

exports.default = { visit: visit };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"babel-runtime/regenerator":338}],239:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

var _match = require('../match');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [doMatch, compute].map(_regenerator2.default.mark); /** @jsx createElement */


exports.default = {
  describe: function describe(_ref) {
    var props = _ref.props;

    props = _lodash2.default.defaults({}, props, { strategy: 'start' });
    var trueItems = _lodash2.default.map(props.items, itemify);

    return (0, _element2.default)('raw', {
      func: function func(input) {
        return compute(input, trueItems, props);
      },
      limit: props.limit, category: props.category });
  }
};


function itemify(item) {
  return _lodash2.default.isString(item) ? { text: item } : item;
}

function doMatch(input, items, props) {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, matchObj;

  return _regenerator2.default.wrap(function doMatch$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 3;
          _iterator = items[Symbol.iterator]();

        case 5:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 16;
            break;
          }

          item = _step.value;
          matchObj = (0, _match.match)({ input: input, text: item.text, strategy: props.strategy });

          if (!matchObj) {
            _context.next = 13;
            break;
          }

          matchObj.result = item.value;
          matchObj.qualifiers = item.qualifiers;
          _context.next = 13;
          return matchObj;

        case 13:
          _iteratorNormalCompletion = true;
          _context.next = 5;
          break;

        case 16:
          _context.next = 22;
          break;

        case 18:
          _context.prev = 18;
          _context.t0 = _context['catch'](3);
          _didIteratorError = true;
          _iteratorError = _context.t0;

        case 22:
          _context.prev = 22;
          _context.prev = 23;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 25:
          _context.prev = 25;

          if (!_didIteratorError) {
            _context.next = 28;
            break;
          }

          throw _iteratorError;

        case 28:
          return _context.finish(25);

        case 29:
          return _context.finish(22);

        case 30:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[3, 18, 22, 30], [23,, 25, 29]]);
}

function compute(input, items, props) {
  var resultIterator, finalIterator, sortedResults, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, output;

  return _regenerator2.default.wrap(function compute$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          resultIterator = doMatch(input, items, props);
          finalIterator = resultIterator;

          if (props.strategy !== 'start') {
            // TODO - this could be optimized
            //  Right now it is going to do fuzzy matching for every single item
            //  much of this processing could be eliminated if it ran the
            //  non-fuzzy (score 1) parses first, and then did the fuzzy (score 0.5)
            //  parses
            sortedResults = _lodash2.default.chain(Array.from(resultIterator)).sortBy(function (_ref2) {
              var score = _ref2.score;
              return -score;
            }).value();


            finalIterator = sortedResults;
          }

          if (!(props.value != null)) {
            _context2.next = 32;
            break;
          }

          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context2.prev = 7;
          _iterator2 = finalIterator[Symbol.iterator]();

        case 9:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context2.next = 16;
            break;
          }

          output = _step2.value;
          _context2.next = 13;
          return _lodash2.default.assign({}, output, { result: props.value });

        case 13:
          _iteratorNormalCompletion2 = true;
          _context2.next = 9;
          break;

        case 16:
          _context2.next = 22;
          break;

        case 18:
          _context2.prev = 18;
          _context2.t0 = _context2['catch'](7);
          _didIteratorError2 = true;
          _iteratorError2 = _context2.t0;

        case 22:
          _context2.prev = 22;
          _context2.prev = 23;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 25:
          _context2.prev = 25;

          if (!_didIteratorError2) {
            _context2.next = 28;
            break;
          }

          throw _iteratorError2;

        case 28:
          return _context2.finish(25);

        case 29:
          return _context2.finish(22);

        case 30:
          _context2.next = 33;
          break;

        case 32:
          return _context2.delegateYield(finalIterator, 't1', 33);

        case 33:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[7, 18, 22, 30], [23,, 25, 29]]);
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../element":230,"../match":232,"babel-runtime/regenerator":338}],240:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _match = require('../match');

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function compute(input, text, strategy) {
  if (text == null) return [];

  var matchObj = (0, _match.match)({ input: input, text: text, strategy: strategy });
  if (matchObj) {
    return [matchObj];
  } else {
    return [];
  }
} /** @jsx createElement */


function decorateFunc(input, text) {
  if (input == null || input === '') {
    return [];
  } else {
    return [{
      words: [{ text: text, input: false }],
      remaining: input,
      score: 1
    }];
  }
}

function describe(_ref) {
  var props = _ref.props;

  props = _lodash2.default.defaults({}, props, {
    text: '',
    decorate: false,
    allowInput: true,
    strategy: 'start'
  });

  if (props.decorate) {
    if (props.allowInput) {
      return (0, _element2.default)(
        'choice',
        null,
        (0, _element2.default)('literal', { text: props.text, strategy: props.strategy }),
        (0, _element2.default)('raw', { func: function func(input) {
            return decorateFunc(input, props.text);
          } })
      );
    } else {
      return (0, _element2.default)('raw', { func: function func(input) {
          return decorateFunc(input, props.text);
        } });
    }
  } else {
    return (0, _element2.default)('raw', {
      func: function func(input) {
        return compute(input, props.text, props.strategy);
      },
      category: props.category });
  }
}

exports.default = { describe: describe };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../element":230,"../match":232}],241:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [visit].map(_regenerator2.default.mark);

function visit(option, _ref, traverse) {
  var props = _ref.props;
  var children = _ref.children;

  var newOption, iterator, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, mapped;

  return _regenerator2.default.wrap(function visit$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          // preprocess with inbound
          newOption = option;

          if (props.inbound) {
            newOption = props.inbound(option);
          }

          iterator = traverse(children[0], newOption);

          if (props.outbound) {
            _context.next = 6;
            break;
          }

          return _context.delegateYield(iterator, 't0', 5);

        case 5:
          return _context.abrupt('return');

        case 6:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 9;
          _iterator = iterator[Symbol.iterator]();

        case 11:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 28;
            break;
          }

          output = _step.value;

          if (!(props.skipIncomplete && !(0, _utils.isComplete)(output))) {
            _context.next = 18;
            break;
          }

          _context.next = 16;
          return output;

        case 16:
          _context.next = 25;
          break;

        case 18:
          mapped = props.outbound(output);

          if (!mapped[Symbol.iterator]) {
            _context.next = 23;
            break;
          }

          return _context.delegateYield((0, _utils.limitIterator)(mapped, props.limit), 't1', 21);

        case 21:
          _context.next = 25;
          break;

        case 23:
          _context.next = 25;
          return mapped;

        case 25:
          _iteratorNormalCompletion = true;
          _context.next = 11;
          break;

        case 28:
          _context.next = 34;
          break;

        case 30:
          _context.prev = 30;
          _context.t2 = _context['catch'](9);
          _didIteratorError = true;
          _iteratorError = _context.t2;

        case 34:
          _context.prev = 34;
          _context.prev = 35;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 37:
          _context.prev = 37;

          if (!_didIteratorError) {
            _context.next = 40;
            break;
          }

          throw _iteratorError;

        case 40:
          return _context.finish(37);

        case 41:
          return _context.finish(34);

        case 42:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[9, 30, 34, 42], [35,, 37, 41]]);
}

exports.default = { visit: visit };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../utils":246,"babel-runtime/regenerator":338}],242:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [optionsFromRawOutputs, visit].map(_regenerator2.default.mark);

function modifyOption(option, rawOutput, category) {
  var modification = {
    result: rawOutput.result,
    text: rawOutput.remaining,
    score: rawOutput.score || 1,
    qualifiers: rawOutput.qualifiers || [],
    words: option.words.concat(_lodash2.default.map(rawOutput.words, function (word) {
      return _lodash2.default.assign({}, word, option.currentArgument ? { argument: option.currentArgument } : {}, category ? { category: category } : {});
    }))
  };

  return _lodash2.default.assign({}, option, modification);
}

function optionsFromRawOutputs(option, rawOutputs, category) {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, rawOutput;

  return _regenerator2.default.wrap(function optionsFromRawOutputs$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 3;
          _iterator = rawOutputs[Symbol.iterator]();

        case 5:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 12;
            break;
          }

          rawOutput = _step.value;
          _context.next = 9;
          return modifyOption(option, rawOutput, category);

        case 9:
          _iteratorNormalCompletion = true;
          _context.next = 5;
          break;

        case 12:
          _context.next = 18;
          break;

        case 14:
          _context.prev = 14;
          _context.t0 = _context['catch'](3);
          _didIteratorError = true;
          _iteratorError = _context.t0;

        case 18:
          _context.prev = 18;
          _context.prev = 19;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 21:
          _context.prev = 21;

          if (!_didIteratorError) {
            _context.next = 24;
            break;
          }

          throw _iteratorError;

        case 24:
          return _context.finish(21);

        case 25:
          return _context.finish(18);

        case 26:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[3, 14, 18, 26], [19,, 21, 25]]);
}

function visit(option, _ref) {
  var props = _ref.props;
  var rawOutputs, outputs;
  return _regenerator2.default.wrap(function visit$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          if (props.func) {
            _context2.next = 2;
            break;
          }

          return _context2.abrupt('return');

        case 2:
          rawOutputs = props.func(option.text);
          outputs = optionsFromRawOutputs(option, rawOutputs, props.category);
          return _context2.delegateYield((0, _utils.limitIterator)(outputs, props.limit), 't0', 5);

        case 5:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this);
}

exports.default = { visit: visit };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../utils":246,"babel-runtime/regenerator":338}],243:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [visit, parseChild, callParseChild].map(_regenerator2.default.mark);

var defaultProps = {
  max: Number.MAX_SAFE_INTEGER,
  min: 1,
  unique: false
};

function visit(option, _ref, traverse) {
  var props = _ref.props;
  var children = _ref.children;
  var child, modifications, trueOption;
  return _regenerator2.default.wrap(function visit$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          props = _lodash2.default.defaults({}, props, defaultProps);
          child = children[0];
          modifications = {
            result: [],
            score: 1
          };
          trueOption = _lodash2.default.assign({}, option, modifications);
          return _context.delegateYield(parseChild(0, trueOption, child, props, traverse), 't0', 5);

        case 5:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}

function parseChild(index, option, child, props, traverse) {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, sepOutput, trueOutput;

  return _regenerator2.default.wrap(function parseChild$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          if (!(index > props.max)) {
            _context2.next = 2;
            break;
          }

          return _context2.abrupt('return');

        case 2:
          if (!(index >= props.min)) {
            _context2.next = 5;
            break;
          }

          _context2.next = 5;
          return option;

        case 5:
          if (!(index >= props.min && option.text == null)) {
            _context2.next = 7;
            break;
          }

          return _context2.abrupt('return');

        case 7:
          if (!(index > 0 && props.separator)) {
            _context2.next = 36;
            break;
          }

          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context2.prev = 11;
          _iterator = traverse(props.separator, option)[Symbol.iterator]();

        case 13:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context2.next = 20;
            break;
          }

          sepOutput = _step.value;
          trueOutput = _lodash2.default.assign({}, sepOutput, { result: option.result });
          return _context2.delegateYield(callParseChild(index, trueOutput, child, props, traverse), 't0', 17);

        case 17:
          _iteratorNormalCompletion = true;
          _context2.next = 13;
          break;

        case 20:
          _context2.next = 26;
          break;

        case 22:
          _context2.prev = 22;
          _context2.t1 = _context2['catch'](11);
          _didIteratorError = true;
          _iteratorError = _context2.t1;

        case 26:
          _context2.prev = 26;
          _context2.prev = 27;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 29:
          _context2.prev = 29;

          if (!_didIteratorError) {
            _context2.next = 32;
            break;
          }

          throw _iteratorError;

        case 32:
          return _context2.finish(29);

        case 33:
          return _context2.finish(26);

        case 34:
          _context2.next = 37;
          break;

        case 36:
          return _context2.delegateYield(callParseChild(index, option, child, props, traverse), 't2', 37);

        case 37:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this, [[11, 22, 26, 34], [27,, 29, 33]]);
}

function callParseChild(index, option, child, props, traverse) {
  var mods, trueOption, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, output, outputModifications, _trueOutput;

  return _regenerator2.default.wrap(function callParseChild$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          mods = { qualifiers: [] };
          trueOption = _lodash2.default.assign({}, option, mods);
          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context3.prev = 5;
          _iterator2 = traverse(child, trueOption)[Symbol.iterator]();

        case 7:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context3.next = 17;
            break;
          }

          output = _step2.value;

          if (!(props.unique && _lodash2.default.some(option.result, _lodash2.default.partial(_lodash2.default.isEqual, _lodash2.default, output.result)))) {
            _context3.next = 11;
            break;
          }

          return _context3.abrupt('return');

        case 11:
          outputModifications = {
            result: option.result.concat(output.result),
            qualifiers: option.qualifiers.concat(output.qualifiers)
          };
          _trueOutput = _lodash2.default.assign({}, output, outputModifications);
          return _context3.delegateYield(parseChild(index + 1, _trueOutput, child, props, traverse), 't0', 14);

        case 14:
          _iteratorNormalCompletion2 = true;
          _context3.next = 7;
          break;

        case 17:
          _context3.next = 23;
          break;

        case 19:
          _context3.prev = 19;
          _context3.t1 = _context3['catch'](5);
          _didIteratorError2 = true;
          _iteratorError2 = _context3.t1;

        case 23:
          _context3.prev = 23;
          _context3.prev = 24;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 26:
          _context3.prev = 26;

          if (!_didIteratorError2) {
            _context3.next = 29;
            break;
          }

          throw _iteratorError2;

        case 29:
          return _context3.finish(26);

        case 30:
          return _context3.finish(23);

        case 31:
        case 'end':
          return _context3.stop();
      }
    }
  }, _marked[2], this, [[5, 19, 23, 31], [24,, 26, 30]]);
}

exports.default = { visit: visit };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"babel-runtime/regenerator":338}],244:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [visit, parseOptionals, parseChildControl, parseChild].map(_regenerator2.default.mark);

function visit(option, _ref, traverse) {
  var _ref$props$unique = _ref.props.unique;
  var unique = _ref$props$unique === undefined ? false : _ref$props$unique;
  var children = _ref.children;
  var mods, trueOption, iterator;
  return _regenerator2.default.wrap(function visit$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          mods = { result: {}, score: 1 };
          trueOption = _lodash2.default.assign({}, option, mods);
          iterator = parseChildControl(0, trueOption, unique, children, traverse);
          return _context.delegateYield(iterator, 't0', 4);

        case 4:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this);
}

function shouldDoEllipsis(index, option, children) {
  // Don't do ellipsis for the first element,
  // or if this element is both optional and ellipsis, and the text is ''
  // because that results in duplicate options output
  var child = children[index];
  return index > 0 && children[index - 1].props.ellipsis && !(child.props.ellipsis && child.props.optional && option.text === '');
}

function parseOptionals(index, option, unique, children, traverse) {
  var child, withChildParse, withoutChildParse;
  return _regenerator2.default.wrap(function parseOptionals$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          child = children[index];
          withChildParse = parseChild(index, option, unique, children, traverse);
          withoutChildParse = parseChildControl(index + 1, option, unique, children, traverse);

          if (!child.props.preferred) {
            _context2.next = 8;
            break;
          }

          return _context2.delegateYield(withChildParse, 't0', 5);

        case 5:
          return _context2.delegateYield(withoutChildParse, 't1', 6);

        case 6:
          _context2.next = 10;
          break;

        case 8:
          return _context2.delegateYield(withoutChildParse, 't2', 9);

        case 9:
          return _context2.delegateYield(withChildParse, 't3', 10);

        case 10:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this);
}

function parseChildControl(index, option, unique, children, traverse) {
  var child, success, optionals;
  return _regenerator2.default.wrap(function parseChildControl$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          if (!(index >= children.length)) {
            _context3.next = 4;
            break;
          }

          _context3.next = 3;
          return option;

        case 3:
          return _context3.abrupt('return');

        case 4:
          child = children[index];

          if (!shouldDoEllipsis(index, option, children)) {
            _context3.next = 16;
            break;
          }

          if (!(option.text === '')) {
            _context3.next = 11;
            break;
          }

          _context3.next = 9;
          return option;

        case 9:
          _context3.next = 16;
          break;

        case 11:
          success = false;
          _context3.next = 14;
          return _lodash2.default.assign({}, option, {
            callbacks: option.callbacks.concat(function () {
              success = true;
            })
          });

        case 14:
          if (!success) {
            _context3.next = 16;
            break;
          }

          return _context3.abrupt('return');

        case 16:
          if (!child.props.optional) {
            _context3.next = 21;
            break;
          }

          optionals = parseOptionals(index, option, unique, children, traverse);
          return _context3.delegateYield((0, _utils.limitIterator)(optionals, child.props.limited ? 1 : undefined), 't0', 19);

        case 19:
          _context3.next = 22;
          break;

        case 21:
          return _context3.delegateYield(parseChild(index, option, unique, children, traverse), 't1', 22);

        case 22:
        case 'end':
          return _context3.stop();
      }
    }
  }, _marked[2], this);
}

function hasSomeSameKeys(option, output) {
  var sameKeys = _lodash2.default.intersection(_lodash2.default.keys(option.result), _lodash2.default.keys(output.result));
  return !_lodash2.default.isEmpty(sameKeys);
}

function parseChild(index, option, unique, children, traverse) {
  var child, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, output, modifications, nextOutput;

  return _regenerator2.default.wrap(function parseChild$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          child = children[index];
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context4.prev = 4;
          _iterator = traverse(child, option)[Symbol.iterator]();

        case 6:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context4.next = 21;
            break;
          }

          output = _step.value;

          if (!(unique && output.result != null)) {
            _context4.next = 15;
            break;
          }

          if (!(child.props.id && option.result[child.props.id] != null)) {
            _context4.next = 13;
            break;
          }

          return _context4.abrupt('continue', 18);

        case 13:
          if (!(child.props.merge && hasSomeSameKeys(option, output))) {
            _context4.next = 15;
            break;
          }

          return _context4.abrupt('continue', 18);

        case 15:
          modifications = {
            result: getAccumulatedResult(option.result, child, output.result),
            score: option.score * output.score,
            qualifiers: option.qualifiers.concat(output.qualifiers)
          };
          nextOutput = _lodash2.default.assign({}, output, modifications);
          return _context4.delegateYield(parseChildControl(index + 1, nextOutput, unique, children, traverse), 't0', 18);

        case 18:
          _iteratorNormalCompletion = true;
          _context4.next = 6;
          break;

        case 21:
          _context4.next = 27;
          break;

        case 23:
          _context4.prev = 23;
          _context4.t1 = _context4['catch'](4);
          _didIteratorError = true;
          _iteratorError = _context4.t1;

        case 27:
          _context4.prev = 27;
          _context4.prev = 28;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 30:
          _context4.prev = 30;

          if (!_didIteratorError) {
            _context4.next = 33;
            break;
          }

          throw _iteratorError;

        case 33:
          return _context4.finish(30);

        case 34:
          return _context4.finish(27);

        case 35:
        case 'end':
          return _context4.stop();
      }
    }
  }, _marked[3], this, [[4, 23, 27, 35], [28,, 30, 34]]);
}

function getAccumulatedResult(inputResult, child, childResult) {
  if (!_lodash2.default.isUndefined(childResult)) {
    var childId = child.props.id;
    var childMerge = child.props.merge;
    if (childId) {
      return _lodash2.default.assign({}, inputResult, (0, _defineProperty3.default)({}, childId, childResult));
    } else if (childMerge) {
      if (!_lodash2.default.isEmpty(inputResult) && _lodash2.default.isPlainObject(childResult)) {
        return _lodash2.default.merge({}, inputResult, childResult);
      } else {
        return childResult;
      }
    }
  }
  return inputResult;
}

exports.default = { visit: visit };
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../utils":246,"babel-runtime/helpers/defineProperty":253,"babel-runtime/regenerator":338}],245:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function describe(_ref) {
  var props = _ref.props;
  var children = _ref.children;

  var inbound = props.inbound ? function (option) {
    props.inbound(option);
    return option;
  } : undefined;

  var outbound = props.outbound ? function (option) {
    props.outbound(option);
    return option;
  } : undefined;

  return (0, _element2.default)(
    'map',
    { inbound: inbound, outbound: outbound },
    children[0]
  );
} /** @jsx createElement */


exports.default = { describe: describe };
},{"../element":230}],246:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

exports.isComplete = isComplete;
exports.limitIterator = limitIterator;
exports.substrings = substrings;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _smartSplit = require('smart-split');

var _smartSplit2 = _interopRequireDefault(_smartSplit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [limitIterator, substrings].map(_regenerator2.default.mark);

function isComplete(option) {
  return !_lodash2.default.some(option.words, 'placeholder');
}

// Accepts either an iterator of Options, or an iterator of iterators of Options
function limitIterator(iterator, limit) {
  var successes, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, success, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, option, mods, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3;

  return _regenerator2.default.wrap(function limitIterator$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          if (!limit) {
            _context.next = 65;
            break;
          }

          successes = 0;
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 5;
          _iterator = iterator[Symbol.iterator]();

        case 7:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 49;
            break;
          }

          item = _step.value;
          success = false;

          if (!item[Symbol.iterator]) {
            _context.next = 40;
            break;
          }

          _iteratorNormalCompletion2 = true;
          _didIteratorError2 = false;
          _iteratorError2 = undefined;
          _context.prev = 14;
          _iterator2 = item[Symbol.iterator]();

        case 16:
          if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
            _context.next = 24;
            break;
          }

          option = _step2.value;
          mods = {
            callbacks: option.callbacks.concat(function () {
              success = true;
            })
          };
          _context.next = 21;
          return _lodash2.default.assign({}, option, mods);

        case 21:
          _iteratorNormalCompletion2 = true;
          _context.next = 16;
          break;

        case 24:
          _context.next = 30;
          break;

        case 26:
          _context.prev = 26;
          _context.t0 = _context['catch'](14);
          _didIteratorError2 = true;
          _iteratorError2 = _context.t0;

        case 30:
          _context.prev = 30;
          _context.prev = 31;

          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }

        case 33:
          _context.prev = 33;

          if (!_didIteratorError2) {
            _context.next = 36;
            break;
          }

          throw _iteratorError2;

        case 36:
          return _context.finish(33);

        case 37:
          return _context.finish(30);

        case 38:
          _context.next = 43;
          break;

        case 40:
          mods = {
            callbacks: item.callbacks.concat(function () {
              success = true;
            })
          };
          _context.next = 43;
          return _lodash2.default.assign({}, item, mods);

        case 43:

          if (success) successes++;

          if (!(limit <= successes)) {
            _context.next = 46;
            break;
          }

          return _context.abrupt('break', 49);

        case 46:
          _iteratorNormalCompletion = true;
          _context.next = 7;
          break;

        case 49:
          _context.next = 55;
          break;

        case 51:
          _context.prev = 51;
          _context.t1 = _context['catch'](5);
          _didIteratorError = true;
          _iteratorError = _context.t1;

        case 55:
          _context.prev = 55;
          _context.prev = 56;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 58:
          _context.prev = 58;

          if (!_didIteratorError) {
            _context.next = 61;
            break;
          }

          throw _iteratorError;

        case 61:
          return _context.finish(58);

        case 62:
          return _context.finish(55);

        case 63:
          _context.next = 95;
          break;

        case 65:
          _iteratorNormalCompletion3 = true;
          _didIteratorError3 = false;
          _iteratorError3 = undefined;
          _context.prev = 68;
          _iterator3 = iterator[Symbol.iterator]();

        case 70:
          if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
            _context.next = 81;
            break;
          }

          item = _step3.value;

          if (!item[Symbol.iterator]) {
            _context.next = 76;
            break;
          }

          return _context.delegateYield(item, 't2', 74);

        case 74:
          _context.next = 78;
          break;

        case 76:
          _context.next = 78;
          return item;

        case 78:
          _iteratorNormalCompletion3 = true;
          _context.next = 70;
          break;

        case 81:
          _context.next = 87;
          break;

        case 83:
          _context.prev = 83;
          _context.t3 = _context['catch'](68);
          _didIteratorError3 = true;
          _iteratorError3 = _context.t3;

        case 87:
          _context.prev = 87;
          _context.prev = 88;

          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }

        case 90:
          _context.prev = 90;

          if (!_didIteratorError3) {
            _context.next = 93;
            break;
          }

          throw _iteratorError3;

        case 93:
          return _context.finish(90);

        case 94:
          return _context.finish(87);

        case 95:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[5, 51, 55, 63], [14, 26, 30, 38], [31,, 33, 37], [56,, 58, 62], [68, 83, 87, 95], [88,, 90, 94]]);
}

function substrings(input, _ref) {
  var _ref$splitOn = _ref.splitOn;
  var splitOn = _ref$splitOn === undefined ? '' : _ref$splitOn;
  var _ref$consumeAll = _ref.consumeAll;
  var consumeAll = _ref$consumeAll === undefined ? false : _ref$consumeAll;
  var _ref$greedy = _ref.greedy;
  var greedy = _ref$greedy === undefined ? false : _ref$greedy;
  var inputs, i;
  return _regenerator2.default.wrap(function substrings$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          if (!consumeAll) {
            _context2.next = 4;
            break;
          }

          _context2.next = 3;
          return input;

        case 3:
          return _context2.abrupt('return');

        case 4:
          inputs = (0, _smartSplit2.default)(input, splitOn);
          i = 0;

        case 6:
          if (!(i < inputs.length)) {
            _context2.next = 17;
            break;
          }

          if (!greedy) {
            _context2.next = 12;
            break;
          }

          _context2.next = 10;
          return inputs.slice(0, inputs.length - i).join('');

        case 10:
          _context2.next = 14;
          break;

        case 12:
          _context2.next = 14;
          return inputs.slice(0, i + 1).join('');

        case 14:
          i += 2;
          _context2.next = 6;
          break;

        case 17:
        case 'end':
          return _context2.stop();
      }
    }
  }, _marked[1], this);
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"babel-runtime/regenerator":338,"smart-split":579}],247:[function(require,module,exports){
arguments[4][21][0].apply(exports,arguments)
},{"core-js/library/fn/object/create":255,"dup":21}],248:[function(require,module,exports){
arguments[4][22][0].apply(exports,arguments)
},{"core-js/library/fn/object/define-property":256,"dup":22}],249:[function(require,module,exports){
arguments[4][23][0].apply(exports,arguments)
},{"core-js/library/fn/object/set-prototype-of":257,"dup":23}],250:[function(require,module,exports){
arguments[4][24][0].apply(exports,arguments)
},{"core-js/library/fn/promise":258,"dup":24}],251:[function(require,module,exports){
arguments[4][25][0].apply(exports,arguments)
},{"core-js/library/fn/symbol":259,"dup":25}],252:[function(require,module,exports){
arguments[4][26][0].apply(exports,arguments)
},{"core-js/library/fn/symbol/iterator":260,"dup":26}],253:[function(require,module,exports){
arguments[4][27][0].apply(exports,arguments)
},{"babel-runtime/core-js/object/define-property":248,"dup":27}],254:[function(require,module,exports){
arguments[4][29][0].apply(exports,arguments)
},{"babel-runtime/core-js/symbol":251,"babel-runtime/core-js/symbol/iterator":252,"dup":29}],255:[function(require,module,exports){
arguments[4][31][0].apply(exports,arguments)
},{"../../modules/_core":268,"../../modules/es6.object.create":330,"dup":31}],256:[function(require,module,exports){
arguments[4][32][0].apply(exports,arguments)
},{"../../modules/_core":268,"../../modules/es6.object.define-property":331,"dup":32}],257:[function(require,module,exports){
arguments[4][33][0].apply(exports,arguments)
},{"../../modules/_core":268,"../../modules/es6.object.set-prototype-of":332,"dup":33}],258:[function(require,module,exports){
arguments[4][34][0].apply(exports,arguments)
},{"../modules/_core":268,"../modules/es6.object.to-string":333,"../modules/es6.promise":334,"../modules/es6.string.iterator":335,"../modules/web.dom.iterable":337,"dup":34}],259:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"../../modules/_core":268,"../../modules/es6.object.to-string":333,"../../modules/es6.symbol":336,"dup":35}],260:[function(require,module,exports){
arguments[4][36][0].apply(exports,arguments)
},{"../../modules/_wks":327,"../../modules/es6.string.iterator":335,"../../modules/web.dom.iterable":337,"dup":36}],261:[function(require,module,exports){
arguments[4][37][0].apply(exports,arguments)
},{"dup":37}],262:[function(require,module,exports){
arguments[4][38][0].apply(exports,arguments)
},{"dup":38}],263:[function(require,module,exports){
arguments[4][39][0].apply(exports,arguments)
},{"dup":39}],264:[function(require,module,exports){
arguments[4][40][0].apply(exports,arguments)
},{"./_is-object":287,"dup":40}],265:[function(require,module,exports){
arguments[4][41][0].apply(exports,arguments)
},{"./_to-index":320,"./_to-iobject":322,"./_to-length":323,"dup":41}],266:[function(require,module,exports){
arguments[4][42][0].apply(exports,arguments)
},{"./_cof":267,"./_wks":327,"dup":42}],267:[function(require,module,exports){
arguments[4][43][0].apply(exports,arguments)
},{"dup":43}],268:[function(require,module,exports){
arguments[4][44][0].apply(exports,arguments)
},{"dup":44}],269:[function(require,module,exports){
arguments[4][45][0].apply(exports,arguments)
},{"./_a-function":261,"dup":45}],270:[function(require,module,exports){
arguments[4][46][0].apply(exports,arguments)
},{"dup":46}],271:[function(require,module,exports){
arguments[4][47][0].apply(exports,arguments)
},{"./_fails":276,"dup":47}],272:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"./_global":278,"./_is-object":287,"dup":48}],273:[function(require,module,exports){
arguments[4][49][0].apply(exports,arguments)
},{"dup":49}],274:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"./_object-gops":304,"./_object-keys":307,"./_object-pie":308,"dup":50}],275:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"./_core":268,"./_ctx":269,"./_global":278,"./_hide":280,"dup":51}],276:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"dup":52}],277:[function(require,module,exports){
arguments[4][53][0].apply(exports,arguments)
},{"./_an-object":264,"./_ctx":269,"./_is-array-iter":285,"./_iter-call":288,"./_to-length":323,"./core.get-iterator-method":328,"dup":53}],278:[function(require,module,exports){
arguments[4][54][0].apply(exports,arguments)
},{"dup":54}],279:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"dup":55}],280:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"./_descriptors":271,"./_object-dp":299,"./_property-desc":309,"dup":56}],281:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"./_global":278,"dup":57}],282:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"./_descriptors":271,"./_dom-create":272,"./_fails":276,"dup":58}],283:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"dup":59}],284:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"./_cof":267,"dup":60}],285:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"./_iterators":293,"./_wks":327,"dup":61}],286:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"./_cof":267,"dup":62}],287:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"dup":63}],288:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"./_an-object":264,"dup":64}],289:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./_hide":280,"./_object-create":298,"./_property-desc":309,"./_set-to-string-tag":314,"./_wks":327,"dup":65}],290:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"./_export":275,"./_has":279,"./_hide":280,"./_iter-create":289,"./_iterators":293,"./_library":295,"./_object-gpo":305,"./_redefine":311,"./_set-to-string-tag":314,"./_wks":327,"dup":66}],291:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"./_wks":327,"dup":67}],292:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"dup":68}],293:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"dup":69}],294:[function(require,module,exports){
arguments[4][70][0].apply(exports,arguments)
},{"./_object-keys":307,"./_to-iobject":322,"dup":70}],295:[function(require,module,exports){
arguments[4][71][0].apply(exports,arguments)
},{"dup":71}],296:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"./_fails":276,"./_has":279,"./_is-object":287,"./_object-dp":299,"./_uid":326,"dup":72}],297:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./_cof":267,"./_global":278,"./_task":319,"dup":73}],298:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"./_an-object":264,"./_dom-create":272,"./_enum-bug-keys":273,"./_html":281,"./_object-dps":300,"./_shared-key":315,"dup":75}],299:[function(require,module,exports){
arguments[4][76][0].apply(exports,arguments)
},{"./_an-object":264,"./_descriptors":271,"./_ie8-dom-define":282,"./_to-primitive":325,"dup":76}],300:[function(require,module,exports){
arguments[4][77][0].apply(exports,arguments)
},{"./_an-object":264,"./_descriptors":271,"./_object-dp":299,"./_object-keys":307,"dup":77}],301:[function(require,module,exports){
arguments[4][78][0].apply(exports,arguments)
},{"./_descriptors":271,"./_has":279,"./_ie8-dom-define":282,"./_object-pie":308,"./_property-desc":309,"./_to-iobject":322,"./_to-primitive":325,"dup":78}],302:[function(require,module,exports){
arguments[4][79][0].apply(exports,arguments)
},{"./_object-gopn":303,"./_to-iobject":322,"dup":79}],303:[function(require,module,exports){
arguments[4][80][0].apply(exports,arguments)
},{"./_enum-bug-keys":273,"./_object-keys-internal":306,"dup":80}],304:[function(require,module,exports){
arguments[4][81][0].apply(exports,arguments)
},{"dup":81}],305:[function(require,module,exports){
arguments[4][82][0].apply(exports,arguments)
},{"./_has":279,"./_shared-key":315,"./_to-object":324,"dup":82}],306:[function(require,module,exports){
arguments[4][83][0].apply(exports,arguments)
},{"./_array-includes":265,"./_has":279,"./_shared-key":315,"./_to-iobject":322,"dup":83}],307:[function(require,module,exports){
arguments[4][84][0].apply(exports,arguments)
},{"./_enum-bug-keys":273,"./_object-keys-internal":306,"dup":84}],308:[function(require,module,exports){
arguments[4][85][0].apply(exports,arguments)
},{"dup":85}],309:[function(require,module,exports){
arguments[4][86][0].apply(exports,arguments)
},{"dup":86}],310:[function(require,module,exports){
arguments[4][87][0].apply(exports,arguments)
},{"./_hide":280,"dup":87}],311:[function(require,module,exports){
arguments[4][88][0].apply(exports,arguments)
},{"./_hide":280,"dup":88}],312:[function(require,module,exports){
arguments[4][89][0].apply(exports,arguments)
},{"./_an-object":264,"./_ctx":269,"./_is-object":287,"./_object-gopd":301,"dup":89}],313:[function(require,module,exports){
arguments[4][90][0].apply(exports,arguments)
},{"./_core":268,"./_descriptors":271,"./_global":278,"./_object-dp":299,"./_wks":327,"dup":90}],314:[function(require,module,exports){
arguments[4][91][0].apply(exports,arguments)
},{"./_has":279,"./_object-dp":299,"./_wks":327,"dup":91}],315:[function(require,module,exports){
arguments[4][92][0].apply(exports,arguments)
},{"./_shared":316,"./_uid":326,"dup":92}],316:[function(require,module,exports){
arguments[4][93][0].apply(exports,arguments)
},{"./_global":278,"dup":93}],317:[function(require,module,exports){
arguments[4][94][0].apply(exports,arguments)
},{"./_a-function":261,"./_an-object":264,"./_wks":327,"dup":94}],318:[function(require,module,exports){
arguments[4][95][0].apply(exports,arguments)
},{"./_defined":270,"./_to-integer":321,"dup":95}],319:[function(require,module,exports){
arguments[4][96][0].apply(exports,arguments)
},{"./_cof":267,"./_ctx":269,"./_dom-create":272,"./_global":278,"./_html":281,"./_invoke":283,"dup":96}],320:[function(require,module,exports){
arguments[4][97][0].apply(exports,arguments)
},{"./_to-integer":321,"dup":97}],321:[function(require,module,exports){
arguments[4][98][0].apply(exports,arguments)
},{"dup":98}],322:[function(require,module,exports){
arguments[4][99][0].apply(exports,arguments)
},{"./_defined":270,"./_iobject":284,"dup":99}],323:[function(require,module,exports){
arguments[4][100][0].apply(exports,arguments)
},{"./_to-integer":321,"dup":100}],324:[function(require,module,exports){
arguments[4][101][0].apply(exports,arguments)
},{"./_defined":270,"dup":101}],325:[function(require,module,exports){
arguments[4][102][0].apply(exports,arguments)
},{"./_is-object":287,"dup":102}],326:[function(require,module,exports){
arguments[4][103][0].apply(exports,arguments)
},{"dup":103}],327:[function(require,module,exports){
arguments[4][104][0].apply(exports,arguments)
},{"./_global":278,"./_shared":316,"./_uid":326,"dup":104}],328:[function(require,module,exports){
arguments[4][105][0].apply(exports,arguments)
},{"./_classof":266,"./_core":268,"./_iterators":293,"./_wks":327,"dup":105}],329:[function(require,module,exports){
arguments[4][106][0].apply(exports,arguments)
},{"./_add-to-unscopables":262,"./_iter-define":290,"./_iter-step":292,"./_iterators":293,"./_to-iobject":322,"dup":106}],330:[function(require,module,exports){
arguments[4][108][0].apply(exports,arguments)
},{"./_export":275,"./_object-create":298,"dup":108}],331:[function(require,module,exports){
arguments[4][109][0].apply(exports,arguments)
},{"./_descriptors":271,"./_export":275,"./_object-dp":299,"dup":109}],332:[function(require,module,exports){
arguments[4][110][0].apply(exports,arguments)
},{"./_export":275,"./_set-proto":312,"dup":110}],333:[function(require,module,exports){
arguments[4][111][0].apply(exports,arguments)
},{"dup":111}],334:[function(require,module,exports){
arguments[4][112][0].apply(exports,arguments)
},{"./_a-function":261,"./_an-instance":263,"./_an-object":264,"./_classof":266,"./_core":268,"./_ctx":269,"./_export":275,"./_for-of":277,"./_global":278,"./_is-object":287,"./_iter-detect":291,"./_library":295,"./_microtask":297,"./_redefine-all":310,"./_set-proto":312,"./_set-species":313,"./_set-to-string-tag":314,"./_species-constructor":317,"./_task":319,"./_wks":327,"dup":112}],335:[function(require,module,exports){
arguments[4][113][0].apply(exports,arguments)
},{"./_iter-define":290,"./_string-at":318,"dup":113}],336:[function(require,module,exports){
arguments[4][114][0].apply(exports,arguments)
},{"./_an-object":264,"./_core":268,"./_descriptors":271,"./_enum-keys":274,"./_export":275,"./_fails":276,"./_global":278,"./_has":279,"./_hide":280,"./_is-array":286,"./_keyof":294,"./_library":295,"./_meta":296,"./_object-create":298,"./_object-dp":299,"./_object-gopd":301,"./_object-gopn":303,"./_object-gopn-ext":302,"./_object-gops":304,"./_object-pie":308,"./_property-desc":309,"./_redefine":311,"./_set-to-string-tag":314,"./_shared":316,"./_to-iobject":322,"./_to-primitive":325,"./_uid":326,"./_wks":327,"dup":114}],337:[function(require,module,exports){
arguments[4][115][0].apply(exports,arguments)
},{"./_global":278,"./_hide":280,"./_iterators":293,"./_wks":327,"./es6.array.iterator":329,"dup":115}],338:[function(require,module,exports){
arguments[4][116][0].apply(exports,arguments)
},{"./runtime":339,"dup":116}],339:[function(require,module,exports){
arguments[4][117][0].apply(exports,arguments)
},{"_process":9,"babel-runtime/core-js/object/create":247,"babel-runtime/core-js/object/set-prototype-of":249,"babel-runtime/core-js/promise":250,"babel-runtime/core-js/symbol":251,"babel-runtime/core-js/symbol/iterator":252,"babel-runtime/helpers/typeof":254,"dup":117}],340:[function(require,module,exports){
'use strict';

var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

module.exports = function (str) {
	if (typeof str !== 'string') {
		throw new TypeError('Expected a string');
	}

	return str.replace(matchOperatorsRe, '\\$&');
};

},{}],341:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demoExecute;

function formatDuration(_ref) {
  var hours = _ref.hours;
  var minutes = _ref.minutes;
  var seconds = _ref.seconds;

  var text = void 0;
  if (hours && minutes && seconds) {
    text = hours + ' hours, ' + minutes + ' minutes, and ' + seconds + ' seconds';
  } else if (hours && minutes) {
    text = hours + ' hours and ' + minutes + ' minutes';
  } else if (hours && seconds) {
    text = hours + ' hours and ' + seconds + ' seconds';
  } else if (minutes && seconds) {
    text = minutes + ' minutes and ' + seconds + ' seconds';
  } else if (hours) {
    text = hours + ' hours';
  } else if (minutes) {
    text = minutes + ' minutes';
  } else if (seconds) {
    text = seconds + ' seconds';
  }

  return { text: text, argument: 'time duration' };
}

function demoExecute(result) {
  var output = [{ text: result.verb, category: 'action' }, { text: ' ' }, { text: result.setting.name, argument: 'setting' }];

  if (result.duration) {
    output.push({ text: ', wait ' }, formatDuration(result.duration), { text: ', then change it back' });
  }

  return output;
}
},{}],342:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.BooleanSettingCommand = exports.BooleanSetting = exports.Command = undefined;

var _demo = require('./demo');

var _demo2 = _interopRequireDefault(_demo);

var _moment = (typeof window !== "undefined" ? window['moment'] : typeof global !== "undefined" ? global['moment'] : null);

var _moment2 = _interopRequireDefault(_moment);

var _elliptical = require('elliptical');

var _ellipticalDatetime = require('elliptical-datetime');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

var Command = exports.Command = {
  mapResult: function mapResult(result, element) {
    return { result: result, element: element };
  },
  describe: function describe() {
    return null;
  }
};

var BooleanSetting = exports.BooleanSetting = {
  describe: function describe() {
    return null;
  }
};

function setSetting(result) {
  var invert = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

  if (result.verb === 'enable' || result.verb === 'disable' && invert) {
    result.setting.enable();
  } else if (result.verb === 'disable' || result.verb === 'enable' && invert) {
    result.setting.disable();
  } else if (result.verb === 'toggle') {
    result.setting.toggle();
  }
}

var BooleanSettingCommand = exports.BooleanSettingCommand = {
  extends: [Command],

  demoExecute: _demo2.default,

  execute: function execute(result) {
    if (result.duration) {
      var ms = _moment2.default.duration(result.duration).asMilliseconds();
      global.setTimeout(function () {
        return setSetting(result, true);
      }, ms);
    }

    setSetting(result);
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)('list', { items: [{ text: 'disable ', value: 'disable' }, { text: 'enable ', value: 'enable' }, { text: 'toggle ', value: 'toggle' }, { text: 'turn off ', value: 'disable' }, { text: 'turn on ', value: 'enable' }], limit: 3, category: 'action', id: 'verb' }),
      (0, _elliptical.createElement)(BooleanSetting, { id: 'setting' }),
      (0, _elliptical.createElement)(
        'sequence',
        { optional: true, id: 'duration' },
        (0, _elliptical.createElement)('literal', { text: ' for ', category: 'conjunction' }),
        (0, _elliptical.createElement)(_ellipticalDatetime.TimeDuration, { merge: true })
      )
    );
  }
};

var extensions = exports.extensions = [BooleanSettingCommand];
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo":341,"elliptical":231,"elliptical-datetime":14}],343:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demoExecute;
function andify(array) {
  if (array.length === 1) {
    return array;
  } else {
    return _.chain(array).slice(0, -2).map(function (item) {
      return [item, { text: ', ' }];
    }).flatten().concat(_.slice(array, -2, -1)[0]).concat({ text: ' and ' }).concat(_.slice(array, -1)[0]).value();
  }
}

function outputify(objs) {
  var outputs = _.map(objs, colorizeContact);
  return andify(outputs);
}

function colorizeContact(obj) {
  if (obj.label === 'number' && _.isString(obj.value)) {
    return { text: obj.value, argument: 'phone number' };
  } else if (obj.label === 'email' && _.isString(obj.value)) {
    return { text: obj.value, argument: 'email address' };
  } else if (obj.value.label === 'relationship') {
    return { text: obj.value.value, argument: 'relationship' };
  } else if (obj.value.label === 'contact') {
    return { text: obj.value.value, argument: 'contact' };
  }
}

function demoExecute(result) {
  if (result.verb === 'email') {
    return _.flatten([{ text: 'start', category: 'action' }, { text: ' a new email to ' }, outputify(result.to), result.subject ? [{ text: ' with ' }, { text: result.subject, argument: 'subject' }, { text: ' in the subject' }] : []]);
  } else if (result.verb === 'call') {
    return _.flatten([{ text: 'call ', category: 'action' }, outputify(result.to), { text: ' through your iPhone' }]);
  } else if (result.verb === 'facetime') {
    return _.flatten([{ text: 'call ', category: 'action' }, outputify(result.to), { text: ' in ' }, { text: 'Facetime', argument: 'application' }]);
  } else if (result.verb === 'text') {
    return _.flatten([{ text: 'open ', category: 'action' }, { text: 'Messages', argument: 'application' }, { text: ' to a conversation with ' }, outputify(result.to)]);
  }
}
},{}],344:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.Communicate = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalString = require('elliptical-string');

var _laconaCommand = require('lacona-command');

var _ellipticalPhone = require('elliptical-phone');

var _ellipticalEmail = require('elliptical-email');

var _laconaApi = require('lacona-api');

var _demo = require('./demo');

var _demo2 = _interopRequireDefault(_demo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

function mapEmailGroup(option) {
  var result = { label: 'email', value: option.result };
  return _lodash2.default.assign({}, option, { result: result });
}

var EmailGroup = {
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'repeat',
      { unique: true, separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1 }) },
      (0, _elliptical.createElement)(
        'map',
        { outbound: mapEmailGroup, skipIncomplete: true },
        (0, _elliptical.createElement)(_ellipticalEmail.EmailAddress, null)
      )
    );
  }
};

function mapNumberGroup(option) {
  var result = { label: 'number', value: option.result };
  return _lodash2.default.assign({}, option, { result: result });
}

var NumberGroup = {
  describe: function describe(_ref) {
    var props = _ref.props;

    return (0, _elliptical.createElement)(
      'repeat',
      { unique: true, separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, max: props.max }) },
      (0, _elliptical.createElement)(
        'map',
        { outbound: mapNumberGroup, skipIncomplete: true },
        (0, _elliptical.createElement)(_ellipticalPhone.PhoneNumber, null)
      )
    );
  }
};

function mapAllGroup(option) {
  var result = void 0;
  if (option.result.number) {
    result = { label: 'number', value: option.result.number };
  } else if (option.result.email) {
    result = { label: 'email', value: option.result.email };
  }

  return _lodash2.default.assign({}, option, { result: result });
}

var AllGroup = {
  describe: function describe(_ref2) {
    var props = _ref2.props;

    return (0, _elliptical.createElement)(
      'repeat',
      { unique: true, separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, max: props.max }) },
      (0, _elliptical.createElement)(
        'map',
        { outbound: mapAllGroup, skipIncomplete: true },
        (0, _elliptical.createElement)(
          'choice',
          null,
          (0, _elliptical.createElement)(_ellipticalPhone.PhoneNumber, { id: 'number' }),
          (0, _elliptical.createElement)(_ellipticalEmail.EmailAddress, { id: 'email' })
        )
      )
    );
  }
};

function urlify(to) {
  var fn = arguments.length <= 1 || arguments[1] === undefined ? _lodash2.default.identity : arguments[1];

  return _lodash2.default.chain(to).map('value').map(fn).map(encodeURIComponent).map(function (item) {
    return item.replace(/%2B/g, '+');
  }).join(',').value();
}

var Communicate = exports.Communicate = {
  extends: [_laconaCommand.Command],

  demoExecute: _demo2.default,

  execute: function execute(result) {
    var url = void 0;

    if (result.verb === 'email') {
      if (result.subject) {
        var subject = encodeURIComponent(result.subject);
        url = 'mailto:' + urlify(result.to) + '?subject=' + subject;
      } else {
        url = 'mailto:' + urlify(result.to);
      }
    } else if (result.verb === 'call') {
      url = 'tel://' + urlify(result.to);
    } else if (result.verb === 'facetime') {
      url = 'facetime://' + urlify(result.to);
    } else if (result.verb === 'text') {
      url = 'imessage://' + urlify(result.to, function (item) {
        return item.replace(/[\(\)\s-]/g, '');
      });
    }

    (0, _laconaApi.openURL)({ url: url });
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['email ', 'send an email to ', 'send email to ', 'shoot an email to '], category: 'action', id: 'verb', value: 'email', limit: 1 }),
        (0, _elliptical.createElement)(EmailGroup, { id: 'to' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['send '], id: 'verb', value: 'email', category: 'action', limit: 1 }),
        (0, _elliptical.createElement)(EmailGroup, { id: 'to' }),
        (0, _elliptical.createElement)('literal', { text: ' an email' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['email ', 'send '], id: 'verb', value: 'email', category: 'action', limit: 1 }),
        (0, _elliptical.createElement)(_ellipticalString.String, { argument: 'subject', id: 'subject', limit: 1 }),
        (0, _elliptical.createElement)('literal', { text: ' to ', category: 'conjunction' }),
        (0, _elliptical.createElement)(EmailGroup, { id: 'to' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['email ', 'send an email to ', 'send email to ', 'shoot an email to '], id: 'verb', value: 'email', category: 'action', limit: 1 }),
        (0, _elliptical.createElement)(EmailGroup, { id: 'to' }),
        (0, _elliptical.createElement)(
          'choice',
          { limit: 1 },
          (0, _elliptical.createElement)('literal', { text: ' about ' }),
          (0, _elliptical.createElement)('literal', { text: ' ' })
        ),
        (0, _elliptical.createElement)(_ellipticalString.String, { argument: 'subject', id: 'subject', limit: 1 })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['send '], category: 'action', limit: 1 }),
        (0, _elliptical.createElement)(EmailGroup, { id: 'to' }),
        (0, _elliptical.createElement)('list', { limit: 1, category: 'action', items: [' an email about ', ' an email ', ' email about ', ' email '], id: 'verb', value: 'email' }),
        (0, _elliptical.createElement)(_ellipticalString.String, { argument: 'subject', id: 'subject', limit: 1 })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['call ', 'ring ', 'call up ', 'ring up '], category: 'action', limit: 1, id: 'verb', value: 'call' }),
        (0, _elliptical.createElement)(NumberGroup, { id: 'to', max: 1 })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'facetime ', category: 'action', id: 'verb', value: 'facetime' }),
        (0, _elliptical.createElement)(AllGroup, { max: 1, id: 'to' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['text ', 'iMessage ', 'shoot a text to ', 'send a text to '], limit: 1, category: 'action', id: 'verb', value: 'text' }),
        (0, _elliptical.createElement)(AllGroup, { id: 'to' })
      )
    );
  }
};

var extensions = exports.extensions = [Communicate];
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo":343,"elliptical":231,"elliptical-email":123,"elliptical-phone":222,"elliptical-string":223,"lacona-api":345,"lacona-command":342}],345:[function(require,module,exports){
(function (process,global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; }; /** @jsx createElement */


exports.isOSX = isOSX;
exports.isDemo = isDemo;
exports.openURL = openURL;
exports.openFile = openFile;
exports.createEvent = createEvent;
exports.createReminder = createReminder;
exports.showNotification = showNotification;
exports.fetchApplications = fetchApplications;
exports.launchApplication = launchApplication;
exports.openURLInApplication = openURLInApplication;
exports.openFileInApplication = openFileInApplication;
exports.bundleIdForApplication = bundleIdForApplication;
exports.fetchBookmarks = fetchBookmarks;
exports.fetchUserContact = fetchUserContact;
exports.fetchContacts = fetchContacts;
exports.searchFiles = searchFiles;
exports.fetchDirectoryContents = fetchDirectoryContents;
exports.userHome = userHome;
exports.fetchRunningApplications = fetchRunningApplications;
exports.activateApplication = activateApplication;
exports.hideApplication = hideApplication;
exports.closeApplicationWindows = closeApplicationWindows;
exports.quitApplication = quitApplication;
exports.fetchOpenWindows = fetchOpenWindows;
exports.closeOpenWindow = closeOpenWindow;
exports.activateOpenWindow = activateOpenWindow;
exports.fetchBrowserTabs = fetchBrowserTabs;
exports.activateBrowserTab = activateBrowserTab;
exports.closeBrowserTab = closeBrowserTab;
exports.fetchPreferencePanes = fetchPreferencePanes;
exports.setBluetooth = setBluetooth;
exports.checkBluetooth = checkBluetooth;
exports.setDarkMode = setDarkMode;
exports.checkDarkMode = checkDarkMode;
exports.setWifi = setWifi;
exports.checkWifi = checkWifi;
exports.setDoNotDisturb = setDoNotDisturb;
exports.checkDoNotDisturb = checkDoNotDisturb;
exports.setVolume = setVolume;
exports.checkVolume = checkVolume;
exports.shutdown = shutdown;
exports.restart = restart;
exports.logOut = logOut;
exports.sleep = sleep;
exports.lock = lock;
exports.hibernate = hibernate;
exports.turnOffDisplay = turnOffDisplay;
exports.turnOnScreensaver = turnOnScreensaver;
exports.emptyTrash = emptyTrash;
exports.fetchMountedVolumes = fetchMountedVolumes;
exports.unmountVolume = unmountVolume;
exports.unmountAllVolumes = unmountAllVolumes;
exports.fetchMusic = fetchMusic;
exports.playSongIds = playSongIds;
exports.musicPlay = musicPlay;
exports.musicPause = musicPause;
exports.musicNext = musicNext;
exports.musicPrevious = musicPrevious;
exports.musicStop = musicStop;
exports.runApplescript = runApplescript;
exports.callSystem = callSystem;
exports.Config = Config;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _map = require('rxjs/operator/map');

var _Observable = require('rxjs/Observable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var demoConfig = {
  webSearch: {
    searchEngines: [{ name: 'Google', url: 'https://www.google.com/search?q=${query}' }, { name: 'Google Images', url: 'https://www.google.com/search?q=${query}&tbm=isch' }, { name: 'Google Maps', url: 'https://www.google.com/maps?q=${query}' }, { name: 'Gmail', url: 'https://www.google.com/search?q=${query}' }, { name: 'Google Mail', url: 'http://mail.google.com/mail/u/0/#search/${query}' }, { name: 'Google Inbox', url: 'https://inbox.google.com/search/${query}' }, { name: 'Google Drive', url: 'https://drive.google.com/drive/u/0/#search?q=${query}' }, { name: 'Maps', url: 'http://maps.apple.com/?q=${query}' }, { name: 'Twitter', url: 'https://twitter.com/search?q=${query}' }, { name: 'Facebook', url: 'https://www.facebook.com/search/results.php?q=${query}' }, { name: 'LinkedIn', url: 'https://www.linkedin.com/vsearch/p?keywords=${query}' }, { name: 'Youtube', url: 'https://www.youtube.com/results?search_query=${query}' }, { name: 'Wikipedia', url: 'https://wikipedia.org/wiki/Special:Search/${query}' }, { name: 'Amazon', url: 'http://www.amazon.com/s?url=search-alias=aps&field-keywords=${query}&tag=lacona-20' }, { name: 'eBay', url: 'http://shop.ebay.com/?_nkw=${query}' }, { name: 'IMDb', url: 'http://www.imdb.com/find?s=all&q=${query}' }, { name: 'Rotten Tomatoes', url: 'http://www.rottentomatoes.com/search/?search=${query}' }, { name: 'Bing', url: 'http://www.bing.com/search?q=${query}' }, { name: 'Yahoo', url: 'https://search.yahoo.com/search?p=${query}' }, { name: 'Ask', url: 'http://www.ask.com/web?q=${query}' }, { name: 'Flickr', url: 'https://www.flickr.com/search/?q=${query}&w=all' }, { name: 'Wolfram|Alpha', url: 'http://www.wolframalpha.com/input/?i=${query}' }, { name: 'Yubnub', url: 'http://www.yubnub.org/parser/parse?command=${query}' }, { name: 'DuckDuckGo', url: 'https://duckduckgo.com/?q=${query}' }]
  },
  applications: {
    searchDirectories: [],
    applications: []
  }
};

function isOSX() {
  return process.platform === 'darwin' || !isDemo();
}

function isDemo() {
  return process.env.LACONA_ENV === 'demo';
}

/* Open */

function openURL(_ref) {
  var url = _ref.url;

  if (isOSX()) {
    global.openURL(url);
  }
}

function openFile(_ref2) {
  var path = _ref2.path;

  if (isOSX()) {
    global.openFile(path);
  }
}

/* Events */

function createEvent(_ref3) {
  var title = _ref3.title;
  var start = _ref3.start;
  var end = _ref3.end;
  var allDay = _ref3.allDay;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.createEvent(title, start, end, allDay, done);
  }
}

function createReminder(_ref4) {
  var title = _ref4.title;
  var date = _ref4.date;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.createReminder(title, date, done);
  }
}

/* Notifications */

function showNotification(_ref5) {
  var title = _ref5.title;
  var subtitle = _ref5.subtitle;
  var content = _ref5.content;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.notify(title, subtitle, content, done);
  }
}

/* Applications */

function fetchApplications(_ref6) {
  var directories = _ref6.directories;
  var appPaths = _ref6.appPaths;

  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.applicatons);
    });
  }

  if (isOSX()) {
    var _ret = function () {
      var _context;

      var tilde = userHome();
      var trueDirectories = _lodash2.default.map(directories, function (dir) {
        return dir.replace(/^~/, tilde);
      });
      var truePaths = _lodash2.default.map(appPaths, function (path) {
        return path.replace(/^~/, tilde);
      });
      return {
        v: (_context = querySpotlight({
          directories: trueDirectories,
          query: "kMDItemContentTypeTree == 'com.apple.application'",
          attributes: ['kMDItemDisplayName', 'kMDItemCFBundleIdentifier']
        }), _map.map).call(_context, function (data) {
          return _lodash2.default.map(data, function (_ref7) {
            var kMDItemDisplayName = _ref7.kMDItemDisplayName;
            var kMDItemCFBundleIdentifier = _ref7.kMDItemCFBundleIdentifier;
            return {
              name: kMDItemDisplayName,
              bundleId: kMDItemCFBundleIdentifier
            };
          });
        })
      };
    }();

    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
  }
}

function launchApplication(_ref8) {
  var bundleId = _ref8.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.launchApplication(bundleId, done);
  }
}

function openURLInApplication(_ref9) {
  var url = _ref9.url;
  var bundleId = _ref9.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.openURLInApplication(url, bundleId, done);
  }
}

function openFileInApplication(_ref10) {
  var path = _ref10.path;
  var bundleId = _ref10.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.openFileInApplication(path, bundleId, done);
  }
}

function bundleIdForApplication(_ref11) {
  var name = _ref11.name;

  return global.bundleIdForApplicationName(name);
}

/* Bookmarks */

function fetchBookmarks() {
  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.bookmarks);
    });
  }

  if (isOSX()) {
    var _context2;

    return (_context2 = querySpotlight({
      query: "kMDItemContentTypeTree = 'com.apple.safari.bookmark'",
      attributes: ['kMDItemDisplayName', 'kMDItemURL']
    }), _map.map).call(_context2, function (data) {
      return _lodash2.default.map(data, function (_ref12) {
        var kMDItemDisplayName = _ref12.kMDItemDisplayName;
        var kMDItemURL = _ref12.kMDItemURL;
        return {
          name: kMDItemDisplayName,
          url: kMDItemURL
        };
      });
    });
  }
}

/* Contacts */

function fetchUserContact() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.userContact);
  }

  if (isOSX()) {
    return global.userContact(done);
  }
}

function fetchContacts() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.contacts);
  }

  if (isOSX()) {
    return global.allContacts(done);
  }
}

/* Files */

function searchFiles(_ref13) {
  var query = _ref13.query;

  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.spotlightFiles);
    });
  }

  if (isOSX()) {
    var _context3;

    var escapedQuery = query.replace(/\\/g, '\\\\').replace(/"/g, '\\"');

    return (_context3 = querySpotlight({
      query: 'kMDItemFSName BEGINSWITH[cd] "' + escapedQuery + '" AND ' + 'kMDItemSupportFileType != "MDSystemFile" AND ' + 'kMDItemContentTypeTree != "com.apple.application" AND ' + 'kMDItemContentTypeTree != "com.apple.application-bundle" AND ' + 'kMDItemContentTypeTree != "com.apple.safari.bookmark" AND ' + 'kMDItemContentTypeTree != "public.contact" AND ' + 'kMDItemContentTypeTree != "com.apple.safari.history" AND ' + 'kMDItemContentTypeTree != "public.calendar-event" AND ' + 'kMDItemContentTypeTree != "com.apple.ichat.transcript"',
      attributes: ['kMDItemPath', 'kMDItemContentType'],
      limit: 10
    }), _map.map).call(_context3, function (data) {
      return _lodash2.default.map(data, function (_ref14) {
        var kMDItemPath = _ref14.kMDItemPath;
        var kMDItemContentType = _ref14.kMDItemContentType;
        return {
          path: kMDItemPath,
          contentType: kMDItemContentType
        };
      });
    });
  }
}

function fetchDirectoryContents(_ref15) {
  var path = _ref15.path;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isDemo()) {
    if (_lodash2.default.startsWith(path, '~')) {
      return done(null, global.demoData.rootFiles['/Users/LaconaUser' + path.slice(1)]);
    } else {
      return done(null, global.demoData.rootFiles[path]);
    }
  }

  if (isOSX()) {
    global.getDirectoryContents(path, done);
  }
}

function userHome() {
  if (isDemo()) {
    return '/Users/LaconaUser';
  }

  if (isOSX()) {
    return global.getUserHome();
  }
}

/* Running Apps */

function fetchRunningApplications() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.applications);
  }

  if (isOSX()) {
    return global.allRunningApps(done);
  }
}

function activateApplication(_ref16) {
  var bundleId = _ref16.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    return global.launchApplication(bundleId, done);
  }
}

function hideApplication(_ref17) {
  var bundleId = _ref17.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    return global.hideApplication(bundleId, done);
  }
}

function closeApplicationWindows(_ref18) {
  var bundleId = _ref18.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script = '\n      tell application "System Events"\n        set proc to first process whose background only is false and bundle identifier is "' + bundleId + '"\n        repeat with win in proc\'s windows\n          set butt to (win\'s first button whose subrole is "AXCloseButton")\n          click butt\n        end repeat\n      end tell\n    ';
    runApplescript({ script: _script }, done);
  }
}

function quitApplication(_ref19) {
  var bundleId = _ref19.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.quitApplication(bundleId, function () {});
  }
}

/* Open Windows */

var openWindowFetchScript = '\n  on run\n  \ttell application "System Events"\n  \t\tset allWindows to {}\n  \t\trepeat with proc in (processes where background only is false)\n  \t\t\trepeat with win in proc\'s windows\n  \t\t\t\tif win\'s subrole is "AXStandardWindow" then\n  \t\t\t\t\tset end of allWindows to {{proc\'s id, win\'s name}, win\'s title, my hasCloseButton(win)}\n  \t\t\t\tend if\n  \t\t\tend repeat\n  \t\tend repeat\n  \tend tell\n  \treturn allWindows\n  end run\n\n  on hasCloseButton(win)\n  \ttell application "System Events"\n  \t\tif win\'s subrole is "AXStandardWindow" then\n  \t\t\trepeat with butt in win\'s buttons\n  \t\t\t\tif butt\'s subrole is "AXCloseButton" then\n  \t\t\t\t\treturn true\n  \t\t\t\tend if\n  \t\t\tend repeat\n  \t\tend if\n  \t\treturn false\n  \tend tell\n  end hasCloseButton\n';

function fetchOpenWindows() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, []);
  }

  if (isOSX()) {
    runApplescript({ script: openWindowFetchScript }, function (err, data) {
      if (err) {
        return done(err);
      } else {
        var result = _lodash2.default.map(data, _lodash2.default.partial(_lodash2.default.zipObject, ['id', 'name', 'closeable'], _lodash2.default));
        return done(null, result);
      }
    });
  }
}

function closeOpenWindow(_ref20) {
  var id = _ref20.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {}
}

function activateOpenWindow(_ref21) {
  var id = _ref21.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _id = _slicedToArray(id, 2);

    var procId = _id[0];
    var name = _id[1];


    var _script2 = '\n      tell application "System Events"\n        set proc to first process whose background only is false and id is ' + procId + '\n        set win to proc\'s first window whose name is "' + name + '"\n        perform action "AXRaise" of win\n        set proc\'s frontmost to true\n      end tell\n    ';

    runApplescript({ script: _script2 }, done);
  }
}

/* Browser Tabs */

var browserFetchScript = '\n  -- set chromeTabs to {}\n  set safariTabs to {}\n\n  -- if is_running("Google Chrome") then\n    -- set chromeTabs to run script "\n      -- set allTabs to {}\n      -- tell application \\"Google Chrome\\"\n        -- repeat with win in every window\n          -- repeat with t in win\'s tabs\n            -- set end of allTabs to {\\"Google Chrome\\", {\\"Google Chrome\\", t\'s id}, title of t}\n          -- end repeat\n        -- end repeat\n      -- end tell\n      -- return allTabs\n    -- "\n  -- end if\n\n  if is_running("Safari") then\n    set safariTabs to run script "\n      set allTabs to {}\n      tell application \\"Safari\\"\n        repeat with win in (windows where visible is true)\n          repeat with t in win\'s tabs\n            set end of allTabs to {\\"Safari\\", {\\"Safari\\", {win\'s index, t\'s index}}, t\'s name}\n          end repeat\n        end repeat\n      end tell\n      return allTabs\n    "\n  end if\n\n  on is_running(appName)\n    tell application "System Events" to (name of processes) contains appName\n  end is_running\n\n  -- return chromeTabs & safariTabs\n  return safariTabs\n';

function fetchBrowserTabs() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, []);
  }

  if (isOSX()) {
    runApplescript({ script: browserFetchScript }, function (err, data) {
      if (err) {
        return done(err);
      } else {
        var result = _lodash2.default.map(data, _lodash2.default.partial(_lodash2.default.zipObject, ['appName', 'id', 'name'], _lodash2.default));
        return done(null, result);
      }
    });
  }
}

function activateBrowserTab(id) {
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _id3 = _slicedToArray(_id2, 2);

    var appName = _id3[0];
    var _id2 = _id3[1];

    if (appName === 'Google Chrome') {
      script = '\n        tell application "Google Chrome"\n          repeat with wi from 1 to count windows\n            repeat with ti from 1 to count (window wi\'s tabs)\n              if id of window wi\'s tab ti is ' + _id2 + ' then\n                set theTab to ti\n                set theWin to wi\n              end if\n            end repeat\n          end repeat\n\n          set window theWin\'s active tab index to theTab\n          set window theWin\'s index to 1\n          activate\n        end tell\n      ';
      runApplescript({ script: script }, done);
    } else if (appName === 'Safari') {
      // TODO THIS DOES NOT WORK

      var _id4 = _slicedToArray(_id2, 2);

      var winId = _id4[0];
      var tabId = _id4[1];

      script = '\n        tell application "Safari"\n          activate\n          set win to window ' + winId + '\n          set win\'s current tab to win\'s tab ' + tabId + '\n          set win\'s index to 1\n        end tell\n      ';
      runApplescript({ script: script }, done);
    }
  }
}

function closeBrowserTab(_ref22) {
  var id = _ref22.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {}
}

/* Preference Panes */

function fetchPreferencePanes() {
  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.preferencePanes);
    });
  }

  if (isOSX()) {
    var _context4;

    return (_context4 = querySpotlight({
      query: "kMDItemContentType == 'com.apple.systempreference.prefpane'",
      attributes: ['kMDItemDisplayName', 'kMDItemPath']
    }), _map.map).call(_context4, function (data) {
      return _lodash2.default.map(data, function (_ref23) {
        var kMDItemDisplayName = _ref23.kMDItemDisplayName;
        var kMDItemPath = _ref23.kMDItemPath;
        return { name: kMDItemDisplayName, path: kMDItemPath };
      });
    });
  }
}

/* Settings */

function setBluetooth(_ref24) {
  var enabled = _ref24.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.setBluetoothEnabled(enabled, done);
  }
}

function checkBluetooth() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    global.checkBluetoothEnabled(function (err, enabled) {
      err ? done(err) : done(null, { enabled: enabled });
    });
  }
}

function setDarkMode(_ref25) {
  var enabled = _ref25.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.setDarkModeEnabled(enabled, done);
  }
}

function checkDarkMode() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    global.checkDarkModeEnabled(function (err, enabled) {
      err ? done(err) : done(null, { enabled: enabled });
    });
  }
}
function setWifi(_ref26) {
  var enabled = _ref26.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    callSystem({
      command: '/usr/sbin/networksetup',
      args: ['-setairportpower', 'en0', enabled ? 'on' : 'off']
    }, done);
  }
}

function checkWifi() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/usr/sbin/networksetup',
      args: ['-getairportpower', 'en0']
    }, function (err, results) {
      if (err) {
        done(err);
      } else {
        var enabled = _lodash2.default.includes(results, 'On');
        done(null, { enabled: enabled });
      }
    });
  }
}

function toggleDoNotDisturbEnabled(done) {
  var script = '\n    tell application "System Events" to tell process "SystemUIServer"\n      key down option\n      click menu bar item 1 of menu bar 2\n      key up option\n    end tell\n  ';

  runApplescript({ script: script }, done);
}

function setDoNotDisturb(_ref27) {
  var enabled = _ref27.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    if (enabled) {
      callSystem({
        command: '/bin/bash',
        args: ['-c', 'defaults -currentHost write ~/Library/Preferences/ByHost/com.apple.notificationcenterui doNotDisturb -boolean true; defaults -currentHost write ~/Library/Preferences/ByHost/com.apple.notificationcenterui doNotDisturbDate -date "`date -u +\\"%Y-%m-%d %H:%M:%S +000\\"`"; killall NotificationCenter']
      }, done);
    } else {
      callSystem({
        command: '/bin/bash',
        args: ['-c', 'defaults -currentHost write ~/Library/Preferences/ByHost/com.apple.notificationcenterui doNotDisturb -boolean false; killall NotificationCenter']
      }, done);
    }
  }
}

function checkDoNotDisturb() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/usr/bin/defaults',
      args: ['-currentHost', 'read', userHome() + '/Library/Preferences/ByHost/com.apple.notificationcenterui', 'doNotDisturb']
    }, function (err, results) {
      if (err) {
        done(err);
      } else {
        var enabled = _lodash2.default.contains(results, '1');
        done(null, { enabled: enabled });
      }
    });
  }
}

function setVolume(_ref28) {
  var mute = _ref28.mute;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script3 = 'set volume ' + (mute ? 'with' : 'without') + ' output muted';
    runApplescript({ script: _script3 }, done);
  }
}

function checkVolume() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    var _script4 = 'output muted of (get volume settings)';
    runApplescript({ script: _script4 }, function (err, output) {
      if (err) {
        done(err);
      } else {
        done(null, { mute: output });
      }
    });
  }
}

function shutdown() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to shut down' }, done);
  }
}

function restart() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to restart' }, done);
  }
}

function logOut() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to log out' }, done);
  }
}

function sleep() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to sleep' }, done);
  }
}

function lock() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/System/Library/CoreServices/Menu Extras/User.menu/Contents/Resources/CGSession',
      args: ['-suspend']
    }, done);
  }
}

function hibernate() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];
}

function turnOffDisplay() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/usr/bin/pmset',
      args: ['displaysleepnow']
    }, done);
  }
}

function turnOnScreensaver() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to start current screen saver' }, done);
  }
}

function emptyTrash() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "Finder" to empty the trash' }, done);
  }
}

/* Mounted Volumes */

function fetchMountedVolumes() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.volumes);
  }

  if (isOSX()) {
    return global.mountedVolumes(done);
  }
}

function unmountVolume(_ref29) {
  var id = _ref29.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script5 = 'tell application "Finder" to eject "' + id + '"';
    runApplescript({ script: _script5 }, done);
  }
}

function unmountAllVolumes(_) {
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script6 = 'tell application "Finder" to eject the disks';
    runApplescript({ script: _script6 }, done);
  }
}

/* Music */

function simplifyArtist(item) {
  var albumArtist = item.albumArtist;
  var artist = item.artist;

  item.artist = albumArtist || artist;
  delete item.albumArtist;
}

function sortStringAsInteger(key) {
  return function (item) {
    return parseInt(item[key], 10);
  };
}

function arrangeOSXMusic(arrays) {
  return _lodash2.default.chain(arrays).thru(_lodash2.default.spread(_lodash2.default.zip)).map(_lodash2.default.partial(_lodash2.default.zipObject, ['name', 'album', 'artist', 'albumArtist', 'composer', 'genre', 'year', 'discNumber', 'trackNumber', 'id'])).tap(function (items) {
    return _lodash2.default.forEach(items, simplifyArtist);
  }).sortBy([simplifyArtist, sortStringAsInteger('year'), 'album', sortStringAsInteger('discNumber'), sortStringAsInteger('trackNumber'), sortStringAsInteger('id')]).value();
}

function fetchMusic(done) {
  if (isDemo()) {
    return done(null, global.demoData.music);
  }

  if (isOSX()) {
    var _script7 = 'tell application "iTunes" to get {name, album, artist, album artist, composer, genre, year, disc number, track number, database ID} of every track of first library playlist';

    runApplescript({ script: _script7 }, function (err, arrays) {
      if (err) {
        return done(err);
      }

      var arranged = arrangeOSXMusic(arrays);

      done(null, arranged);
    });
  }
}

function playSongIds(_ref30) {
  var ids = _ref30.ids;

  var script = '\n    tell application "iTunes"\n      if user playlist "Lacona Playlist" exists then\n        try\n          delete user playlist "Lacona Playlist"\n        end try\n      end if\n\n      make new user playlist with properties {name:"Lacona Playlist", shuffle: false}\n\n      repeat with tid in {' + ids.join(',') + '}\n        set trk to (some track of first user playlist whose database ID is tid)\n        duplicate trk to end of user playlist "Lacona Playlist"\n      end repeat\n\n      play user playlist "Lacona Playlist"\n    end tell\n  ';
  runApplescript({ script: script });
}

function musicPlay() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to play' });
  }
}

function musicPause() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to pause' });
  }
}

function musicNext() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to next track' });
  }
}

function musicPrevious() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to previous track' });
  }
}

function musicStop() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to stop' });
  }
}

/* OSX specific */

function runApplescript(_ref31) {
  var script = _ref31.script;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.applescript(script, done);
  }
}

function querySpotlight(_ref32) {
  var _ref32$query = _ref32.query;
  var query = _ref32$query === undefined ? '' : _ref32$query;
  var _ref32$attributes = _ref32.attributes;
  var attributes = _ref32$attributes === undefined ? [] : _ref32$attributes;
  var _ref32$directories = _ref32.directories;
  var directories = _ref32$directories === undefined ? [] : _ref32$directories;
  var _ref32$limit = _ref32.limit;
  var limit = _ref32$limit === undefined ? 0 : _ref32$limit;
  var _ref32$liveUpdate = _ref32.liveUpdate;
  var liveUpdate = _ref32$liveUpdate === undefined ? false : _ref32$liveUpdate;

  return new _Observable.Observable(function (observer) {
    observer.next([]);

    var queryId = global.spotlight(query, attributes, directories, limit, liveUpdate, function (err, data) {
      if (err) {
        observer.error(err);
      } else {
        observer.next(data);
      }
    });

    return function () {
      return global.cancelQuery(queryId);
    };
  });
}

function callSystem(_ref33, done) {
  var command = _ref33.command;
  var _ref33$args = _ref33.args;
  var args = _ref33$args === undefined ? [] : _ref33$args;

  global.system(command, args, done);
}

/* Config and Context */

var subscription = new _Observable.Observable(function (observer) {
  var subscriptionId = void 0;

  if (isDemo()) {
    observer.next(global.demoConfig);
  } else if (isOSX()) {
    var _ret2 = function () {
      var _global$subscribeToCh = global.subscribeToChanges(function (value) {
        observer.next(value);
      });

      var subscriptionId = _global$subscribeToCh.subscriptionId;
      var value = _global$subscribeToCh.value;

      observer.next(value);
      return {
        v: function v() {
          global.removeChangeSubscription(subscriptionId);
        }
      };
    }();

    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
  }
});

function Config(_ref34) {
  var props = _ref34.props;

  return _map.map.call(subscription, function (x) {
    return x.config[props.property];
  });
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":9,"rxjs/Observable":550,"rxjs/operator/map":560}],346:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.eventDemoExecute = eventDemoExecute;
exports.reminderDemoExecute = reminderDemoExecute;

function formatRange(obj) {
  var start = moment(obj.start);
  var end = moment(obj.end);

  if (obj.allDay) {
    return [{ text: 'all day ' }, { text: start.format('dddd, MMMM Do, YYYY'), argument: 'date' }, { text: ' to all day ' }, { text: end.format('dddd, MMMM Do, YYYY'), argument: 'date' }];
  } else if (end.diff(start, 'days') === 0) {
    return [{ text: start.format('dddd, MMMM Do, YYYY'), argument: 'date' }, { text: ' at ' }, { text: start.format('h:mma'), argument: 'time' }, { text: ' to ' }, { text: end.format('h:mma'), argument: 'time' }];
  } else {
    return [{ text: start.format('dddd, MMMM Do, YYYY'), argument: 'date' }, { text: ' at ' }, { text: start.format('h:mma'), argument: 'time' }, { text: ' to ' }, { text: end.format('dddd, MMMM Do, YYYY'), argument: 'date' }, { text: ' at ' }, { text: end.format('h:mma'), argument: 'time' }];
  }
}

function eventDemoExecute(result) {
  return _.flatten([{ text: 'create an event', category: 'action' }, { text: ' called ' }, { text: result.title, argument: 'calendar event' }, result.location ? [{ text: ' with location ' }, { text: result.location, argument: 'location' }] : [], { text: ' ' }, formatRange(result.range)]);
}

function reminderDemoExecute(result) {
  var datetime = result.datetime ? [{ text: ' due ' }].concat(formatDateTime(result.datetime)) : { text: ' without a due date' };

  return _.flatten([{ text: 'create a reminder', category: 'action' }, { text: ' called ' }, { text: result.title, argument: 'reminder title' }, datetime]);
}
},{}],347:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.CreateReminder = exports.ScheduleEvent = undefined;

var _elliptical = require('elliptical');

var _laconaApi = require('lacona-api');

var _ellipticalString = require('elliptical-string');

var _ellipticalDatetime = require('elliptical-datetime');

var _laconaCommand = require('lacona-command');

var _moment = (typeof window !== "undefined" ? window['moment'] : typeof global !== "undefined" ? global['moment'] : null);

var _moment2 = _interopRequireDefault(_moment);

var _demo = require('./demo');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// class LocationWithAt extends Phrase {
//   describe () {
//     return (
//       <sequence>
//         <list items={[' at ', ' on ', ' in ']} limit={1} category='conjunction' />
//         <String argument='location' merge splitOn=' ' limit={1} />
//       </sequence>
//     )
//   }
// }

function displayRange(_ref) {
  var start = _ref.start;
  var end = _ref.end;
  var allDay = _ref.allDay;

  var startM = (0, _moment2.default)(start);
  var endM = (0, _moment2.default)(end);

  if (allDay) {
    if (start === end) {
      return 'All Day ' + startM.format('LL');
    } else {
      return 'All Day ' + startM.format('LL') + ' to ' + endM.format('LL');
    }
  } else {
    if (endM.isAfter(startM, 'day')) {
      return startM.format('LLL') + ' to ' + endM.format('LLL');
    } else {
      return startM.format('LL') + ' ' + startM.format('LT') + ' to ' + endM.format('LT');
    }
  }
} /** @jsx createElement */

var ScheduleEvent = exports.ScheduleEvent = {
  extends: [_laconaCommand.Command],

  execute: function execute(result) {
    (0, _laconaApi.createEvent)({
      title: result.title,
      // location: result.location,
      start: result.range.start,
      end: result.range.end,
      allDay: result.range.allDay
    }, function (err) {
      if (err) {
        (0, _laconaApi.showNotification)({ title: 'Failed to Create Event' });
      } else {
        (0, _laconaApi.showNotification)({
          title: 'Created Event',
          subtitle: result.title,
          content: displayRange(result.range)
        });
      }
    });
  },


  demoExecute: _demo.eventDemoExecute,

  describe: function describe() {
    return (0, _elliptical.createElement)(
      'map',
      { 'function': function _function(result) {
          return new ScheduleEventObject(result);
        } },
      (0, _elliptical.createElement)(
        'sequence',
        { unique: true },
        (0, _elliptical.createElement)('list', { items: ['schedule ', 'create an event ', 'create event ', 'add an event ', 'add event '], limit: 1, category: 'action', id: 'verb', value: 'schedule' }),
        (0, _elliptical.createElement)(_ellipticalString.String, { limit: 1, splitOn: ' ', argument: 'calendar event', id: 'title' }),
        (0, _elliptical.createElement)('literal', { text: ' ', category: 'conjunction' }),
        (0, _elliptical.createElement)('literal', { text: 'for ', category: 'conjunction', optional: true, preferred: true, limited: true }),
        (0, _elliptical.createElement)(_ellipticalDatetime.Range, { id: 'range', prepositions: true, past: false, seconds: false })
      )
    );
  }
};

function formatDateTime(datetime) {
  var datetimeMoment = (0, _moment2.default)(datetime);
  return [{ text: datetimeMoment.format('dddd, MMMM Do, YYYY'), argument: 'date' }, { text: ' at ' }, { text: datetimeMoment.format('h:mma'), argument: 'time' }];
}

var CreateReminder = exports.CreateReminder = {
  extends: [_laconaCommand.Command],

  demoExecute: _demo.reminderDemoExecute,

  execute: function execute(result) {
    (0, _laconaApi.createReminder)({ title: result.title, date: result.datetime }, function (err) {
      if (err) {
        (0, _laconaApi.showNotification)({ title: 'Failed to Create Reminder' });
      } else {
        if (result.datetime) {
          (0, _laconaApi.showNotification)({ title: 'Created Reminder', subtitle: result.title, content: '' + (0, _moment2.default)(result.datetime).format('LLL') });
        } else {
          (0, _laconaApi.showNotification)({ title: 'Created Reminder', subtitle: result.title });
        }
      }
    });
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'map',
      { 'function': function _function(result) {
          return new CreateReminderObject(result);
        } },
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['remind me to ', 'create reminder ', 'create a reminder ', 'add a reminder ', 'add reminder '], limit: 1, category: 'action', id: 'verb', value: 'remind' }),
        (0, _elliptical.createElement)(
          'choice',
          { merge: true },
          (0, _elliptical.createElement)(_ellipticalString.String, { argument: 'reminder title', id: 'title', consumeAll: true }),
          (0, _elliptical.createElement)(
            'sequence',
            null,
            (0, _elliptical.createElement)(_ellipticalString.String, { limit: 1, argument: 'reminder title', id: 'title', splitOn: ' ' }),
            (0, _elliptical.createElement)('literal', { text: ' ', category: 'conjunction' }),
            (0, _elliptical.createElement)(_ellipticalDatetime.DateTime, { id: 'datetime', past: false, prepositions: true, seconds: false })
          )
        )
      )
    );
  }
};

var extensions = exports.extensions = [ScheduleEvent, CreateReminder];
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo":346,"elliptical":231,"elliptical-datetime":14,"elliptical-string":223,"lacona-api":348,"lacona-command":342}],348:[function(require,module,exports){
arguments[4][345][0].apply(exports,arguments)
},{"_process":9,"dup":345,"rxjs/Observable":550,"rxjs/operator/map":560}],349:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demoExecute;
function andify(array) {
  var separator = arguments.length <= 1 || arguments[1] === undefined ? ', ' : arguments[1];

  if (array.length === 1) {
    return array;
  } else if (array.length === 2) {
    return [array[0], { text: ' and ' }, array[1]];
  } else {
    return _.chain(array).slice(0, -2).map(function (item) {
      return [item, { text: separator }];
    }).flatten().concat(_.slice(array, -2, -1)[0]).concat({ text: separator + 'and ' }).concat(_.slice(array, -1)[0]).value();
  }
}

function colorizeOpen(obj) {
  if (obj.name) {
    return { text: obj.name, argument: obj.type };
  } else if (obj.url) {
    return { text: obj.url, argument: 'url' };
  } else if (obj.path) {
    return { text: obj.path, argument: 'path' };
  }
}

function outputify(objs) {
  var outputs = _.map(objs, colorizeOpen);
  return andify(outputs);
}

function outputifyOpen(objs) {
  var groups = _.groupBy(objs, function (obj) {
    return obj.type || Object.keys(obj)[0];
  });
  var message = [];

  if (groups.application) {
    message.push(_.flatten([{ text: 'launch ', category: 'action' }, outputify(groups.application)]));
  }
  if (groups.url) {
    message.push(_.flatten([{ text: 'load ', category: 'action' }, outputify(groups.url), { text: ' in ' }, { text: 'the default browser', argument: 'application' }]));
  }
  if (groups.path) {
    message.push(_.flatten([{ text: 'open ', category: 'action' }, outputify(groups.path), { text: ' in ' }, { text: 'the default application', argument: 'application' }]));
  }
  if (groups['preference-pane']) {
    message.push(_.flatten([{ text: 'open ', category: 'action' }, { text: ' the ' }, outputify(groups['preference-pane']), { text: ' system preference pane' }]));
  }

  return _.flatten(andify(message, '; '));
}

function demoExecute(result) {
  if (result.verb === 'open') {
    if (result.apps) {
      return _.flatten([{ text: 'open ', category: 'action' }, outputify(result.items), { text: ' in ' }, outputify(result.apps)]);
    } else {
      return outputifyOpen(result.items);
    }
  } else if (result.verb === 'switch') {
    return _.flatten([{ text: 'switch focus to ', category: 'action' }, colorizeOpen(result.item)]);
  } else if (result.verb === 'close') {
    return _.flatten([{ text: 'close every window of ', category: 'action' }, outputify(result.items)]);
  } else if (result.verb === 'quit') {
    return _.flatten([{ text: 'quit ', category: 'action' }, outputify(result.items)]);
  } else if (result.verb === 'kill') {
    return _.flatten([{ text: 'kill all ', category: 'action' }, outputify(result.items), { text: ' processes' }]);
  } else if (result.verb === 'eject') {
    return _.flatten([{ text: 'eject ', category: 'action' }, outputify(result.items)]);
  }
}
},{}],350:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.Open = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalUrl = require('elliptical-url');

var _laconaCommand = require('lacona-command');

var _laconaPhrases = require('lacona-phrases');

var _laconaApi = require('lacona-api');

var _demo = require('./demo');

var _demo2 = _interopRequireDefault(_demo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Open = exports.Open = {
  extends: [_laconaCommand.Command],

  execute: function execute(result) {
    if (result.verb === 'open') {
      result.items.forEach(function (item) {
        if (result.apps) {
          result.apps.forEach(function (app) {
            if (item.url) {
              app.openURL(item.url);
            } else if (item.path) {
              app.openFile(item.path);
            }
          });
        } else {
          if (item.open) {
            item.open();
          } else if (item.url) {
            (0, _laconaApi.openURL)({ url: item.url });
          } else if (item.path) {
            (0, _laconaApi.openFile)({ path: item.path });
          }
        }
      });
    } else if (result.verb === 'switch') {
      if (result.item.activate) result.item.activate();
    } else if (result.verb === 'quit') {
      _lodash2.default.forEach(result.items, function (item) {
        if (item.quit) item.quit();
      });
    } else if (result.verb === 'close') {
      _lodash2.default.forEach(result.items, function (item) {
        if (item.close) item.close();
      });
    } else if (result.verb === 'hide') {
      _lodash2.default.forEach(result.items, function (item) {
        if (item.hide) item.hide();
      });
    } else if (result.verb === 'eject') {
      _lodash2.default.forEach(result.items, function (item) {
        if (item.eject) item.eject();
      });
    } else if (result.verb === 'eject-all') {
      (0, _laconaApi.unmountAllVolumes)();
    }
  },


  demoExecute: _demo2.default,

  filterResult: function filterResult(result) {
    if (result.verb === 'eject' && _lodash2.default.some(result.items, function (item) {
      return !item.canEject();
    })) {
      return false;
    }
    return true;
  },


  // TODO add canOpen, canEject, ... support
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'filter',
        { outbound: filterOption },
        (0, _elliptical.createElement)(
          'sequence',
          null,
          (0, _elliptical.createElement)('literal', { text: 'open ', category: 'action', id: 'verb', value: 'open' }),
          (0, _elliptical.createElement)(
            'repeat',
            { id: 'items', separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, category: 'conjunction' }), ellipsis: true },
            (0, _elliptical.createElement)(
              'choice',
              null,
              (0, _elliptical.createElement)(_laconaPhrases.Application, null),
              (0, _elliptical.createElement)(_laconaPhrases.PreferencePane, null),
              (0, _elliptical.createElement)(_laconaPhrases.MountedVolume, null),
              (0, _elliptical.createElement)(_ellipticalUrl.URL, { splitOn: /\s|,/, id: 'url' }),
              (0, _elliptical.createElement)(_laconaPhrases.File, { id: 'path' })
            )
          ),
          (0, _elliptical.createElement)('list', { items: [' in ', ' using ', ' with '], limit: 1, category: 'conjunction', id: 'openin', value: true }),
          (0, _elliptical.createElement)(
            'repeat',
            { unique: true, id: 'apps', separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, category: 'conjunction' }) },
            (0, _elliptical.createElement)(_laconaPhrases.Application, null)
          )
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'switch to ', category: 'action', id: 'verb', value: 'switch' }),
        (0, _elliptical.createElement)(
          'choice',
          { id: 'item' },
          (0, _elliptical.createElement)(_laconaPhrases.RunningApplication, null),
          (0, _elliptical.createElement)(_laconaPhrases.ContentArea, null)
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['quit ', 'kill '], category: 'action', id: 'verb', value: 'quit' }),
        (0, _elliptical.createElement)(
          'repeat',
          { unique: true, id: 'items', separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, category: 'conjunction' }) },
          (0, _elliptical.createElement)(_laconaPhrases.RunningApplication, null)
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['hide '], category: 'action', id: 'verb', value: 'hide' }),
        (0, _elliptical.createElement)(
          'repeat',
          { unique: true, id: 'items', separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, category: 'conjunction' }) },
          (0, _elliptical.createElement)(_laconaPhrases.RunningApplication, null)
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'close ', category: 'action', id: 'verb', value: 'close' }),
        (0, _elliptical.createElement)(
          'repeat',
          { unique: true, id: 'items', separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, category: 'conjunction' }) },
          (0, _elliptical.createElement)(
            'choice',
            null,
            (0, _elliptical.createElement)(_laconaPhrases.RunningApplication, null),
            (0, _elliptical.createElement)(_laconaPhrases.ContentArea, null)
          )
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: ['eject ', 'unmount ', 'dismount '], category: 'action', id: 'verb', value: 'eject' }),
        (0, _elliptical.createElement)(
          'choice',
          { merge: true },
          (0, _elliptical.createElement)('list', { items: ['all', 'everything', 'all devices'], limit: 1, category: 'action', id: 'verb', value: 'eject-all' }),
          (0, _elliptical.createElement)(
            'repeat',
            { id: 'items', separator: (0, _elliptical.createElement)('list', { items: [', ', ', and ', ' and '], limit: 1 }) },
            (0, _elliptical.createElement)(_laconaPhrases.MountedVolume, null)
          )
        )
      )
    );
  }
}; /** @jsx createElement */

function filterOption(option) {
  if (option.result.openin && _lodash2.default.some(option.result.items, function (item) {
    return item.open;
  })) {
    return false;
  }
  return true;
}

var extensions = exports.extensions = [Open];
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo":349,"elliptical":231,"elliptical-url":225,"lacona-api":351,"lacona-command":342,"lacona-phrases":371}],351:[function(require,module,exports){
arguments[4][345][0].apply(exports,arguments)
},{"_process":9,"dup":345,"rxjs/Observable":550,"rxjs/operator/map":560}],352:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.playDemoExecute = playDemoExecute;
exports.controlDemoExecute = controlDemoExecute;

function andify(array) {
  if (array.length === 1) {
    return array;
  } else {
    return _.chain(array).slice(0, -2).map(function (item) {
      return [item, { text: ', ' }];
    }).flatten().concat(_.slice(array, -2, -1)[0]).concat({ text: ' and ' }).concat(_.slice(array, -1)[0]).value();
  }
}

function playDemoExecute(result) {
  var descriptions = _.map(result.music, function (_ref) {
    var song = _ref.song;
    var album = _ref.album;
    var artist = _ref.artist;
    var genre = _ref.genre;
    var playlist = _ref.playlist;
    var composer = _ref.composer;

    if (song) {
      return { text: song, argument: 'song' };
    } else if (album) {
      return [{ text: 'all songs on ' }, { text: album, argument: 'album' }];
    } else if (artist) {
      return [{ text: 'all songs by ' }, { text: artist, argument: 'artist' }];
    } else if (genre) {
      return [{ text: 'all songs in the ' }, { text: genre, argument: 'genre' }, { text: 'genre' }];
    } else if (playlist) {
      return [{ text: 'all songs in the ' }, { text: playlist, argument: 'playlist' }, { text: 'playlist' }];
    } else if (composer) {
      return [{ text: 'all songs composed by ' }, { text: composer, argument: 'composer' }];
    }
  });

  return _.flattenDeep([{ text: 'play ', category: 'action' }, andify(descriptions), { text: ' in ', category: 'conjunction' }, { text: ' iTunes', argument: 'application' }]);
}

function controlDemoExecute(result) {
  if (result.verb === 'play') {
    return [{ text: 'play ', category: 'action' }, { text: 'the current song', category: 'argument5' }, { text: ' in ' }, { text: 'iTunes', argument: 'application' }];
  } else if (result.verb === 'next') {
    return [{ text: 'play ', category: 'action' }, { text: 'the next song', category: 'argument5' }, { text: ' in ' }, { text: 'iTunes', argument: 'application' }];
  } else if (result.verb === 'previous') {
    return [{ text: 'play ', category: 'action' }, { text: 'the previous song', category: 'argument5' }, { text: ' in ' }, { text: 'iTunes', argument: 'application' }];
  } else if (result.verb === 'stop') {
    return [{ text: 'stop playing music ', category: 'action' }, { text: ' in ' }, { text: 'iTunes', argument: 'application' }];
  } else if (result.verb === 'pause') {
    return [{ text: 'pause ', category: 'action' }, { text: 'the current song', category: 'argument5' }, { text: ' in ' }, { text: 'iTunes', argument: 'application' }];
  }
}
},{}],353:[function(require,module,exports){
(function (process,global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.Control = exports.PlaySpecific = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _laconaApi = require('lacona-api');

var _laconaCommand = require('lacona-command');

var _demo = require('./demo');

var _Observable = require('rxjs/Observable');

var _switchMap = require('rxjs/operator/switchMap');

var _mergeMap = require('rxjs/operator/mergeMap');

var _first = require('rxjs/operator/first');

var _startWith = require('rxjs/operator/startWith');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */


var Music = {
  fetch: function fetch(_ref) {
    var _context;

    var activate = _ref.activate;

    var tapObserver = void 0;
    var tap = new _Observable.Observable(function (observer) {
      tapObserver = observer;
    });
    var update = function update() {
      return tapObserver.next();
    };

    return (_context = (_context = _mergeMap.mergeMap.call(activate, function () {
      return _first.first.call(tap);
    }), _switchMap.switchMap).call(_context, function () {
      return new _Observable.Observable(function (observer) {
        (0, _laconaApi.fetchMusic)(function (err, music) {
          process.nextTick(function () {
            if (err) {
              observer.error({ update: update, music: [] });
            } else {
              observer.next({ update: update, music: music });
              observer.complete();
            }
          });
        });
      });
    }), _startWith.startWith).call(_context, { update: update, music: [] });

    // /*
    // The first time that tap emits after activate emits, call the callback
    // */

    // const onActivate = activate::switchMap(() => {
    //   let called = false
    //   return new Observable((observer) => {
    //     function update () {
    //       if (!called) {
    //         called = true
    //         process.nextTick(() => {
    //         })
    //       }
    //     }

    //   })
    // })

    // return onActivate::startWith({update, music: []})
  }
};
// class Music extends Source {
//   data = []

//   onCreate () {
//     if (isDemo()) {
//       this.fetch()
//     }
//   }

//   fetch () {
//     fetchMusic((err, music) => {
//       if (err) {
//         console.error(err)
//       } else {
//         this.setData(music)
//       }
//     })
//   }

//   onActivate () {
//     this.setData([])
//   }

//   trigger () {
//     if (_.isEmpty(this.data)) {
//       this.fetch()
//     }
//   }
// }

var PlaySpecific = exports.PlaySpecific = {
  extends: [_laconaCommand.Command],

  demoExecute: _demo.playDemoExecute,

  execute: function execute(result) {
    var ids = _lodash2.default.chain(result.music).map('ids').flatten().value();
    (0, _laconaApi.playSongIds)({ ids: ids });
  },
  observe: function observe() {
    return (0, _elliptical.createElement)(Music, null);
  },
  describe: function describe(_ref2) {
    var data = _ref2.data;

    var tracks = _lodash2.default.chain(data.music).filter('name').map(function (_ref3) {
      var name = _ref3.name;
      var id = _ref3.id;
      return { text: name, value: { song: name, ids: [id] } };
    }).value();
    var albums = _lodash2.default.chain(data.music).filter('album').groupBy('album').map(function (albumItems, album) {
      return { text: album, value: { album: album, ids: _lodash2.default.map(albumItems, 'id') } };
    }).value();
    var artists = _lodash2.default.chain(data.music).filter('artist').groupBy('artist').map(function (artistItems, artist) {
      return { text: artist, value: { artist: artist, ids: _lodash2.default.map(artistItems, 'id') } };
    }).value();
    var genres = _lodash2.default.chain(data.music).filter('genre').groupBy('genre').map(function (genreItems, genre) {
      return { text: genre, value: { genre: genre, ids: _lodash2.default.map(genreItems, 'id') } };
    }).value();
    var composers = _lodash2.default.chain(data.music).filter('composer').groupBy('composer').map(function (composerItems, composer) {
      return { text: composer, value: { composer: composer, ids: _lodash2.default.map(composerItems, 'id') } };
    }).value();

    function callUpdate(option) {
      if (option.text != null) {
        data.update();
      }
    }
    // function={this.source.trigger.bind(this.source)
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)('literal', { text: 'play ', category: 'action' }),
      (0, _elliptical.createElement)(
        'tap',
        { inbound: callUpdate, id: 'music' },
        (0, _elliptical.createElement)(
          'repeat',
          { unique: true, separator: (0, _elliptical.createElement)('list', { items: [' and ', ', ', ', and '], limit: 1 }) },
          (0, _elliptical.createElement)(
            'choice',
            null,
            (0, _elliptical.createElement)(
              'label',
              { text: 'song' },
              (0, _elliptical.createElement)('list', { items: tracks, strategy: 'fuzzy', limit: 10 })
            ),
            (0, _elliptical.createElement)(
              'label',
              { text: 'album' },
              (0, _elliptical.createElement)('list', { items: albums, strategy: 'fuzzy', limit: 10 })
            ),
            (0, _elliptical.createElement)(
              'label',
              { text: 'artist' },
              (0, _elliptical.createElement)('list', { items: artists, strategy: 'fuzzy', limit: 10 })
            ),
            (0, _elliptical.createElement)(
              'label',
              { text: 'genre' },
              (0, _elliptical.createElement)('list', { items: genres, strategy: 'fuzzy', limit: 10 })
            ),
            (0, _elliptical.createElement)(
              'label',
              { text: 'composer' },
              (0, _elliptical.createElement)('list', { items: composers, strategy: 'fuzzy', limit: 10 })
            )
          )
        )
      )
    );
  }
};

var Control = exports.Control = {
  extends: [_laconaCommand.Command],

  demoExecute: _demo.controlDemoExecute,

  execute: function execute(result) {
    if (result.verb === 'play') {
      (0, _laconaApi.musicPlay)();
    } else if (result.verb === 'next') {
      (0, _laconaApi.musicNext)();
    } else if (result.verb === 'previous') {
      (0, _laconaApi.musicPrevious)();
    } else if (result.verb === 'pause') {
      (0, _laconaApi.musicPause)();
    } else if (result.verb === 'stop') {
      (0, _laconaApi.musicStop)();
    }
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'play ', category: 'action' }),
        (0, _elliptical.createElement)(
          'choice',
          { merge: true, id: 'verb', limit: 2 },
          (0, _elliptical.createElement)('list', { items: ['current song', 'current track', 'music'], value: 'play', limit: 1, category: 'action' }),
          (0, _elliptical.createElement)('list', { items: ['previous song', 'previous track', 'last song', 'last track'], value: 'previous', limit: 1, category: 'action' }),
          (0, _elliptical.createElement)('list', { items: ['next song', 'next track'], value: 'next', limit: 1, category: 'action' })
        )
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { value: { verb: 'pause' } },
        (0, _elliptical.createElement)('literal', { text: 'pause ', category: 'action' }),
        (0, _elliptical.createElement)('list', { items: ['current song', 'current track', 'music'], limit: 1, category: 'action' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { value: { verb: 'next' } },
        (0, _elliptical.createElement)('literal', { text: 'skip ', category: 'action' }),
        (0, _elliptical.createElement)('list', { items: ['current song', 'current track'], limit: 1, category: 'action' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { value: { verb: 'stop' } },
        (0, _elliptical.createElement)('literal', { text: 'stop ', category: 'action' }),
        (0, _elliptical.createElement)('list', { items: ['current song', 'current track'], limit: 1, category: 'action' })
      )
    );
  }
};

var extensions = exports.extensions = [PlaySpecific, Control];
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo":352,"_process":9,"elliptical":231,"lacona-api":354,"lacona-command":342,"rxjs/Observable":550,"rxjs/operator/first":559,"rxjs/operator/mergeMap":562,"rxjs/operator/startWith":563,"rxjs/operator/switchMap":564}],354:[function(require,module,exports){
arguments[4][345][0].apply(exports,arguments)
},{"_process":9,"dup":345,"rxjs/Observable":550,"rxjs/operator/map":560}],355:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.App = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /** @jsx createElement */


var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _laconaPhrases = require('lacona-phrases');

var _elliptical = require('elliptical');

var _map = require('rxjs/operator/map');

var _laconaApi = require('lacona-api');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AppObject = function () {
  function AppObject(_ref) {
    var bundleId = _ref.bundleId;
    var name = _ref.name;

    _classCallCheck(this, AppObject);

    this.bundleId = bundleId;
    this.name = name;
    this.type = 'application';
  }

  _createClass(AppObject, [{
    key: 'open',
    value: function open() {
      (0, _laconaApi.launchApplication)({ bundleId: this.bundleId }, function () {});
    }
  }, {
    key: 'openURL',
    value: function openURL(url) {
      (0, _laconaApi.openURLInApplication)({ url: url, bundleId: this.bundleId });
    }
  }, {
    key: 'openFile',
    value: function openFile(path) {
      (0, _laconaApi.openFileInApplication)({ path: path, bundleId: this.bundleId });
    }
  }]);

  return AppObject;
}();

function getSpecificApps(applications) {
  return _lodash2.default.chain(applications).map(function (name) {
    return { bundleId: (0, _laconaApi.bundleIdForApplication)({ name: name }), name: name };
  }).filter(function (item) {
    return item.bundleId != null;
  }).value();
}

var Applications = {
  fetch: function fetch(_ref2) {
    var _context;

    var props = _ref2.props;

    return (_context = (_context = (0, _laconaApi.fetchApplications)({
      directories: props.config.searchDirectories
    }), _map.map).call(_context, function (data) {
      return data.concat(getSpecificApps(props.config.applications));
    }), _map.map).call(_context, function (data) {
      return _lodash2.default.map(data, function (item) {
        return new AppObject(item);
      });
    });
  }
};

var App = exports.App = {
  extends: [_laconaPhrases.Application],

  observe: function observe(_ref3) {
    var context = _ref3.context;

    return (0, _elliptical.createElement)(Applications, { config: context.config.applications });
  },
  describe: function describe(_ref4) {
    var data = _ref4.data;

    var apps = _lodash2.default.map(data, function (app) {
      return {
        text: app.name,
        value: app
      };
    });

    return (0, _elliptical.createElement)(
      'label',
      { text: 'application' },
      (0, _elliptical.createElement)('list', { strategy: 'fuzzy', items: apps, limit: 10 })
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"lacona-api":370,"lacona-phrases":371,"rxjs/operator/map":560}],356:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Bookmark = undefined;

var _elliptical = require('elliptical');

var _ellipticalUrl = require('elliptical-url');

var _laconaApi = require('lacona-api');

var _map = require('rxjs/operator/map');

/* for when I want to support Chrome
tell application "Google Chrome"
	get {title, URL, id} of bookmark items of bookmark folders
end tell
*/

/** @jsx createElement */
var Bookmarks = {
  fetch: function fetch() {
    return (0, _laconaApi.fetchBookmarks)();
  }
};

var Bookmark = exports.Bookmark = {
  extends: [_ellipticalUrl.URL],
  observe: function observe() {
    return (0, _elliptical.createElement)(Bookmarks, null);
  },
  describe: function describe(_ref) {
    var data = _ref.data;

    var bookmarks = data.map(function (bookmark) {
      return { text: bookmark.name, value: bookmark.url };
    });

    return (0, _elliptical.createElement)(
      'label',
      { text: 'bookmark' },
      (0, _elliptical.createElement)('list', { fuzzy: true, items: bookmarks, limit: 10 })
    );
  }
};
},{"elliptical":231,"elliptical-url":225,"lacona-api":370,"rxjs/operator/map":560}],357:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SystemCommand = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _laconaCommand = require('lacona-command');

var _laconaApi = require('lacona-api');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

function demoExecute(result) {
  if (result.verb === 'restart') {
    return [{ text: 'restart the computer', category: 'action' }];
  } else if (result.verb === 'shutdown') {
    return [{ text: 'shut the computer down', category: 'action' }];
  } else if (result.verb === 'sleep') {
    return [{ text: 'put the computer to sleep', category: 'action' }];
  } else if (result.verb === 'lock') {
    return [{ text: 'lock the computer', category: 'action' }];
  } else if (result.verb === 'log out') {
    return [{ text: 'log out of the computer', category: 'action' }];
  } else if (result.verb === 'empty-trash') {
    return [{ text: 'empty the trash', category: 'action' }];
  } else if (result.verb === 'screensaver') {
    return [{ text: 'turn on the screensaver', category: 'action' }];
  } else if (result.verb === 'display-off') {
    return [{ text: 'turn the display off', category: 'action' }];
  }
}

function execute(result) {
  if (result.verb === 'restart') {
    (0, _laconaApi.restart)();
  } else if (result.verb === 'shutdown') {
    (0, _laconaApi.shutdown)();
  } else if (result.verb === 'sleep') {
    (0, _laconaApi.sleep)();
  } else if (result.verb === 'lock') {
    (0, _laconaApi.lock)();
  } else if (result.verb === 'log out') {
    (0, _laconaApi.logOut)();
  } else if (result.verb === 'empty-trash') {
    (0, _laconaApi.emptyTrash)();
  } else if (result.verb === 'screensaver') {
    (0, _laconaApi.turnOnScreensaver)();
  } else if (result.verb === 'display-off') {
    (0, _laconaApi.turnOffDisplay)();
  }
}

var SystemCommand = exports.SystemCommand = {
  extends: [_laconaCommand.Command],
  execute: execute,
  demoExecute: demoExecute,

  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('list', { items: [{ text: 'restart', value: 'restart' }, { text: 'shutdown', value: 'shutdown' }, { text: 'sleep', value: 'sleep' }, { text: 'lock', value: 'lock' }, { text: 'log out', value: 'log out' }, { text: 'logout', value: 'log out' }, { text: 'log off', value: 'log out' }, { text: 'logoff', value: 'log out' }], category: 'action', id: 'verb', limit: 5 }),
        (0, _elliptical.createElement)('list', { items: [' computer', ' the computer', ' system', ' the system'], limit: 1, optional: true, limited: true, category: 'action' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { id: 'verb', value: 'empty-trash' },
        (0, _elliptical.createElement)('literal', { text: 'empty ', category: 'action' }),
        (0, _elliptical.createElement)('literal', { text: 'the ', optional: true, limited: true, category: 'action' }),
        (0, _elliptical.createElement)('literal', { text: 'Trash', category: 'action' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { id: 'verb', value: 'screensaver' },
        (0, _elliptical.createElement)('literal', { text: 'turn on ', category: 'action' }),
        (0, _elliptical.createElement)('literal', { text: 'the ', optional: true, limited: true, category: 'action' }),
        (0, _elliptical.createElement)('list', { items: ['screensaver', 'screensaver'], limit: 1, category: 'action' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { id: 'verb' },
        (0, _elliptical.createElement)('literal', { text: 'turn off ', category: 'action' }),
        (0, _elliptical.createElement)('literal', { text: 'the ', optional: true, limited: true, category: 'action' }),
        (0, _elliptical.createElement)(
          'choice',
          { merge: true },
          (0, _elliptical.createElement)('list', { items: ['display', 'screen'], limit: 1, category: 'action', value: 'display-off' }),
          (0, _elliptical.createElement)('list', { items: ['computer', 'system'], limit: 1, category: 'action', value: 'shutdown' })
        )
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"lacona-api":370,"lacona-command":342}],358:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var dateMap = exports.dateMap = {
  '_$!<Birthday>!$_': ['birthday'],
  '_$!<Anniversary>!$_': ['anniversary']
};

var relationshipMap = exports.relationshipMap = {
  '_$!<Mother>!$_': ['mother', 'mom'],
  '_$!<Brother>!$_': ['brother'],
  '_$!<Child>!$_': ['child'],
  '_$!<Father>!$_': ['father', 'dad'],
  '_$!<Friend>!$_': ['friend'],
  '_$!<Parent>!$_': ['parent'],
  '_$!<Partner>!$_': ['partner'],
  '_$!<Sister>!$_': ['sister'],
  '_$!<Spouse>!$_': ['spouse'],
  '_$!<Assistant>!$_': ['assistant'],
  '_$!<Manager>!$_': ['manager', 'boss'],
  '_$!<Other>!$_': ['other']
};

var emailLabelMap = exports.emailLabelMap = {
  '_$!<Home>!$_': ['home', 'personal'],
  '_$!<Work>!$_': ['work'],
  '_$!<Other>!$_': ['other']
};

var phoneNumberMap = exports.phoneNumberMap = {
  '_$!<Home>!$_': ['home', 'house', 'home phone'],
  '_$!<Work>!$_': ['work', 'work phone', 'office'],
  '_$!<Mobile>!$_': ['mobile', 'cell'],
  '_$!<Main>!$_': ['main', 'primary'],
  '_$!<HomeFAX>!$_': ['home fax'],
  '_$!<WorkFAX>!$_': ['work fax'],
  '_$!<Pager>!$_': ['pager', 'pager number'],
  '_$!<Other>!$_': ['other']
};

var urlMap = exports.urlMap = {
  '_$!<HomePage>!$_': ['website', 'homepage']
};
},{}],359:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Contacts = exports.UserContact = undefined;
exports.possibleNameCombinations = possibleNameCombinations;
exports.spreadObject = spreadObject;
exports.spread = spread;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _laconaApi = require('lacona-api');

var _Observable = require('rxjs/Observable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function possibleNameCombinations(_ref) {
  var firstName = _ref.firstName;
  var middleName = _ref.middleName;
  var lastName = _ref.lastName;
  var nickname = _ref.nickname;
  var company = _ref.company;

  var possibleNames = [];
  if (firstName && lastName) {
    possibleNames.push(firstName + ' ' + lastName);
  }
  if (firstName) {
    possibleNames.push(firstName);
  }
  if (lastName && !firstName) {
    possibleNames.push(lastName);
  }

  if (company && !firstName && !lastName) {
    possibleNames.push(company);
  }

  if (nickname) {
    if (firstName && lastName) {
      possibleNames.push(firstName + ' "' + nickname + '" ' + lastName);
    }
    if (lastName) {
      possibleNames.push(nickname + ' ' + lastName);
    }
  }

  return possibleNames;
}

function spreadObject(obj, spreadKey) {
  var dataKeys = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];
  var valueKey = arguments.length <= 3 || arguments[3] === undefined ? 'value' : arguments[3];
  var labelKey = arguments.length <= 4 || arguments[4] === undefined ? 'label' : arguments[4];

  var spreadData = _lodash2.default.chain(obj[spreadKey]).map(function (_ref2) {
    var value = _ref2.value;
    var label = _ref2.label;

    return _lodash2.default.assign(valueKey ? _defineProperty({}, valueKey, value) : {}, labelKey ? _defineProperty({}, labelKey, label) : {}, _lodash2.default.pick(value, dataKeys));
  }).value();
  return spreadData;
}

function spread(data, spreadKey) {
  var dataKeys = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];
  var valueKey = arguments.length <= 3 || arguments[3] === undefined ? 'value' : arguments[3];
  var labelKey = arguments.length <= 4 || arguments[4] === undefined ? 'label' : arguments[4];

  var spreadData = _lodash2.default.chain(data).map(function (item) {
    return _lodash2.default.map(item[spreadKey], function (_ref5) {
      var value = _ref5.value;
      var label = _ref5.label;

      return _lodash2.default.assign(valueKey ? _defineProperty({}, valueKey, value) : {}, labelKey ? _defineProperty({}, labelKey, label) : {}, _lodash2.default.pick(item, dataKeys));
    });
  }).flatten().value();

  return spreadData;
}

var UserContact = exports.UserContact = {
  fetch: function fetch() {
    return new _Observable.Observable(function (observer) {
      observer.next([]);

      (0, _laconaApi.fetchUserContact)(function (err, contacts) {
        if (err) {
          console.error(err);
        } else {
          observer.next(contacts);
        }
      });
    });
  }
};

var Contacts = exports.Contacts = {
  fetch: function fetch() {
    return new _Observable.Observable(function (observer) {
      observer.next([]);

      (0, _laconaApi.fetchContacts)(function (err, contacts) {
        if (err) {
          console.error(err);
        } else {
          observer.next(contacts);
        }
      });
    });
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"lacona-api":370,"rxjs/Observable":550}],360:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContactDate = exports.ContactPhoneNumber = exports.ContactEmail = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _contactSources = require('./contact-sources');

var _elliptical = require('elliptical');

var _ellipticalDatetime = require('elliptical-datetime');

var _constantMaps = require('./constant-maps');

var _ellipticalEmail = require('elliptical-email');

var _ellipticalPhone = require('elliptical-phone');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function elementsFromContacts(data) {
  var elements = _lodash2.default.chain(data).map(function (_ref) {
    var firstName = _ref.firstName;
    var middleName = _ref.middleName;
    var lastName = _ref.lastName;
    var nickname = _ref.nickname;
    var company = _ref.company;
    var value = _ref.value;
    var label = _ref.label;

    var possibleNames = (0, _contactSources.possibleNameCombinations)({ firstName: firstName, middleName: middleName, lastName: lastName, nickname: nickname, company: company });
    var items = _lodash2.default.map(possibleNames, function (text) {
      return { text: text, value: value };
    });

    return (0, _elliptical.createElement)('list', { items: items, limit: 1 });
  }).value();

  return (0, _elliptical.createElement)(
    'label',
    { text: 'contact' },
    (0, _elliptical.createElement)(
      'choice',
      { limit: 10 },
      elements
    )
  );
} /** @jsx createElement */

function spreadEmails(ary) {
  return (0, _contactSources.spread)(ary, 'emails', ['firstName', 'lastName', 'middleName', 'nickname', 'company']);
}

function spreadPhoneNumbers(ary) {
  return (0, _contactSources.spread)(ary, 'phoneNumbers', ['firstName', 'lastName', 'middleName', 'nickname', 'company']);
}

function spreadDates(ary) {
  return (0, _contactSources.spread)(ary, 'dates', ['firstName', 'lastName', 'middleName', 'nickname', 'company']);
}

var ContactEmail = exports.ContactEmail = {
  extends: [_ellipticalEmail.EmailAddress],
  observe: function observe() {
    return (0, _elliptical.createElement)(_contactSources.Contacts, null);
  },
  describe: function describe(_ref2) {
    var data = _ref2.data;

    var emails = spreadEmails(data);
    return elementsFromContacts(emails);
  }
};

var ContactPhoneNumber = exports.ContactPhoneNumber = {
  extends: [_ellipticalPhone.PhoneNumber],

  observe: function observe() {
    return (0, _elliptical.createElement)(_contactSources.Contacts, null);
  },
  describe: function describe(_ref3) {
    var data = _ref3.data;

    var phoneNumbers = spreadPhoneNumbers(data);
    return elementsFromContacts(phoneNumbers);
  }
};

var ContactDate = exports.ContactDate = {
  extends: [_ellipticalDatetime.Day],

  observe: function observe() {
    return (0, _elliptical.createElement)(_contactSources.Contacts, null);
  },
  describe: function describe(_ref4) {
    var data = _ref4.data;
    var props = _ref4.props;

    var dates = spreadDates(data);
    var items = _lodash2.default.chain(dates).map(function (_ref5) {
      var firstName = _ref5.firstName;
      var middleName = _ref5.middleName;
      var lastName = _ref5.lastName;
      var nickname = _ref5.nickname;
      var company = _ref5.company;
      var value = _ref5.value;
      var label = _ref5.label;

      var dateNames = _constantMaps.dateMap[label] || [label];
      var possibleNames = (0, _contactSources.possibleNameCombinations)({ firstName: firstName, middleName: middleName, lastName: lastName, nickname: nickname });
      return (0, _elliptical.createElement)(
        'choice',
        { limit: 1, value: value },
        _lodash2.default.map(dateNames, function (dateName) {
          return _lodash2.default.map(possibleNames, function (possibleName) {
            return (0, _elliptical.createElement)(
              'sequence',
              null,
              (0, _elliptical.createElement)(
                'label',
                { text: 'contact' },
                (0, _elliptical.createElement)('literal', { text: possibleName + '\'s' })
              ),
              (0, _elliptical.createElement)('literal', { text: ' ' }),
              (0, _elliptical.createElement)(
                'label',
                { text: 'special day', suppressEmpty: false },
                (0, _elliptical.createElement)('literal', { text: dateName })
              )
            );
          });
        })
      );
    }).value();

    return (0, _elliptical.createElement)(
      'sequence',
      null,
      props.prepositions ? (0, _elliptical.createElement)('literal', { text: 'on ', category: 'conjunction', optional: true, limited: true, preferred: true }) : null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'special day', merge: true },
        (0, _elliptical.createElement)(
          'choice',
          { limit: 10 },
          items
        )
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./constant-maps":358,"./contact-sources":359,"elliptical":231,"elliptical-datetime":14,"elliptical-email":123,"elliptical-phone":222}],361:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Holiday = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalDatetime = require('elliptical-datetime');

var _laconaApi = require('lacona-api');

var _Observable = require('rxjs/Observable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Holidays = {
  fetch: function fetch() {
    return new _Observable.Observable(function (observer) {
      observer.next([]);

      if ((0, _laconaApi.isDemo)()) {
        observer.next(global.demoData.usHolidays);
      }
    });
  }
}; /** @jsx createElement */

var Holiday = exports.Holiday = {
  extends: [_ellipticalDatetime.Date],

  observe: function observe() {
    return (0, _elliptical.createElement)(Holidays, null);
  },
  describe: function describe(_ref) {
    var data = _ref.data;

    if (data.length === 0) return;

    return (0, _elliptical.createElement)(
      'label',
      { text: 'holiday' },
      (0, _elliptical.createElement)('list', { items: data, limit: 10 })
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"elliptical-datetime":14,"lacona-api":370,"rxjs/Observable":550}],362:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.File = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _laconaPhrases = require('lacona-phrases');

var _laconaApi = require('lacona-api');

var _path = require('path');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Files = {
  fetch: function fetch(_ref) {
    var props = _ref.props;

    return (0, _laconaApi.searchFiles)({ query: props.query });
  },

  clear: true
}; /** @jsx createElement */


function observe(input) {
  if (input != null) {
    return (0, _elliptical.createElement)(Files, { query: input.toLowerCase() });
  }
}

function describeFiles(_ref2) {
  var data = _ref2.data;

  var items = _lodash2.default.chain(data).filter(function (_ref3) {
    var contentType = _ref3.contentType;
    return contentType !== 'public.folder';
  }).map(function (_ref4) {
    var path = _ref4.path;
    return { text: (0, _path.basename)(path), value: path };
  }).value();
  return (0, _elliptical.createElement)('list', { items: items });
}

function describeFolders(_ref5) {
  var data = _ref5.data;

  var items = _lodash2.default.chain(data).filter(function (_ref6) {
    var contentType = _ref6.contentType;
    return contentType === 'public.folder';
  }).map(function (_ref7) {
    var path = _ref7.path;
    return { text: (0, _path.basename)(path), value: path };
  }).value();
  return (0, _elliptical.createElement)('list', { items: items });
}

var File = exports.File = {
  extends: [_laconaPhrases.File],
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'folder' },
        (0, _elliptical.createElement)('dynamic', { observe: observe, describe: describeFolders, greedy: true })
      ),
      (0, _elliptical.createElement)(
        'label',
        { text: 'file' },
        (0, _elliptical.createElement)('dynamic', { observe: observe, describe: describeFiles, greedy: true })
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"lacona-api":370,"lacona-phrases":371,"path":8}],363:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = undefined;

var _app = require('./app');

var _bookmark = require('./bookmark');

var _contact = require('./contact');

var _relationship = require('./relationship');

var _me = require('./me');

var _event = require('./event');

var _file = require('./file');

var _path = require('./path');

var _preferencePane = require('./preference-pane');

var _runningApp = require('./running-app');

var _command = require('./command');

var _volume = require('./volume');

// // import { BrowserTab } from './browser-tab'

// export {Applescript} from './applescript'
// export {default as Spotlight} from './spotlight'

var extensions = exports.extensions = [_app.App, _bookmark.Bookmark, /*BrowserTab,*/_contact.ContactDate, _contact.ContactEmail, _contact.ContactPhoneNumber, _file.File, _event.Holiday, /*OpenWindow,*/_path.Path, _me.PersonalDate, _preferencePane.Pane, _relationship.RelationshipDate, _relationship.RelationshipEmail, _relationship.RelationshipPhoneNumber, _runningApp.RunningApp, _command.SystemCommand, _volume.Volume];

// export default {
//   extensions: [App, Bookmark, Email, PhoneNumber, File],
//   config: {
//     apps: {type: 'boolean', default: true},
//     contacts: {type: 'boolean', default: true},
//     files: {type: 'boolean', default: true},
//     safariBookmarks: {type: 'boolean', default: true},
//   },
//   translations: [{
//     langs: ['en', 'default'],
//     information: {
//       title: 'Spotlight',
//       description: 'Lacona Extensions allowing you to manipulate data accessible via Spotlight',
//       examples: ['open Safari', 'email Adam', 'open Facebook']
//     }
//   }]
// }

// import { OpenWindow } from './open-window'
},{"./app":355,"./bookmark":356,"./command":357,"./contact":360,"./event":361,"./file":362,"./me":364,"./path":365,"./preference-pane":366,"./relationship":367,"./running-app":368,"./volume":369}],364:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PersonalDate = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalDatetime = require('elliptical-datetime');

var _ellipticalEmail = require('elliptical-email');

var _ellipticalPhone = require('elliptical-phone');

var _constantMaps = require('./constant-maps');

var _contactSources = require('./contact-sources');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function spreadDates(obj) {
  return (0, _contactSources.spreadObject)(obj, 'dates');
} /** @jsx createElement */

var PersonalDate = exports.PersonalDate = {
  extends: [_ellipticalDatetime.Day],

  observe: function observe() {
    return (0, _elliptical.createElement)(_contactSources.UserContact, null);
  },
  describe: function describe(_ref) {
    var data = _ref.data;
    var props = _ref.props;

    var dates = spreadDates(data);
    var items = _lodash2.default.map(dates, function (_ref2) {
      var value = _ref2.value;
      var label = _ref2.label;

      return { value: value, text: 'my ' + (_constantMaps.dateMap[label] || label) };
    });

    return (0, _elliptical.createElement)(
      'sequence',
      null,
      props.prepositions ? (0, _elliptical.createElement)('literal', { text: 'on ', optional: true, preferred: true, limited: true, category: 'conjunction' }) : null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'special day', merge: true },
        (0, _elliptical.createElement)('list', { items: items })
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./constant-maps":358,"./contact-sources":359,"elliptical":231,"elliptical-datetime":14,"elliptical-email":123,"elliptical-phone":222}],365:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Path = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _laconaPhrases = require('lacona-phrases');

var _path = require('path');

var _laconaApi = require('lacona-api');

var _Observable = require('rxjs/Observable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */


var Directory = {
  fetch: function fetch(_ref) {
    var props = _ref.props;

    return new _Observable.Observable(function (observer) {
      observer.next([]);

      (0, _laconaApi.fetchDirectoryContents)({ path: props.path }, function (err, files) {
        console;
        var absFiles = _lodash2.default.map(files, function (_ref2) {
          var file = _ref2.file;
          var isDir = _ref2.isDir;

          return (0, _path.join)(props.path, file) + (isDir ? '/' : '');
        });
        observer.next([props.path].concat(absFiles));
      });
    });
  },

  clear: true
};

function observe(input) {
  var path = _lodash2.default.endsWith(input, '/') ? input : (0, _path.dirname)(input);
  return (0, _elliptical.createElement)(Directory, { path: path });
}

function _describe(_ref3) {
  var data = _ref3.data;

  var items = _lodash2.default.map(data, function (file) {
    return { text: file, value: file };
  });
  return (0, _elliptical.createElement)('list', { items: items });
}

var Path = exports.Path = {
  extends: [_laconaPhrases.File],

  describe: function describe() {
    return (0, _elliptical.createElement)(
      'label',
      { text: 'path' },
      (0, _elliptical.createElement)('dynamic', { observe: observe, describe: _describe, greedy: true, limit: 1 })
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"lacona-api":370,"lacona-phrases":371,"path":8,"rxjs/Observable":550}],366:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pane = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /** @jsx createElement */


var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _laconaPhrases = require('lacona-phrases');

var _elliptical = require('elliptical');

var _laconaApi = require('lacona-api');

var _map = require('rxjs/operator/map');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PaneObject = function () {
  function PaneObject(_ref) {
    var path = _ref.path;
    var name = _ref.name;

    _classCallCheck(this, PaneObject);

    this.path = path;
    this.name = name;
    this.type = 'preference pane';
  }

  _createClass(PaneObject, [{
    key: 'open',
    value: function open() {
      (0, _laconaApi.openFile)({ path: this.path });
    }
  }]);

  return PaneObject;
}();

var Panes = {
  fetch: function fetch() {
    var _context;

    return (_context = (0, _laconaApi.fetchPreferencePanes)(), _map.map).call(_context, function (data) {
      return _lodash2.default.map(data, function (item) {
        return new PaneObject(item);
      });
    });
  }
};

var Pane = exports.Pane = {
  extends: [_laconaPhrases.PreferencePane],

  observe: function observe() {
    return (0, _elliptical.createElement)(Panes, null);
  },
  describe: function describe(_ref2) {
    var data = _ref2.data;

    var panes = _lodash2.default.map(data, function (pane) {
      return { text: pane.name, value: pane };
    });

    return (0, _elliptical.createElement)(
      'label',
      { text: 'preference pane' },
      (0, _elliptical.createElement)('list', { fuzzy: true, items: panes, limit: 10, score: 1 })
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"lacona-api":370,"lacona-phrases":371,"rxjs/operator/map":560}],367:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RelationshipDate = exports.RelationshipEmail = exports.RelationshipPhoneNumber = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalDatetime = require('elliptical-datetime');

var _ellipticalEmail = require('elliptical-email');

var _ellipticalPhone = require('elliptical-phone');

var _constantMaps = require('./constant-maps');

var _contactSources = require('./contact-sources');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function spreadRelationships(obj) {
  return (0, _contactSources.spreadObject)(obj, 'relationships', ['phoneNumbers', 'emails', 'dates'], null, 'relationship');
} /** @jsx createElement */

function spreadPhoneNumbers(ary) {
  return (0, _contactSources.spread)(ary, 'phoneNumbers', ['relationship']);
}

function spreadEmails(ary) {
  return (0, _contactSources.spread)(ary, 'emails', ['relationship']);
}

function spreadDates(ary) {
  return (0, _contactSources.spread)(ary, 'dates', ['relationship']);
}

function describeRelationship(data) {
  var items = _lodash2.default.chain(data).map(function (_ref) {
    var relationship = _ref.relationship;
    var value = _ref.value;
    var label = _ref.label;

    var relationships = _constantMaps.relationshipMap[relationship] || [relationship];
    return (0, _elliptical.createElement)(
      'choice',
      { limit: 1, value: value },
      _lodash2.default.map(relationships, function (oneRelationship) {
        return (0, _elliptical.createElement)('literal', { text: 'my ' + oneRelationship.toLowerCase() });
      }),
      _lodash2.default.map(relationships, function (oneRelationship) {
        return (0, _elliptical.createElement)('literal', { text: '' + _lodash2.default.capitalize(oneRelationship) });
      })
    );
  }).value();

  return (0, _elliptical.createElement)(
    'label',
    { text: 'relationship' },
    (0, _elliptical.createElement)(
      'choice',
      null,
      items
    )
  );
}

var RelationshipPhoneNumber = exports.RelationshipPhoneNumber = {
  extends: [_ellipticalPhone.PhoneNumber],

  observe: function observe() {
    return (0, _elliptical.createElement)(_contactSources.UserContact, null);
  },
  describe: function describe(_ref2) {
    var data = _ref2.data;

    var phoneNumbers = spreadPhoneNumbers(spreadRelationships(data));
    return describeRelationship(phoneNumbers);
  }
};

var RelationshipEmail = exports.RelationshipEmail = {
  extends: [_ellipticalEmail.EmailAddress],

  observe: function observe() {
    return (0, _elliptical.createElement)(_contactSources.UserContact, null);
  },
  describe: function describe(_ref3) {
    var data = _ref3.data;

    var emails = spreadEmails(spreadRelationships(data));
    return describeRelationship(emails);
  }
};

var RelationshipDate = exports.RelationshipDate = {
  extends: [_ellipticalDatetime.Day],

  observe: function observe() {
    return (0, _elliptical.createElement)(_contactSources.UserContact, null);
  },
  describe: function describe(_ref4) {
    var data = _ref4.data;
    var props = _ref4.props;

    var dates = spreadDates(spreadRelationships(data));
    var items = _lodash2.default.chain(dates).map(function (_ref5) {
      var relationship = _ref5.relationship;
      var value = _ref5.value;
      var label = _ref5.label;

      var relationships = _constantMaps.relationshipMap[relationship] || [relationship];
      var dateNames = _constantMaps.dateMap[label] || [label];
      return (0, _elliptical.createElement)(
        'choice',
        { limit: 1, value: value },
        _lodash2.default.map(dateNames, function (dateName) {
          return [_lodash2.default.map(relationships, function (oneRelationship) {
            return (0, _elliptical.createElement)(
              'sequence',
              null,
              (0, _elliptical.createElement)(
                'label',
                { text: 'relationship' },
                (0, _elliptical.createElement)('literal', { text: 'my ' + oneRelationship.toLowerCase() + '\'s' })
              ),
              (0, _elliptical.createElement)('literal', { text: ' ' }),
              (0, _elliptical.createElement)(
                'label',
                { text: 'special day' },
                (0, _elliptical.createElement)('literal', { text: dateName })
              )
            );
          }), _lodash2.default.map(relationships, function (oneRelationship) {
            return (0, _elliptical.createElement)(
              'sequence',
              null,
              (0, _elliptical.createElement)(
                'label',
                { text: 'relationship' },
                (0, _elliptical.createElement)('literal', { text: _lodash2.default.capitalize(oneRelationship) + '\'s' })
              ),
              (0, _elliptical.createElement)('literal', { text: ' ' }),
              (0, _elliptical.createElement)(
                'label',
                { text: 'special day' },
                (0, _elliptical.createElement)('literal', { text: dateName })
              )
            );
          })];
        })
      );
    }).value();

    return (0, _elliptical.createElement)(
      'sequence',
      null,
      props.prepositions ? (0, _elliptical.createElement)('literal', { text: 'on ', category: 'conjunction', optional: true, limited: true, preferred: true }) : null,
      (0, _elliptical.createElement)(
        'label',
        { text: 'special day', merge: true },
        (0, _elliptical.createElement)(
          'choice',
          null,
          items
        )
      )
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./constant-maps":358,"./contact-sources":359,"elliptical":231,"elliptical-datetime":14,"elliptical-email":123,"elliptical-phone":222}],368:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RunningApp = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /** @jsx createElement */


var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _laconaPhrases = require('lacona-phrases');

var _laconaApi = require('lacona-api');

var _Observable = require('rxjs/Observable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RunningApps = {
  fetch: function fetch() {
    return new _Observable.Observable(function (observer) {
      observer.next([]);

      (0, _laconaApi.fetchRunningApplications)(function (err, apps) {
        if (err) {
          console.error(err);
        } else {
          var trueData = _lodash2.default.map(apps, function (app) {
            return new RunningAppObject(app);
          });
          observer.next(trueData);
        }
      });
    });
  }
};

var RunningAppObject = function () {
  function RunningAppObject(item) {
    _classCallCheck(this, RunningAppObject);

    this.bundleId = item.bundleId;
    this.name = item.name;
    this.type = 'application';
  }

  _createClass(RunningAppObject, [{
    key: 'activate',
    value: function activate() {
      (0, _laconaApi.activateApplication)({ bundleId: this.bundleId });
    }
  }, {
    key: 'hide',
    value: function hide() {
      (0, _laconaApi.hideApplication)({ bundleId: this.bundleId });
    }
  }, {
    key: 'close',
    value: function close() {
      (0, _laconaApi.closeApplicationWindows)({ bundleId: this.bundleId });
    }
  }, {
    key: 'quit',
    value: function quit() {
      (0, _laconaApi.quitApplication)({ bundleId: this.bundleId });
    }
  }]);

  return RunningAppObject;
}();

var RunningApp = exports.RunningApp = {
  extends: [_laconaPhrases.RunningApplication],
  observe: function observe() {
    return (0, _elliptical.createElement)(RunningApps, null);
  },
  describe: function describe(_ref) {
    var data = _ref.data;

    var apps = _lodash2.default.map(data, function (app) {
      return { text: app.name, value: app };
    });

    return (0, _elliptical.createElement)(
      'label',
      { text: 'application' },
      (0, _elliptical.createElement)('list', { fuzzy: true, items: apps })
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"lacona-api":370,"lacona-phrases":371,"rxjs/Observable":550}],369:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Volume = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /** @jsx createElement */


var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _laconaPhrases = require('lacona-phrases');

var _laconaApi = require('lacona-api');

var _Observable = require('rxjs/Observable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var VolumeObject = function () {
  function VolumeObject(_ref) {
    var name = _ref.name;
    var path = _ref.path;
    var canOpen = _ref.canOpen;
    var canEject = _ref.canEject;

    _classCallCheck(this, VolumeObject);

    this.name = name;
    this.path = path;
    this.canOpen = canOpen;
    this.canEject = canEject;
    this.type = 'volume';
  }

  _createClass(VolumeObject, [{
    key: 'canOpen',
    value: function canOpen() {
      return this.canOpen;
    }
  }, {
    key: 'open',
    value: function open() {
      (0, _laconaApi.openFile)({ path: this.path });
    }
  }, {
    key: 'canEject',
    value: function canEject() {
      return this.canEject;
    }
  }, {
    key: 'eject',
    value: function eject() {
      (0, _laconaApi.unmountVolume)({ id: this.name });
    }
  }]);

  return VolumeObject;
}();

var Volumes = {
  fetch: function fetch() {
    return new _Observable.Observable(function (observer) {
      observer.next([]);

      (0, _laconaApi.fetchMountedVolumes)(function (err, volumes) {
        if (err) {
          observer.next([]);
          console.error(err);
        } else {
          var volumeObjects = _lodash2.default.map(volumes, function (volume) {
            return new VolumeObject(volume);
          });
          observer.next(volumeObjects);
        }
      });
    });
  }
};

// TODO activate deactivate
// onActivate () {
//   global.mountedVolumes((err, volumes) => {
//     if (volumes) this.replaceData(volumes)
//   })
// }
//
// onDeactivate () {
//   this.replaceData([])
// }

var Volume = exports.Volume = {
  extends: [_laconaPhrases.MountedVolume],

  observe: function observe() {
    return (0, _elliptical.createElement)(Volumes, null);
  },
  describe: function describe(_ref2) {
    var data = _ref2.data;

    var volumes = _lodash2.default.chain(data).map(function (obj) {
      return { text: obj.name, value: obj };
    }).value();

    return (0, _elliptical.createElement)(
      'label',
      { text: 'volume' },
      (0, _elliptical.createElement)('list', { fuzzy: true, items: volumes })
    );
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"lacona-api":370,"lacona-phrases":371,"rxjs/Observable":550}],370:[function(require,module,exports){
(function (process,global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; }; /** @jsx createElement */


exports.isOSX = isOSX;
exports.isDemo = isDemo;
exports.openURL = openURL;
exports.openFile = openFile;
exports.createEvent = createEvent;
exports.createReminder = createReminder;
exports.showNotification = showNotification;
exports.fetchApplications = fetchApplications;
exports.launchApplication = launchApplication;
exports.openURLInApplication = openURLInApplication;
exports.openFileInApplication = openFileInApplication;
exports.bundleIdForApplication = bundleIdForApplication;
exports.fetchBookmarks = fetchBookmarks;
exports.fetchUserContact = fetchUserContact;
exports.fetchContacts = fetchContacts;
exports.searchFiles = searchFiles;
exports.fetchDirectoryContents = fetchDirectoryContents;
exports.userHome = userHome;
exports.fetchRunningApplications = fetchRunningApplications;
exports.activateApplication = activateApplication;
exports.hideApplication = hideApplication;
exports.closeApplicationWindows = closeApplicationWindows;
exports.quitApplication = quitApplication;
exports.fetchOpenWindows = fetchOpenWindows;
exports.closeOpenWindow = closeOpenWindow;
exports.activateOpenWindow = activateOpenWindow;
exports.fetchBrowserTabs = fetchBrowserTabs;
exports.activateBrowserTab = activateBrowserTab;
exports.closeBrowserTab = closeBrowserTab;
exports.fetchPreferencePanes = fetchPreferencePanes;
exports.setBluetooth = setBluetooth;
exports.checkBluetooth = checkBluetooth;
exports.setDarkMode = setDarkMode;
exports.checkDarkMode = checkDarkMode;
exports.setWifi = setWifi;
exports.checkWifi = checkWifi;
exports.setDoNotDisturb = setDoNotDisturb;
exports.checkDoNotDisturb = checkDoNotDisturb;
exports.setVolume = setVolume;
exports.checkVolume = checkVolume;
exports.shutdown = shutdown;
exports.restart = restart;
exports.logOut = logOut;
exports.sleep = sleep;
exports.lock = lock;
exports.hibernate = hibernate;
exports.turnOffDisplay = turnOffDisplay;
exports.turnOnScreensaver = turnOnScreensaver;
exports.emptyTrash = emptyTrash;
exports.fetchMountedVolumes = fetchMountedVolumes;
exports.unmountVolume = unmountVolume;
exports.unmountAllVolumes = unmountAllVolumes;
exports.fetchMusic = fetchMusic;
exports.playSongIds = playSongIds;
exports.musicPlay = musicPlay;
exports.musicPause = musicPause;
exports.musicNext = musicNext;
exports.musicPrevious = musicPrevious;
exports.musicStop = musicStop;
exports.runApplescript = runApplescript;
exports.callSystem = callSystem;
exports.Config = Config;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _map = require('rxjs/operator/map');

var _Observable = require('rxjs/Observable');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var demoConfig = {
  webSearch: {
    searchEngines: [{ name: 'Google', url: 'https://www.google.com/search?q=${query}' }, { name: 'Google Images', url: 'https://www.google.com/search?q=${query}&tbm=isch' }, { name: 'Google Maps', url: 'https://www.google.com/maps?q=${query}' }, { name: 'Gmail', url: 'https://www.google.com/search?q=${query}' }, { name: 'Google Mail', url: 'http://mail.google.com/mail/u/0/#search/${query}' }, { name: 'Google Inbox', url: 'https://inbox.google.com/search/${query}' }, { name: 'Google Drive', url: 'https://drive.google.com/drive/u/0/#search?q=${query}' }, { name: 'Maps', url: 'http://maps.apple.com/?q=${query}' }, { name: 'Twitter', url: 'https://twitter.com/search?q=${query}' }, { name: 'Facebook', url: 'https://www.facebook.com/search/results.php?q=${query}' }, { name: 'LinkedIn', url: 'https://www.linkedin.com/vsearch/p?keywords=${query}' }, { name: 'Youtube', url: 'https://www.youtube.com/results?search_query=${query}' }, { name: 'Wikipedia', url: 'https://wikipedia.org/wiki/Special:Search/${query}' }, { name: 'Amazon', url: 'http://www.amazon.com/s?url=search-alias=aps&field-keywords=${query}&tag=lacona-20' }, { name: 'eBay', url: 'http://shop.ebay.com/?_nkw=${query}' }, { name: 'IMDb', url: 'http://www.imdb.com/find?s=all&q=${query}' }, { name: 'Rotten Tomatoes', url: 'http://www.rottentomatoes.com/search/?search=${query}' }, { name: 'Bing', url: 'http://www.bing.com/search?q=${query}' }, { name: 'Yahoo', url: 'https://search.yahoo.com/search?p=${query}' }, { name: 'Ask', url: 'http://www.ask.com/web?q=${query}' }, { name: 'Flickr', url: 'https://www.flickr.com/search/?q=${query}&w=all' }, { name: 'Wolfram|Alpha', url: 'http://www.wolframalpha.com/input/?i=${query}' }, { name: 'Yubnub', url: 'http://www.yubnub.org/parser/parse?command=${query}' }, { name: 'DuckDuckGo', url: 'https://duckduckgo.com/?q=${query}' }]
  },
  applications: {
    searchDirectories: [],
    applications: []
  }
};

function isOSX() {
  return process.platform === 'darwin' || !isDemo();
}

function isDemo() {
  return process.env.LACONA_ENV === 'demo';
}

/* Open */

function openURL(_ref) {
  var url = _ref.url;

  if (isOSX()) {
    global.openURL(url);
  }
}

function openFile(_ref2) {
  var path = _ref2.path;

  if (isOSX()) {
    global.openFile(path);
  }
}

/* Events */

function createEvent(_ref3) {
  var title = _ref3.title;
  var start = _ref3.start;
  var end = _ref3.end;
  var allDay = _ref3.allDay;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.createEvent(title, start, end, allDay, done);
  }
}

function createReminder(_ref4) {
  var title = _ref4.title;
  var date = _ref4.date;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.createReminder(title, date, done);
  }
}

/* Notifications */

function showNotification(_ref5) {
  var title = _ref5.title;
  var subtitle = _ref5.subtitle;
  var content = _ref5.content;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.notify(title, subtitle, content, done);
  }
}

/* Applications */

function fetchApplications(_ref6) {
  var directories = _ref6.directories;
  var appPaths = _ref6.appPaths;

  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.applications);
    });
  }

  if (isOSX()) {
    var _ret = function () {
      var _context;

      var tilde = userHome();
      var trueDirectories = _lodash2.default.map(directories, function (dir) {
        return dir.replace(/^~/, tilde);
      });
      var truePaths = _lodash2.default.map(appPaths, function (path) {
        return path.replace(/^~/, tilde);
      });
      return {
        v: (_context = querySpotlight({
          directories: trueDirectories,
          query: "kMDItemContentTypeTree == 'com.apple.application'",
          attributes: ['kMDItemDisplayName', 'kMDItemCFBundleIdentifier']
        }), _map.map).call(_context, function (data) {
          return _lodash2.default.map(data, function (_ref7) {
            var kMDItemDisplayName = _ref7.kMDItemDisplayName;
            var kMDItemCFBundleIdentifier = _ref7.kMDItemCFBundleIdentifier;
            return {
              name: kMDItemDisplayName,
              bundleId: kMDItemCFBundleIdentifier
            };
          });
        })
      };
    }();

    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
  }
}

function launchApplication(_ref8) {
  var bundleId = _ref8.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.launchApplication(bundleId, done);
  }
}

function openURLInApplication(_ref9) {
  var url = _ref9.url;
  var bundleId = _ref9.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.openURLInApplication(url, bundleId, done);
  }
}

function openFileInApplication(_ref10) {
  var path = _ref10.path;
  var bundleId = _ref10.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.openFileInApplication(path, bundleId, done);
  }
}

function bundleIdForApplication(_ref11) {
  var name = _ref11.name;

  return global.bundleIdForApplicationName(name);
}

/* Bookmarks */

function fetchBookmarks() {
  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.bookmarks);
    });
  }

  if (isOSX()) {
    var _context2;

    return (_context2 = querySpotlight({
      query: "kMDItemContentTypeTree = 'com.apple.safari.bookmark'",
      attributes: ['kMDItemDisplayName', 'kMDItemURL']
    }), _map.map).call(_context2, function (data) {
      return _lodash2.default.map(data, function (_ref12) {
        var kMDItemDisplayName = _ref12.kMDItemDisplayName;
        var kMDItemURL = _ref12.kMDItemURL;
        return {
          name: kMDItemDisplayName,
          url: kMDItemURL
        };
      });
    });
  }
}

/* Contacts */

function fetchUserContact() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.userContact);
  }

  if (isOSX()) {
    return global.userContact(done);
  }
}

function fetchContacts() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.contacts);
  }

  if (isOSX()) {
    return global.allContacts(done);
  }
}

/* Files */

function searchFiles(_ref13) {
  var query = _ref13.query;

  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.spotlightFiles);
    });
  }

  if (isOSX()) {
    var _context3;

    var escapedQuery = query.replace(/\\/g, '\\\\').replace(/"/g, '\\"');

    return (_context3 = querySpotlight({
      query: 'kMDItemFSName BEGINSWITH[cd] "' + escapedQuery + '" AND ' + 'kMDItemSupportFileType != "MDSystemFile" AND ' + 'kMDItemContentTypeTree != "com.apple.application" AND ' + 'kMDItemContentTypeTree != "com.apple.application-bundle" AND ' + 'kMDItemContentTypeTree != "com.apple.safari.bookmark" AND ' + 'kMDItemContentTypeTree != "public.contact" AND ' + 'kMDItemContentTypeTree != "com.apple.safari.history" AND ' + 'kMDItemContentTypeTree != "public.calendar-event" AND ' + 'kMDItemContentTypeTree != "com.apple.ichat.transcript"',
      attributes: ['kMDItemPath', 'kMDItemContentType'],
      limit: 10
    }), _map.map).call(_context3, function (data) {
      return _lodash2.default.map(data, function (_ref14) {
        var kMDItemPath = _ref14.kMDItemPath;
        var kMDItemContentType = _ref14.kMDItemContentType;
        return {
          path: kMDItemPath,
          contentType: kMDItemContentType
        };
      });
    });
  }
}

function fetchDirectoryContents(_ref15) {
  var path = _ref15.path;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isDemo()) {
    if (_lodash2.default.startsWith(path, '~')) {
      return done(null, global.demoData.rootFiles['/Users/LaconaUser' + path.slice(1)]);
    } else {
      return done(null, global.demoData.rootFiles[path]);
    }
  }

  if (isOSX()) {
    global.getDirectoryContents(path, done);
  }
}

function userHome() {
  if (isDemo()) {
    return '/Users/LaconaUser';
  }

  if (isOSX()) {
    return global.getUserHome();
  }
}

/* Running Apps */

function fetchRunningApplications() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.applications);
  }

  if (isOSX()) {
    return global.allRunningApps(done);
  }
}

function activateApplication(_ref16) {
  var bundleId = _ref16.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    return global.launchApplication(bundleId, done);
  }
}

function hideApplication(_ref17) {
  var bundleId = _ref17.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    return global.hideApplication(bundleId, done);
  }
}

function closeApplicationWindows(_ref18) {
  var bundleId = _ref18.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script = '\n      tell application "System Events"\n        set proc to first process whose background only is false and bundle identifier is "' + bundleId + '"\n        repeat with win in proc\'s windows\n          set butt to (win\'s first button whose subrole is "AXCloseButton")\n          click butt\n        end repeat\n      end tell\n    ';
    runApplescript({ script: _script }, done);
  }
}

function quitApplication(_ref19) {
  var bundleId = _ref19.bundleId;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.quitApplication(bundleId, function () {});
  }
}

/* Open Windows */

var openWindowFetchScript = '\n  on run\n  \ttell application "System Events"\n  \t\tset allWindows to {}\n  \t\trepeat with proc in (processes where background only is false)\n  \t\t\trepeat with win in proc\'s windows\n  \t\t\t\tif win\'s subrole is "AXStandardWindow" then\n  \t\t\t\t\tset end of allWindows to {{proc\'s id, win\'s name}, win\'s title, my hasCloseButton(win)}\n  \t\t\t\tend if\n  \t\t\tend repeat\n  \t\tend repeat\n  \tend tell\n  \treturn allWindows\n  end run\n\n  on hasCloseButton(win)\n  \ttell application "System Events"\n  \t\tif win\'s subrole is "AXStandardWindow" then\n  \t\t\trepeat with butt in win\'s buttons\n  \t\t\t\tif butt\'s subrole is "AXCloseButton" then\n  \t\t\t\t\treturn true\n  \t\t\t\tend if\n  \t\t\tend repeat\n  \t\tend if\n  \t\treturn false\n  \tend tell\n  end hasCloseButton\n';

function fetchOpenWindows() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, []);
  }

  if (isOSX()) {
    runApplescript({ script: openWindowFetchScript }, function (err, data) {
      if (err) {
        return done(err);
      } else {
        var result = _lodash2.default.map(data, _lodash2.default.partial(_lodash2.default.zipObject, ['id', 'name', 'closeable'], _lodash2.default));
        return done(null, result);
      }
    });
  }
}

function closeOpenWindow(_ref20) {
  var id = _ref20.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {}
}

function activateOpenWindow(_ref21) {
  var id = _ref21.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _id = _slicedToArray(id, 2);

    var procId = _id[0];
    var name = _id[1];


    var _script2 = '\n      tell application "System Events"\n        set proc to first process whose background only is false and id is ' + procId + '\n        set win to proc\'s first window whose name is "' + name + '"\n        perform action "AXRaise" of win\n        set proc\'s frontmost to true\n      end tell\n    ';

    runApplescript({ script: _script2 }, done);
  }
}

/* Browser Tabs */

var browserFetchScript = '\n  -- set chromeTabs to {}\n  set safariTabs to {}\n\n  -- if is_running("Google Chrome") then\n    -- set chromeTabs to run script "\n      -- set allTabs to {}\n      -- tell application \\"Google Chrome\\"\n        -- repeat with win in every window\n          -- repeat with t in win\'s tabs\n            -- set end of allTabs to {\\"Google Chrome\\", {\\"Google Chrome\\", t\'s id}, title of t}\n          -- end repeat\n        -- end repeat\n      -- end tell\n      -- return allTabs\n    -- "\n  -- end if\n\n  if is_running("Safari") then\n    set safariTabs to run script "\n      set allTabs to {}\n      tell application \\"Safari\\"\n        repeat with win in (windows where visible is true)\n          repeat with t in win\'s tabs\n            set end of allTabs to {\\"Safari\\", {\\"Safari\\", {win\'s index, t\'s index}}, t\'s name}\n          end repeat\n        end repeat\n      end tell\n      return allTabs\n    "\n  end if\n\n  on is_running(appName)\n    tell application "System Events" to (name of processes) contains appName\n  end is_running\n\n  -- return chromeTabs & safariTabs\n  return safariTabs\n';

function fetchBrowserTabs() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, []);
  }

  if (isOSX()) {
    runApplescript({ script: browserFetchScript }, function (err, data) {
      if (err) {
        return done(err);
      } else {
        var result = _lodash2.default.map(data, _lodash2.default.partial(_lodash2.default.zipObject, ['appName', 'id', 'name'], _lodash2.default));
        return done(null, result);
      }
    });
  }
}

function activateBrowserTab(id) {
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _id3 = _slicedToArray(_id2, 2);

    var appName = _id3[0];
    var _id2 = _id3[1];

    if (appName === 'Google Chrome') {
      script = '\n        tell application "Google Chrome"\n          repeat with wi from 1 to count windows\n            repeat with ti from 1 to count (window wi\'s tabs)\n              if id of window wi\'s tab ti is ' + _id2 + ' then\n                set theTab to ti\n                set theWin to wi\n              end if\n            end repeat\n          end repeat\n\n          set window theWin\'s active tab index to theTab\n          set window theWin\'s index to 1\n          activate\n        end tell\n      ';
      runApplescript({ script: script }, done);
    } else if (appName === 'Safari') {
      // TODO THIS DOES NOT WORK

      var _id4 = _slicedToArray(_id2, 2);

      var winId = _id4[0];
      var tabId = _id4[1];

      script = '\n        tell application "Safari"\n          activate\n          set win to window ' + winId + '\n          set win\'s current tab to win\'s tab ' + tabId + '\n          set win\'s index to 1\n        end tell\n      ';
      runApplescript({ script: script }, done);
    }
  }
}

function closeBrowserTab(_ref22) {
  var id = _ref22.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {}
}

/* Preference Panes */

function fetchPreferencePanes() {
  if (isDemo()) {
    return new _Observable.Observable(function (observer) {
      observer.next(demoData.preferencePanes);
    });
  }

  if (isOSX()) {
    var _context4;

    return (_context4 = querySpotlight({
      query: "kMDItemContentType == 'com.apple.systempreference.prefpane'",
      attributes: ['kMDItemDisplayName', 'kMDItemPath']
    }), _map.map).call(_context4, function (data) {
      return _lodash2.default.map(data, function (_ref23) {
        var kMDItemDisplayName = _ref23.kMDItemDisplayName;
        var kMDItemPath = _ref23.kMDItemPath;
        return { name: kMDItemDisplayName, path: kMDItemPath };
      });
    });
  }
}

/* Settings */

function setBluetooth(_ref24) {
  var enabled = _ref24.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.setBluetoothEnabled(enabled, done);
  }
}

function checkBluetooth() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    global.checkBluetoothEnabled(function (err, enabled) {
      err ? done(err) : done(null, { enabled: enabled });
    });
  }
}

function setDarkMode(_ref25) {
  var enabled = _ref25.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.setDarkModeEnabled(enabled, done);
  }
}

function checkDarkMode() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    global.checkDarkModeEnabled(function (err, enabled) {
      err ? done(err) : done(null, { enabled: enabled });
    });
  }
}
function setWifi(_ref26) {
  var enabled = _ref26.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    callSystem({
      command: '/usr/sbin/networksetup',
      args: ['-setairportpower', 'en0', enabled ? 'on' : 'off']
    }, done);
  }
}

function checkWifi() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/usr/sbin/networksetup',
      args: ['-getairportpower', 'en0']
    }, function (err, results) {
      if (err) {
        done(err);
      } else {
        var enabled = _lodash2.default.includes(results, 'On');
        done(null, { enabled: enabled });
      }
    });
  }
}

function toggleDoNotDisturbEnabled(done) {
  var script = '\n    tell application "System Events" to tell process "SystemUIServer"\n      key down option\n      click menu bar item 1 of menu bar 2\n      key up option\n    end tell\n  ';

  runApplescript({ script: script }, done);
}

function setDoNotDisturb(_ref27) {
  var enabled = _ref27.enabled;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    if (enabled) {
      callSystem({
        command: '/bin/bash',
        args: ['-c', 'defaults -currentHost write ~/Library/Preferences/ByHost/com.apple.notificationcenterui doNotDisturb -boolean true; defaults -currentHost write ~/Library/Preferences/ByHost/com.apple.notificationcenterui doNotDisturbDate -date "`date -u +\\"%Y-%m-%d %H:%M:%S +000\\"`"; killall NotificationCenter']
      }, done);
    } else {
      callSystem({
        command: '/bin/bash',
        args: ['-c', 'defaults -currentHost write ~/Library/Preferences/ByHost/com.apple.notificationcenterui doNotDisturb -boolean false; killall NotificationCenter']
      }, done);
    }
  }
}

function checkDoNotDisturb() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/usr/bin/defaults',
      args: ['-currentHost', 'read', userHome() + '/Library/Preferences/ByHost/com.apple.notificationcenterui', 'doNotDisturb']
    }, function (err, results) {
      if (err) {
        done(err);
      } else {
        var enabled = _lodash2.default.contains(results, '1');
        done(null, { enabled: enabled });
      }
    });
  }
}

function setVolume(_ref28) {
  var mute = _ref28.mute;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script3 = 'set volume ' + (mute ? 'with' : 'without') + ' output muted';
    runApplescript({ script: _script3 }, done);
  }
}

function checkVolume() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    var _script4 = 'output muted of (get volume settings)';
    runApplescript({ script: _script4 }, function (err, output) {
      if (err) {
        done(err);
      } else {
        done(null, { mute: output });
      }
    });
  }
}

function shutdown() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to shut down' }, done);
  }
}

function restart() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to restart' }, done);
  }
}

function logOut() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to log out' }, done);
  }
}

function sleep() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to sleep' }, done);
  }
}

function lock() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/System/Library/CoreServices/Menu Extras/User.menu/Contents/Resources/CGSession',
      args: ['-suspend']
    }, done);
  }
}

function hibernate() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];
}

function turnOffDisplay() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    callSystem({
      command: '/usr/bin/pmset',
      args: ['displaysleepnow']
    }, done);
  }
}

function turnOnScreensaver() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "System Events" to start current screen saver' }, done);
  }
}

function emptyTrash() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isOSX()) {
    runApplescript({ script: 'tell application "Finder" to empty the trash' }, done);
  }
}

/* Mounted Volumes */

function fetchMountedVolumes() {
  var done = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];

  if (isDemo()) {
    return done(null, global.demoData.volumes);
  }

  if (isOSX()) {
    return global.mountedVolumes(done);
  }
}

function unmountVolume(_ref29) {
  var id = _ref29.id;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script5 = 'tell application "Finder" to eject "' + id + '"';
    runApplescript({ script: _script5 }, done);
  }
}

function unmountAllVolumes(_) {
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    var _script6 = 'tell application "Finder" to eject the disks';
    runApplescript({ script: _script6 }, done);
  }
}

/* Music */

function simplifyArtist(item) {
  var albumArtist = item.albumArtist;
  var artist = item.artist;

  item.artist = albumArtist || artist;
  delete item.albumArtist;
}

function sortStringAsInteger(key) {
  return function (item) {
    return parseInt(item[key], 10);
  };
}

function arrangeOSXMusic(arrays) {
  return _lodash2.default.chain(arrays).thru(_lodash2.default.spread(_lodash2.default.zip)).map(_lodash2.default.partial(_lodash2.default.zipObject, ['name', 'album', 'artist', 'albumArtist', 'composer', 'genre', 'year', 'discNumber', 'trackNumber', 'id'])).tap(function (items) {
    return _lodash2.default.forEach(items, simplifyArtist);
  }).sortBy([simplifyArtist, sortStringAsInteger('year'), 'album', sortStringAsInteger('discNumber'), sortStringAsInteger('trackNumber'), sortStringAsInteger('id')]).value();
}

function fetchMusic(done) {
  if (isDemo()) {
    return done(null, global.demoData.music);
  }

  if (isOSX()) {
    var _script7 = 'tell application "iTunes" to get {name, album, artist, album artist, composer, genre, year, disc number, track number, database ID} of every track of first library playlist';

    runApplescript({ script: _script7 }, function (err, arrays) {
      if (err) {
        return done(err);
      }

      var arranged = arrangeOSXMusic(arrays);

      done(null, arranged);
    });
  }
}

function playSongIds(_ref30) {
  var ids = _ref30.ids;

  var script = '\n    tell application "iTunes"\n      if user playlist "Lacona Playlist" exists then\n        try\n          delete user playlist "Lacona Playlist"\n        end try\n      end if\n\n      make new user playlist with properties {name:"Lacona Playlist", shuffle: false}\n\n      repeat with tid in {' + ids.join(',') + '}\n        set trk to (some track of first user playlist whose database ID is tid)\n        duplicate trk to end of user playlist "Lacona Playlist"\n      end repeat\n\n      play user playlist "Lacona Playlist"\n    end tell\n  ';
  runApplescript({ script: script });
}

function musicPlay() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to play' });
  }
}

function musicPause() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to pause' });
  }
}

function musicNext() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to next track' });
  }
}

function musicPrevious() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to previous track' });
  }
}

function musicStop() {
  if (isOSX()) {
    runApplescript({ script: 'tell application "iTunes" to stop' });
  }
}

/* OSX specific */

function runApplescript(_ref31) {
  var script = _ref31.script;
  var done = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];

  if (isOSX()) {
    global.applescript(script, done);
  }
}

function querySpotlight(_ref32) {
  var _ref32$query = _ref32.query;
  var query = _ref32$query === undefined ? '' : _ref32$query;
  var _ref32$attributes = _ref32.attributes;
  var attributes = _ref32$attributes === undefined ? [] : _ref32$attributes;
  var _ref32$directories = _ref32.directories;
  var directories = _ref32$directories === undefined ? [] : _ref32$directories;
  var _ref32$limit = _ref32.limit;
  var limit = _ref32$limit === undefined ? 0 : _ref32$limit;
  var _ref32$liveUpdate = _ref32.liveUpdate;
  var liveUpdate = _ref32$liveUpdate === undefined ? false : _ref32$liveUpdate;

  return new _Observable.Observable(function (observer) {
    observer.next([]);

    var queryId = global.spotlight(query, attributes, directories, limit, liveUpdate, function (err, data) {
      if (err) {
        observer.error(err);
      } else {
        observer.next(data);
      }
    });

    return function () {
      return global.cancelQuery(queryId);
    };
  });
}

function callSystem(_ref33, done) {
  var command = _ref33.command;
  var _ref33$args = _ref33.args;
  var args = _ref33$args === undefined ? [] : _ref33$args;

  global.system(command, args, done);
}

/* Config and Context */

var subscription = new _Observable.Observable(function (observer) {
  var subscriptionId = void 0;

  if (isDemo()) {
    observer.next(global.demoConfig);
  } else if (isOSX()) {
    var _ret2 = function () {
      var _global$subscribeToCh = global.subscribeToChanges(function (value) {
        observer.next(value);
      });

      var subscriptionId = _global$subscribeToCh.subscriptionId;
      var value = _global$subscribeToCh.value;

      observer.next(value);
      return {
        v: function v() {
          global.removeChangeSubscription(subscriptionId);
        }
      };
    }();

    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
  }
});

function Config(_ref34) {
  var props = _ref34.props;

  return _map.map.call(subscription, function (x) {
    return x.config[props.property];
  });
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":9,"rxjs/Observable":550,"rxjs/operator/map":560}],371:[function(require,module,exports){
function describe () {
  return null
}

module.exports = {
  Application: {describe: describe},
  PreferencePane: {describe: describe},
  RunningApplication: {describe: describe},
  ContentArea: {describe: describe},
  MountedVolume: {describe: describe},
  File: {describe: describe}
}

},{}],372:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demoExecute;
function andify(array) {
  var separator = arguments.length <= 1 || arguments[1] === undefined ? ',' : arguments[1];

  if (array.length === 1) {
    return [{ text: 'a ' }, { text: array[0].name, argument: 'search engine' }, { text: ' search' }];
  } else {
    return _.chain(array).slice(0, -2).map(function (item) {
      return [{ text: item.name, argument: 'search engine' }, { text: ', ' }];
    }).flatten().concat({ text: _.slice(array, -2, -1)[0].name, argument: 'search engine' }).concat({ text: ' and ' }).concat({ text: _.slice(array, -1)[0].name, argument: 'search engine' }).concat({ text: ' searches' }).value();
  }
}

function demoExecute(result) {
  return _.flatten([{ text: 'open ', category: 'action' }, andify(result.engines), { text: ' for ' }, { text: result.query, argument: 'query' }, { text: ' in ' }, { text: 'the default web browser', argument: 'application' }]);
}
},{}],373:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.SearchInternet = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalString = require('elliptical-string');

var _laconaApi = require('lacona-api');

var _laconaCommand = require('lacona-command');

var _demo = require('./demo');

var _demo2 = _interopRequireDefault(_demo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */


var SearchEngine = {
  describe: function describe(_ref) {
    var context = _ref.context;

    var engineItems = _lodash2.default.map(context.config.webSearch.searchEngines, function (engine) {
      return { text: engine.name, value: engine };
    });

    return (0, _elliptical.createElement)(
      'repeat',
      { unique: true, separator: (0, _elliptical.createElement)('list', { items: [' and ', ', and ', ', '], limit: 1, category: 'conjunction' }) },
      (0, _elliptical.createElement)(
        'label',
        { text: 'search engine', suppressEmpty: false },
        (0, _elliptical.createElement)('list', { items: engineItems, limit: 10, fuzzy: true })
      )
    );
  }
};

var Query = {
  describe: function describe() {
    return (0, _elliptical.createElement)(_ellipticalString.String, { limit: 1, argument: 'query' });
  }
};

var SearchInternet = exports.SearchInternet = {
  extends: [_laconaCommand.Command],

  execute: function execute(result) {
    var query = encodeURIComponent(result.query);
    _lodash2.default.forEach(result.engines, function (_ref2) {
      var url = _ref2.url;

      var trueURL = url.replace('${query}', query);
      (0, _laconaApi.openURL)({ url: trueURL });
    });
  },

  demoExecute: _demo2.default,

  describe: function describe() {
    return (0, _elliptical.createElement)(
      'choice',
      { limit: 1 },
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'search ', category: 'action' }),
        (0, _elliptical.createElement)(SearchEngine, { id: 'engines' }),
        (0, _elliptical.createElement)('literal', { text: ' ' }),
        (0, _elliptical.createElement)('literal', { text: 'for ', decorate: true }),
        (0, _elliptical.createElement)(Query, { id: 'query' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        null,
        (0, _elliptical.createElement)('literal', { text: 'search ', category: 'action' }),
        (0, _elliptical.createElement)('literal', { text: 'for ', category: 'conjunction', optional: true, limited: true, prefered: true }),
        (0, _elliptical.createElement)(Query, { id: 'query' }),
        (0, _elliptical.createElement)('list', { items: [' on ', ' with ', ' using '], category: 'conjunction', limit: 1, score: 100 }),
        (0, _elliptical.createElement)(SearchEngine, { id: 'engines' })
      )
    );
  }
};

var extensions = exports.extensions = [SearchInternet];
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo":372,"elliptical":231,"elliptical-string":223,"lacona-api":374,"lacona-command":342}],374:[function(require,module,exports){
arguments[4][345][0].apply(exports,arguments)
},{"_process":9,"dup":345,"rxjs/Observable":550,"rxjs/operator/map":560}],375:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = exports.MuteCommand = exports.DoNotDisturbCommand = exports.MuteSetting = exports.WifiSetting = exports.DoNotDisturbSetting = exports.DarkModeSetting = exports.BluetoothSetting = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /** @jsx createElement */

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _elliptical = require('elliptical');

var _ellipticalDatetime = require('elliptical-datetime');

var _laconaPhrases = require('lacona-phrases');

var _laconaCommand = require('lacona-command');

var _laconaApi = require('lacona-api');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EnabledSettingObject = function () {
  //Abstract

  function EnabledSettingObject() {
    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var _ref$invert = _ref.invert;
    var invert = _ref$invert === undefined ? false : _ref$invert;

    _classCallCheck(this, EnabledSettingObject);

    this.invert = !!invert;
  }

  _createClass(EnabledSettingObject, [{
    key: 'enable',
    value: function enable() {
      this.setEnabled(!this.invert);
    }
  }, {
    key: 'disable',
    value: function disable() {
      this.setEnabled(this.invert);
    }
  }, {
    key: 'toggle',
    value: function toggle() {
      var _this = this;

      this.checkEnabled(function (err, _ref2) {
        var enabled = _ref2.enabled;

        if (err) {
          return console.error(err);
        } else {
          _this.setEnabled(!enabled);
        }
      });
    }
  }]);

  return EnabledSettingObject;
}();

var BluetoothEnabledObject = function (_EnabledSettingObject) {
  _inherits(BluetoothEnabledObject, _EnabledSettingObject);

  function BluetoothEnabledObject() {
    var _Object$getPrototypeO;

    var _temp, _this2, _ret;

    _classCallCheck(this, BluetoothEnabledObject);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(BluetoothEnabledObject)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this2), _this2.name = 'bluetooth', _temp), _possibleConstructorReturn(_this2, _ret);
  }

  _createClass(BluetoothEnabledObject, [{
    key: 'setEnabled',
    value: function setEnabled(enabled) {
      (0, _laconaApi.setBluetooth)({ enabled: enabled });
    }
  }, {
    key: 'checkEnabled',
    value: function checkEnabled(done) {
      (0, _laconaApi.checkBluetooth)(done);
    }
  }]);

  return BluetoothEnabledObject;
}(EnabledSettingObject);

var DarkModeEnabledObject = function (_EnabledSettingObject2) {
  _inherits(DarkModeEnabledObject, _EnabledSettingObject2);

  function DarkModeEnabledObject() {
    var _Object$getPrototypeO2;

    var _temp2, _this3, _ret2;

    _classCallCheck(this, DarkModeEnabledObject);

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _ret2 = (_temp2 = (_this3 = _possibleConstructorReturn(this, (_Object$getPrototypeO2 = Object.getPrototypeOf(DarkModeEnabledObject)).call.apply(_Object$getPrototypeO2, [this].concat(args))), _this3), _this3.name = 'dark mode', _temp2), _possibleConstructorReturn(_this3, _ret2);
  }

  _createClass(DarkModeEnabledObject, [{
    key: 'setEnabled',
    value: function setEnabled(enabled) {
      (0, _laconaApi.setDarkMode)({ enabled: enabled });
    }
  }, {
    key: 'checkEnabled',
    value: function checkEnabled(done) {
      (0, _laconaApi.checkDarkMode)(done);
    }
  }]);

  return DarkModeEnabledObject;
}(EnabledSettingObject);

var DoNotDisturbEnabledObject = function (_EnabledSettingObject3) {
  _inherits(DoNotDisturbEnabledObject, _EnabledSettingObject3);

  function DoNotDisturbEnabledObject() {
    var _Object$getPrototypeO3;

    var _temp3, _this4, _ret3;

    _classCallCheck(this, DoNotDisturbEnabledObject);

    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _ret3 = (_temp3 = (_this4 = _possibleConstructorReturn(this, (_Object$getPrototypeO3 = Object.getPrototypeOf(DoNotDisturbEnabledObject)).call.apply(_Object$getPrototypeO3, [this].concat(args))), _this4), _this4.name = 'Do Not Disturb', _temp3), _possibleConstructorReturn(_this4, _ret3);
  }

  _createClass(DoNotDisturbEnabledObject, [{
    key: 'setEnabled',
    value: function setEnabled(enabled) {
      (0, _laconaApi.setDoNotDisturb)({ enabled: enabled });
    }
  }, {
    key: 'checkEnabled',
    value: function checkEnabled(done) {
      (0, _laconaApi.checkDoNotDisturb)(done);
    }
  }]);

  return DoNotDisturbEnabledObject;
}(EnabledSettingObject);

var WifiEnabledObject = function (_EnabledSettingObject4) {
  _inherits(WifiEnabledObject, _EnabledSettingObject4);

  function WifiEnabledObject() {
    var _Object$getPrototypeO4;

    var _temp4, _this5, _ret4;

    _classCallCheck(this, WifiEnabledObject);

    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }

    return _ret4 = (_temp4 = (_this5 = _possibleConstructorReturn(this, (_Object$getPrototypeO4 = Object.getPrototypeOf(WifiEnabledObject)).call.apply(_Object$getPrototypeO4, [this].concat(args))), _this5), _this5.name = 'Wifi', _temp4), _possibleConstructorReturn(_this5, _ret4);
  }

  _createClass(WifiEnabledObject, [{
    key: 'setEnabled',
    value: function setEnabled(enabled) {
      (0, _laconaApi.setWifi)({ enabled: enabled });
    }
  }, {
    key: 'checkEnabled',
    value: function checkEnabled(done) {
      (0, _laconaApi.checkWifi)(done);
    }
  }]);

  return WifiEnabledObject;
}(EnabledSettingObject);

var MuteEnabledObject = function (_EnabledSettingObject5) {
  _inherits(MuteEnabledObject, _EnabledSettingObject5);

  function MuteEnabledObject() {
    _classCallCheck(this, MuteEnabledObject);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(MuteEnabledObject).apply(this, arguments));
  }

  _createClass(MuteEnabledObject, [{
    key: 'setEnabled',
    value: function setEnabled(mute) {
      (0, _laconaApi.setVolume)({ mute: mute });
    }
  }, {
    key: 'checkEnabled',
    value: function checkEnabled(done) {
      (0, _laconaApi.checkVolume)(function (err, _ref3) {
        var mute = _ref3.mute;

        done(err, { enabled: mute });
      });
    }
  }]);

  return MuteEnabledObject;
}(EnabledSettingObject);

function createSetting(mapResult, element) {
  return {
    extends: [_laconaCommand.BooleanSetting],
    mapResult: mapResult,
    describe: function describe() {
      return (0, _elliptical.createElement)(
        'label',
        { text: 'setting' },
        element
      );
    }
  };
}

var BluetoothSetting = exports.BluetoothSetting = createSetting(function (result) {
  return new BluetoothEnabledObject(result);
}, (0, _elliptical.createElement)('literal', { text: 'bluetooth' }));

var DarkModeSetting = exports.DarkModeSetting = createSetting(function (result) {
  return new DarkModeEnabledObject(result);
}, (0, _elliptical.createElement)('list', { items: [{ text: 'dark mode' }, { text: 'light mode', value: { invert: true } }] }));

var DoNotDisturbSetting = exports.DoNotDisturbSetting = createSetting(function (result) {
  return new DoNotDisturbEnabledObject(result);
}, (0, _elliptical.createElement)('list', { limit: 1, items: [{ text: 'Do Not Disturb' }, { text: 'notifications', value: { invert: true } }] }));

var WifiSetting = exports.WifiSetting = createSetting(function (result) {
  return new WifiEnabledObject(result);
}, (0, _elliptical.createElement)('literal', { text: 'wifi' }));

var MuteSetting = exports.MuteSetting = createSetting(function (result) {
  return new MuteEnabledObject(result);
}, (0, _elliptical.createElement)('list', { limit: 2, items: [{ text: 'mute' }, { text: 'sound', value: { invert: true } }, { text: 'the sound', value: { invert: true } }, { text: 'audio', value: { invert: true } }] }));

var DoNotDisturbCommand = exports.DoNotDisturbCommand = {
  extends: [_laconaCommand.Command],

  execute: function execute() {
    (0, _laconaApi.setDoNotDisturb)({ enabled: true });
  },
  demoExecute: function demoExecute() {
    return [{ text: 'turn on ', category: 'action' }, { text: 'Do Not Disturb', argument: 'setting' }];
  },
  describe: function describe() {
    return (0, _elliptical.createElement)('list', { items: ['do not disturb', 'do not disturb me'], limit: 1, category: 'action' });
  }
};

var MuteCommand = exports.MuteCommand = {
  extends: [_laconaCommand.Command],

  demoExecute: function demoExecute(result) {
    return [{ text: result ? 'mute' : 'unmute', category: 'action' }, { text: ' the audio' }];
  },
  execute: function execute(result) {
    (0, _laconaApi.setVolume)({ mute: result });
  },
  describe: function describe() {
    return (0, _elliptical.createElement)('list', { items: [{ text: 'mute', value: true }, { text: 'unmute', value: false }], limit: 1, category: 'action' });
  }
};

var extensions = exports.extensions = [BluetoothSetting, DarkModeSetting, WifiSetting, DoNotDisturbSetting, MuteSetting, DoNotDisturbCommand, MuteCommand];

// export default {
//   sentences: [OpenApp],
//   translations: [{
//     langs: ['en', 'default'],
//     information: {
//       title: 'Open Application',
//       description: 'Quickly launch applications on your computer',
//       examples: ['open Safari', 'open Contacts']
//     }
//   }]
// }
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"elliptical":231,"elliptical-datetime":14,"lacona-api":376,"lacona-command":342,"lacona-phrases":371}],376:[function(require,module,exports){
arguments[4][345][0].apply(exports,arguments)
},{"_process":9,"dup":345,"rxjs/Observable":550,"rxjs/operator/map":560}],377:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = demoExecute;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function andify(array) {
  var separator = arguments.length <= 1 || arguments[1] === undefined ? ',' : arguments[1];

  if (array.length === 1) {
    return { text: array[0].name, argument: 'language' };
  } else {
    return _lodash2.default.chain(array).slice(0, -2).map(function (item) {
      return [{ text: item.name, argument: 'language' }, { text: ', ' }];
    }).flatten().concat({ text: _lodash2.default.slice(array, -2, -1)[0].name, argument: 'language' }).concat({ text: ' and ' }).concat({ text: _lodash2.default.slice(array, -1)[0].name, argument: 'language' }).value();
  }
}

function demoExecute(result) {
  var message = void 0;
  result = _lodash2.default.defaults({}, result, {
    to: [{ name: 'English', code: 'en' }],
    from: { name: 'an automatically detected language', code: 'auto' }
  });

  if (result.to.length === 1) {
    if (result.phrase) {
      message = [{ text: 'a Google translation of ' }, { text: result.phrase, argument: 'phrase' }];
    } else if (result.url) {
      message = [{ text: 'version of ' }, { text: result.url, argument: 'url' }, { text: ' Google translated' }];
    }
  } else {
    if (result.phrase) {
      message = [{ text: 'Google translations of ' }, { text: result.phrase, argument: 'phrase' }];
    } else if (result.url) {
      message = [{ text: 'Google translated versions of ' }, { text: result.url, argument: 'url' }];
    }
  }

  return _lodash2.default.flatten([{ text: 'open ', category: 'action' }, message, { text: ' from ' }, { text: result.from.name, argument: 'language' }, { text: ' to ' }, andify(result.to), { text: ' in ' }, { text: 'the default browser', argument: 'application' }]);
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],378:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extensions = undefined;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _ellipticalUrl = require('elliptical-url');

var _ellipticalString = require('elliptical-string');

var _elliptical = require('elliptical');

var _laconaApi = require('lacona-api');

var _laconaCommand = require('lacona-command');

var _demo = require('./demo');

var _demo2 = _interopRequireDefault(_demo);

var _languages = require('./languages');

var _languages2 = _interopRequireDefault(_languages);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx createElement */

var Language = {
  describe: function describe() {
    var items = _lodash2.default.map(_languages2.default, function (_ref) {
      var name = _ref.name;
      var code = _ref.code;
      return {
        text: name,
        value: { name: name, code: code }
      };
    });

    return (0, _elliptical.createElement)(
      'label',
      { text: 'language' },
      (0, _elliptical.createElement)('list', { limit: 10, items: items })
    );
  }
};

var Translate = {
  extends: [_laconaCommand.Command],
  demoExecute: _demo2.default,
  execute: function execute(result) {
    result = _lodash2.default.defaults({}, result, {
      to: [{ name: 'English', code: 'en' }],
      from: { name: 'Auto', code: 'auto' }
    });

    _lodash2.default.forEach(result.to, function (to) {
      var url = void 0;
      if (result.phrase) {
        url = 'https://translate.google.com/#' + result.from.code + '/' + to.code + '/' + encodeURIComponent(result.phrase);
      } else if (result.url) {
        url = 'https://translate.google.com/translate?sl=' + result.from.code + '&tl=' + to.code + '&u=' + encodeURIComponent(result.url);
      }

      (0, _laconaApi.openURL)({ url: url });
    });
  },
  describe: function describe() {
    return (0, _elliptical.createElement)(
      'sequence',
      null,
      (0, _elliptical.createElement)('literal', { text: 'translate ', category: 'action' }),
      (0, _elliptical.createElement)(
        'choice',
        { merge: true },
        (0, _elliptical.createElement)(_ellipticalUrl.URL, { id: 'url', splitOn: ' ' }),
        (0, _elliptical.createElement)(_ellipticalString.String, { argument: 'phrase', id: 'phrase', limit: 1, splitOn: ' ' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { optional: true, merge: true },
        (0, _elliptical.createElement)('literal', { text: ' from ', category: 'conjunction' }),
        (0, _elliptical.createElement)(Language, { id: 'from' })
      ),
      (0, _elliptical.createElement)(
        'sequence',
        { optional: true, merge: true },
        (0, _elliptical.createElement)('literal', { text: ' to ' }),
        (0, _elliptical.createElement)(
          'repeat',
          { separator: (0, _elliptical.createElement)('list', { items: [', ', ' and ', ', and '], category: 'conjunction', limit: 1 }), id: 'to', unique: true },
          (0, _elliptical.createElement)(Language, null)
        )
      )
    );
  }
};

var extensions = exports.extensions = [Translate];
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./demo":377,"./languages":379,"elliptical":231,"elliptical-string":223,"elliptical-url":225,"lacona-api":380,"lacona-command":342}],379:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = [{ name: 'Afrikaans', code: 'af' }, { name: 'Albanian', code: 'sq' }, { name: 'Amharic', code: 'am' }, { name: 'Arabic', code: 'ar' }, { name: 'Armenian', code: 'hy' }, { name: 'Azerbaijani', code: 'az' }, { name: 'Basque', code: 'eu' }, { name: 'Belarusian', code: 'be' }, { name: 'Bengali', code: 'bn' }, { name: 'Bosnian', code: 'bs' }, { name: 'Bulgarian', code: 'bg' }, { name: 'Burmese', code: 'my' }, { name: 'Catalan', code: 'ca' }, { name: 'Cebuano', code: 'ceb' }, { name: 'Chichewa', code: 'ny' }, { name: 'Chinese', code: 'zh-CN' }, { name: 'Chinese (Simplified)', code: 'zh-CN' }, { name: 'Chinese (Traditional)', code: 'zh-TW' }, { name: 'Corsican', code: 'co' }, { name: 'Creole', code: 'ht' }, { name: 'Croatian', code: 'hr' }, { name: 'Czech', code: 'cs' }, { name: 'Danish', code: 'da' }, { name: 'Dutch', code: 'nl' }, { name: 'English', code: 'en' }, { name: 'Esperanto', code: 'eo' }, { name: 'Estonian', code: 'et' }, { name: 'Filipino', code: 'tl' }, { name: 'Finnish', code: 'fi' }, { name: 'Frisian', code: 'fy' }, { name: 'French', code: 'fr' }, { name: 'Galician', code: 'gl' }, { name: 'Georgian', code: 'ka' }, { name: 'German', code: 'de' }, { name: 'Greek', code: 'el' }, { name: 'Gujarati', code: 'gu' }, { name: 'Haitian Creole', code: 'ht' }, { name: 'Hausa', code: 'ha' }, { name: 'Hawaiian', code: 'haw' }, { name: 'Hebrew', code: 'iw' }, { name: 'Hindi', code: 'hi' }, { name: 'Hmong', code: 'hmn' }, { name: 'Hungarian', code: 'hu' }, { name: 'Farsi', code: 'fa' }, { name: 'Icelandic', code: 'is' }, { name: 'Igbo', code: 'ig' }, { name: 'Indonesian', code: 'id' }, { name: 'Irish', code: 'ga' }, { name: 'Italian', code: 'it' }, { name: 'Japanese', code: 'ja' }, { name: 'Javanese', code: 'jw' }, { name: 'Kannada', code: 'kn' }, { name: 'Kazakh', code: 'kk' }, { name: 'Khmer', code: 'km' }, { name: 'Korean', code: 'ko' }, { name: 'Kurdish', code: 'ku' }, { name: 'Kurmanji', code: 'ku' }, { name: 'Kyrgyz', code: 'ky' }, { name: 'Lao', code: 'lo' }, { name: 'Latin', code: 'la' }, { name: 'Latvian', code: 'lv' }, { name: 'Lithuanian', code: 'lt' }, { name: 'Luxembourgish', code: 'lb' }, { name: 'Macedonian', code: 'mk' }, { name: 'Malagasy', code: 'mg' }, { name: 'Malay', code: 'ms' }, { name: 'Malayalam', code: 'ml' }, { name: 'Maltese', code: 'mt' }, { name: 'Maori', code: 'mi' }, { name: 'Marathi', code: 'mr' }, { name: 'Mongolian', code: 'mn' }, { name: 'Myanmar', code: 'my' }, { name: 'Nepali', code: 'ne' }, { name: 'Norwegian', code: 'no' }, { name: 'Pashto', code: 'ps' }, { name: 'Persian', code: 'fa' }, { name: 'Polish', code: 'pl' }, { name: 'Portuguese', code: 'pt' }, { name: 'Punjabi', code: 'pa' }, { name: 'Romanian', code: 'ro' }, { name: 'Russian', code: 'ru' }, { name: 'Samoan', code: 'sm' }, { name: 'Scots Gaelic', code: 'gd' }, { name: 'Scots', code: 'gd' }, { name: 'Serbian', code: 'sr' }, { name: 'Sesotho', code: 'st' }, { name: 'Simplified Chinese', code: 'zh-CN' }, { name: 'Shona', code: 'sn' }, { name: 'Sindhi', code: 'sd' }, { name: 'Sinhala', code: 'si' }, { name: 'Slovak', code: 'sk' }, { name: 'Slovenian', code: 'sl' }, { name: 'Somali', code: 'so' }, { name: 'Spanish', code: 'es' }, { name: 'Sundanese', code: 'su' }, { name: 'Swahili', code: 'sw' }, { name: 'Swedish', code: 'sv' }, { name: 'Tajik', code: 'tg' }, { name: 'Tamil', code: 'ta' }, { name: 'Telugu', code: 'te' }, { name: 'Traditional Chinese', code: 'zh-TW' }, { name: 'Thai', code: 'th' }, { name: 'Turkish', code: 'tr' }, { name: 'Ukrainian', code: 'uk' }, { name: 'Urdu', code: 'ur' }, { name: 'Uzbek', code: 'uz' }, { name: 'Vietnamese', code: 'vi' }, { name: 'Welsh', code: 'cy' }, { name: 'Xhosa', code: 'xh' }, { name: 'Yiddish', code: 'yi' }, { name: 'Yoruba', code: 'yo' }, { name: 'Zulu', code: 'zu' }];
},{}],380:[function(require,module,exports){
arguments[4][345][0].apply(exports,arguments)
},{"_process":9,"dup":345,"rxjs/Observable":550,"rxjs/operator/map":560}],381:[function(require,module,exports){
'use strict';

module.exports = require('react/lib/ReactDOM');

},{"react/lib/ReactDOM":419}],382:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Input = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Input = exports.Input = function (_React$Component) {
  _inherits(Input, _React$Component);

  function Input() {
    _classCallCheck(this, Input);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Input).apply(this, arguments));
  }

  _createClass(Input, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.autoFocus) {
        (0, _reactDom.findDOMNode)(this).focus();
      }
    }
  }, {
    key: 'change',
    value: function change(e) {
      this.props.update(e.target.value);
    }
  }, {
    key: 'focus',
    value: function focus() {
      (0, _reactDom.findDOMNode)(this.refs.input).focus();
    }
  }, {
    key: 'focusEnd',
    value: function focusEnd() {
      var elem = (0, _reactDom.findDOMNode)(this.refs.input);
      var pos = this.props.userInput.length;

      if (elem.createTextRange) {
        var range = elem.createTextRange();
        range.move('character', pos);
        range.select();
      } else {
        if (elem.selectionStart) {
          elem.focus();
          elem.setSelectionRange(pos, pos);
        } else {
          elem.focus();
        }
      }
      elem.scrollLeft = elem.scrollWidth; //just pretty big
    }
  }, {
    key: 'blur',
    value: function blur() {
      (0, _reactDom.findDOMNode)(this.refs.input).blur();
    }
  }, {
    key: 'keyDown',
    value: function keyDown(e) {
      this.props.userInteracted();
      if (e.keyCode === 9) {
        // tab
        this.props.completeSelection();
      } else if (!e.shiftKey && !e.metaKey && !e.altKey && !e.ctrlKey && e.keyCode === 38 || !e.shiftKey && !e.metaKey && !e.altKey && e.ctrlKey && e.keyCode === 75) {
        // up or ^k
        this.props.moveSelection(-1);
      } else if (!e.shiftKey && !e.metaKey && !e.altKey && !e.ctrlKey && e.keyCode === 40 || !e.shiftKey && !e.metaKey && !e.altKey && e.ctrlKey && e.keyCode === 74) {
        //down or ^j
        this.props.moveSelection(1);
      } else if (e.keyCode === 13) {
        // return
        this.props.execute();
      } else if (e.keyCode === 27) {
        // escape
        this.props.cancel();
      } else if (!e.shiftKey && !e.metaKey && !e.altKey && !e.ctrlKey && e.keyCode === 39 || !e.shiftKey && !e.metaKey && !e.altKey && e.ctrlKey && e.keyCode === 76) {
        //right or ^l
        var node = (0, _reactDom.findDOMNode)(this.refs.input);
        if (node.selectionStart === node.selectionEnd && node.selectionStart === this.props.userInput.length) {
          this.props.completeSelection();
        } else {
          if (node.selectionStart === node.selectionEnd) {
            node.setSelectionRange(node.selectionStart + 1, node.selectionStart + 1);
          } else {
            node.setSelectionRange(node.selectionEnd, node.selectionEnd);
          }
        }
      } else if (!e.shiftKey && !e.metaKey && !e.altKey && !e.ctrlKey && e.keyCode === 37 || !e.shiftKey && !e.metaKey && !e.altKey && e.ctrlKey && e.keyCode === 72) {
        //left or ^h
        var _node = (0, _reactDom.findDOMNode)(this.refs.input);
        if (_node.selectionStart === _node.selectionEnd && _node.selectionStart >= 1) {
          _node.setSelectionRange(_node.selectionStart - 1, _node.selectionStart - 1);
        } else {
          _node.setSelectionRange(_node.selectionStart, _node.selectionStart);
        }
      } else if (e.altKey && !e.shiftKey && !e.metaKey && !e.ctrlKey && e.keyCode >= 49 && e.keyCode <= 57) {
        this.props.execute(e.keyCode - 49);
      } else {
        return;
      }
      e.preventDefault();
      e.stopPropagation();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement('input', {
        type: 'text',
        className: 'input',
        ref: 'input',
        tabIndex: this.props.tabIndex,
        autoCorrect: false,
        spellCheck: false,
        autoCapitalize: false,
        value: this.props.userInput,
        onChange: this.change.bind(this),
        onKeyDown: this.keyDown.bind(this),
        onFocus: this.props.onFocus,
        onBlur: this.props.onBlur,
        onClick: this.props.userInteracted,
        placeholder: this.props.placeholder });
    }
  }]);

  return Input;
}(_react2.default.Component);
},{"react":548,"react-dom":381}],383:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LaconaView = exports.hashArgument = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _option = require('./option');

Object.defineProperty(exports, 'hashArgument', {
  enumerable: true,
  get: function get() {
    return _option.hashArgument;
  }
});

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _options = require('./options');

var _input = require('./input');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function bound(number, max) {
  return Math.max(Math.min(number, max - 1), 0);
}

var LaconaView = exports.LaconaView = function (_React$Component) {
  _inherits(LaconaView, _React$Component);

  function LaconaView(props) {
    _classCallCheck(this, LaconaView);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(LaconaView).call(this, props));

    _this.setByMouse = false;

    _this.blurMatters = true;

    var hasOutputs = props.length > 0;
    _this.state = { selection: hasOutputs ? 0 : -1 };
    return _this;
  }

  _createClass(LaconaView, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var hasOutputs = nextProps.outputs.length > 0;
      this.setState({ selection: hasOutputs ? bound(this.state.selection, nextProps.outputs.length) : -1 });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.state.selection > -1 && !this.setByMouse) {
        var optionsDOM = (0, _reactDom.findDOMNode)(this.options);
        var optionsRect = optionsDOM.getBoundingClientRect();
        var option = this.options.getOption(this.state.selection);
        if (option) {
          var selectedRect = (0, _reactDom.findDOMNode)(option).getBoundingClientRect();
          if (selectedRect.top < optionsRect.top) {
            optionsDOM.scrollTop -= optionsRect.top - selectedRect.top;
          } else if (selectedRect.bottom > optionsRect.bottom) {
            optionsDOM.scrollTop += selectedRect.bottom - optionsRect.bottom;
          }
        }
      }
      this.props.change();
    }
  }, {
    key: 'completeSelection',
    value: function completeSelection() {
      var index = arguments.length <= 0 || arguments[0] === undefined ? this.state.selection : arguments[0];

      if (index > -1) {
        var result = this.props.outputs[index];
        var newString = _lodash2.default.chain(result.words).takeWhile(function (item) {
          return !item.placeholder;
        }).map('text').join('').value();

        this.props.clearPrefix();

        this.update(newString);
      }
    }
  }, {
    key: 'moveSelection',
    value: function moveSelection(steps) {
      this.setByMouse = false;
      var selection = bound(this.state.selection + steps, this.props.outputs.length);
      this.setState({ selection: selection });
    }
  }, {
    key: 'execute',
    value: function execute() {
      var index = arguments.length <= 0 || arguments[0] === undefined ? this.state.selection : arguments[0];

      if (index > -1) {
        var result = this.props.outputs[index];
        if (!result) return;

        if (_lodash2.default.some(result.words, 'placeholder')) {
          this.completeSelection(index);
          this.input.focusEnd();
        } else {
          this.update('');
          this.setState({ showHints: false });
          this.props.execute(index);
          this.props.onBlur();
        }
      }
    }
  }, {
    key: 'select',
    value: function select(index) {
      this.setByMouse = true;
      var selection = bound(index, this.props.outputs.length);
      this.setState({ selection: selection });
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.props.cancel();
    }
  }, {
    key: 'update',
    value: function update(newText) {
      this.props.update(newText);
    }
  }, {
    key: 'focusEnd',
    value: function focusEnd() {
      this.input.focusEnd();
    }
  }, {
    key: 'onFocus',
    value: function onFocus(event) {
      this.setState({ showHints: true });
      this.props.onFocus(event);
    }
  }, {
    key: 'onBlur',
    value: function onBlur(event) {
      if (!this.blurMatters) return;
      this.setState({ showHints: false });
      this.props.onBlur(event);
    }
  }, {
    key: 'mouseDown',
    value: function mouseDown() {
      this.blurMatters = false;
      this.props.userInteracted();
    }
  }, {
    key: 'mouseUp',
    value: function mouseUp() {
      this.blurMatters = true;
    }
  }, {
    key: 'focus',
    value: function focus() {
      this.input.focus();
    }
  }, {
    key: 'blur',
    value: function blur() {
      this.input.blur();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        { className: 'lacona-view' },
        _react2.default.createElement(_input.Input, {
          ref: function ref(c) {
            return _this2.input = c;
          },
          update: this.update.bind(this),
          prefix: this.props.prefix,
          suffix: this.props.suffix,
          tabIndex: this.props.tabIndex,
          completeSelection: this.completeSelection.bind(this),
          moveSelection: this.moveSelection.bind(this),
          userInput: this.props.userInput,
          execute: this.execute.bind(this),
          cancel: this.cancel.bind(this),
          onFocus: this.onFocus.bind(this),
          onBlur: this.onBlur.bind(this),
          userInteracted: this.props.userInteracted,
          placeholder: this.props.placeholder }),
        _react2.default.createElement(_options.Options, {
          ref: function ref(c) {
            return _this2.options = c;
          },
          outputs: this.props.outputs,
          selection: this.state.selection,
          execute: this.execute.bind(this),
          select: this.select.bind(this),
          showHints: this.state.showHints,
          onMouseDown: this.mouseDown.bind(this),
          onMouseUp: this.mouseUp.bind(this) })
      );
    }
  }]);

  return LaconaView;
}(_react2.default.Component);

LaconaView.defaultProps = {
  outputs: [],
  update: function update() {},
  cancel: function cancel() {},
  change: function change() {},
  execute: function execute() {},
  select: function select() {},
  onFocus: function onFocus() {},
  onBlur: function onBlur() {},
  userInteracted: function userInteracted() {},
  clearPrefix: function clearPrefix() {}
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./input":382,"./option":384,"./options":385,"react":548,"react-dom":381}],384:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Option = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.hashArgument = hashArgument;

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SPECIALCASES = {
  URL: 1,
  bookmark: 2,
  song: 2,
  contact: 1,
  relationship: 3,
  'reminder title': 0
};

function hashArgument(str) {
  var specialCase = SPECIALCASES[str];
  if (specialCase != null) return specialCase;

  if (!str || str === '') return -1;

  return Math.abs(str.split('').reduce(function (a, b) {
    a = (a << 5) - a + b.charCodeAt(0);
    return a & a;
  }, 0)) % 8;
}

var Placeholder = function (_React$Component) {
  _inherits(Placeholder, _React$Component);

  function Placeholder() {
    _classCallCheck(this, Placeholder);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Placeholder).apply(this, arguments));
  }

  _createClass(Placeholder, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'placeholder' },
        _lodash2.default.chain(this.props.item.placeholderTexts).map(function (desc, index) {
          var className = 'placeholder-component category-argument' + hashArgument(desc);
          return [_react2.default.createElement(
            'div',
            { className: 'placeholder-component category-conjunction', key: index + ',' },
            ', '
          ), _react2.default.createElement(
            'div',
            { className: className, key: index },
            desc
          )];
        }).flatten().tail().value()
      );
    }
  }]);

  return Placeholder;
}(_react2.default.Component);
//
// function getCorners(elem, parentBoundingRect) {
//   const rects = elem.getClientRects()
//   const bounds = elem.getBoundingClientRect()
//
//   return {
//     topLeft: rects[0].left - parentBoundingRect.left,
//     topTop: rects[0].top - parentBoundingRect.top,
//     bottomRight: _.last(rects).right - parentBoundingRect.left,
//     bottomTop: _.last(rects).top - parentBoundingRect.top,
//     boundRight: bounds.right - parentBoundingRect.left,
//     wrapped: rects.length > 1
//   }
// }

var Option = exports.Option = function (_React$Component2) {
  _inherits(Option, _React$Component2);

  function Option() {
    _classCallCheck(this, Option);

    var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Option).call(this));

    _this2.updateCount = 0;
    return _this2;
  }

  _createClass(Option, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.componentDidUpdate();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var nextProps = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      var words = (0, _reactDom.findDOMNode)(this.refs.words);
      var descs = (0, _reactDom.findDOMNode)(this.refs.descriptors);
      var wordsRect = words.getBoundingClientRect();

      var all = _lodash2.default.zip(_lodash2.default.toArray(words.children), _lodash2.default.toArray(descs.children));

      _lodash2.default.forEach(all, function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2);

        var word = _ref2[0];
        var desc = _ref2[1];

        var rects = word.getClientRects();
        var rect = rects[0]; //use _.last for RTL
        var lines = _lodash2.default.groupBy(rects, 'top');
        var keys = Object.keys(lines);
        if (keys.length > 1) {
          var firstLineRects = lines[keys[0]];
          var secondLineRects = lines[keys[1]];
          if (_lodash2.default.last(firstLineRects).right - firstLineRects[0].left < 50 && _lodash2.default.last(secondLineRects).right - secondLineRects[0].left >= 50) {
            rect = secondLineRects[0];
          }
        }

        desc.style.left = rect.left - wordsRect.left + 'px';
        // // RTL
        // desc.style.right = `${wordsRect.right - rect.right}px`
        // 9 for Lacona, 6 for Lacona.io
        desc.style.top = rect.top - wordsRect.top + 9 + 'px';
      });
    }
  }, {
    key: 'handleMouseMove',
    value: function handleMouseMove(e) {
      var coords = [e.pageX, e.pageY];
      if (this.props.mouseMoved(coords)) {
        this.props.select();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var itemGroups = _lodash2.default.chain(this.props.option.words).reduce(function (acc, item) {
        var last = _lodash2.default.last(_lodash2.default.last(acc));
        if (last && last.argument === item.argument) {
          _lodash2.default.last(acc).push(item);
        } else {
          acc.push([item]);
        }
        return acc;
      }, []).value();

      var descriptors = _lodash2.default.chain(itemGroups).map(function (itemGroup, index) {
        if (itemGroup.length === 1 && itemGroup[0].placeholder) {
          return _react2.default.createElement('div', { className: 'descriptor', key: index });
        } else {
          var first = _lodash2.default.first(itemGroup);
          var _className = 'descriptor category-argument' + hashArgument(first.argument) + ' category-' + first.category;
          return _react2.default.createElement(
            'div',
            { className: _className, key: index },
            first.argument
          );
        }
      })
      // .map(elem => [<div className='spacer-left' />, elem, <div className='spacer-right' />])
      .flatten().value();

      var words = _lodash2.default.map(itemGroups, function (itemGroup, index) {
        var first = _lodash2.default.first(itemGroup);
        var className = 'word category-argument' + hashArgument(first.argument);

        return _react2.default.createElement(
          'div',
          { className: className, key: index },
          _lodash2.default.map(itemGroup, function (item, index) {
            if (item.placeholder) {
              return _react2.default.createElement(Placeholder, { item: item, key: index });
            } else {
              var _className2 = 'word-component' + (item.input ? ' highlighted' : '') + ' category-' + item.category + (item.fallthrough ? ' fallthrough' : '') + (item.decorator ? ' decorator' : '');
              return _react2.default.createElement(
                'div',
                { className: _className2, key: index },
                item.text
              );
            }
          })
        );
      });

      var className = 'option' + (this.props.selected ? ' selected' : '');
      return _react2.default.createElement(
        'div',
        {
          className: className,
          onMouseOver: this.handleMouseMove.bind(this),
          onClick: this.props.execute,
          onMouseDown: this.props.onMouseDown,
          onMouseUp: this.props.onMouseUp },
        _react2.default.createElement(
          'div',
          { className: 'hint' },
          this.props.hint
        ),
        _react2.default.createElement(
          'div',
          { className: 'descriptors', ref: 'descriptors' },
          descriptors
        ),
        _react2.default.createElement(
          'div',
          { className: 'words', ref: 'words' },
          words
        )
      );
    }
  }]);

  return Option;
}(_react2.default.Component);
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"react":548,"react-dom":381}],385:[function(require,module,exports){
(function (global){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Options = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lodash = (typeof window !== "undefined" ? window['_'] : typeof global !== "undefined" ? global['_'] : null);

var _lodash2 = _interopRequireDefault(_lodash);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _option = require('./option');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Options = exports.Options = function (_React$Component) {
  _inherits(Options, _React$Component);

  function Options() {
    _classCallCheck(this, Options);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Options).call(this));

    _this.options = [];
    _this.coords = [0, 0];
    return _this;
  }

  _createClass(Options, [{
    key: 'getOption',
    value: function getOption(index) {
      return this.options[index];
    }
  }, {
    key: 'mouseMoved',
    value: function mouseMoved(coords) {
      return coords[0] !== this.coords[0] || coords[1] !== this.coords[1];
    }
  }, {
    key: 'handleMouseMove',
    value: function handleMouseMove(e) {
      this.coords = [e.pageX, e.pageY];
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var divs = this.props.outputs.map(function (option, index) {
        var select = function select() {
          return _this2.props.select(index);
        };
        var execute = function execute() {
          return _this2.props.execute(index);
        };

        var hint = _this2.props.showHints ? index === _this2.props.selection ? '↩' : index < 9 ? '⌥' + (index + 1) : '' : '';

        return _react2.default.createElement(_option.Option, {
          ref: function ref(c) {
            return _this2.options[index] = c;
          },
          key: index,
          selected: index === _this2.props.selection,
          mouseMoved: _this2.mouseMoved.bind(_this2),
          option: option,
          select: select,
          execute: execute,
          onMouseDown: _this2.props.onMouseDown,
          onMouseUp: _this2.props.onMouseUp,
          hint: hint });
      });

      return divs.length ? _react2.default.createElement(
        'div',
        { className: 'options', onMouseMove: this.handleMouseMove.bind(this) },
        divs
      ) : null;
    }
  }]);

  return Options;
}(_react2.default.Component);
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./option":384,"react":548}],386:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusUtils
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
},{"./ReactDOMComponentTree":423,"fbjs/lib/focusNode":530}],387:[function(require,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var keyOf = require('fbjs/lib/keyOf');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBeforeInput: null }),
      captured: keyOf({ onBeforeInputCapture: null })
    },
    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionEnd: null }),
      captured: keyOf({ onCompositionEndCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionStart: null }),
      captured: keyOf({ onCompositionStartCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionUpdate: null }),
      captured: keyOf({ onCompositionUpdateCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionEnd:
      return getDataFromCustomEvent(nativeEvent);
    case topLevelTypes.topKeyPress:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case topLevelTypes.topTextInput:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  if (currentComposition) {
    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case topLevelTypes.topPaste:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case topLevelTypes.topKeyPress:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case topLevelTypes.topCompositionEnd:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
},{"./EventConstants":400,"./EventPropagators":404,"./FallbackCompositionState":405,"./SyntheticCompositionEvent":479,"./SyntheticInputEvent":483,"fbjs/lib/ExecutionEnvironment":522,"fbjs/lib/keyOf":540}],388:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
},{}],389:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactPerf = require('./ReactPerf');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
  setValueForStyles: 'setValueForStyles'
});

module.exports = CSSPropertyOperations;
}).call(this,require('_process'))
},{"./CSSProperty":388,"./ReactPerf":464,"./dangerousStyleValue":496,"_process":9,"fbjs/lib/ExecutionEnvironment":522,"fbjs/lib/camelizeStyleName":524,"fbjs/lib/hyphenateStyleName":535,"fbjs/lib/memoizeStringOnly":542,"fbjs/lib/warning":546}],390:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

_assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function (callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function () {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  checkpoint: function () {
    return this._callbacks ? this._callbacks.length : 0;
  },

  rollback: function (len) {
    if (this._callbacks) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function () {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function () {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
}).call(this,require('_process'))
},{"./PooledClass":408,"_process":9,"fbjs/lib/invariant":536,"object-assign":547}],391:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');
var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onChange: null }),
      captured: keyOf({ onChangeCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topChange) {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topClick) {
    return targetInst;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }
  }

};

module.exports = ChangeEventPlugin;
},{"./EventConstants":400,"./EventPluginHub":401,"./EventPropagators":404,"./ReactDOMComponentTree":423,"./ReactUpdates":472,"./SyntheticEvent":481,"./getEventTarget":504,"./isEventSupported":511,"./isTextInputElement":512,"fbjs/lib/ExecutionEnvironment":522,"fbjs/lib/keyOf":540}],392:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');
var ReactPerf = require('./ReactPerf');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getNativeNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          break;
        case ReactMultiChildUpdateTypes.SET_MARKUP:
          setInnerHTML(parentNode, update.content);
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          setTextContent(parentNode, update.content);
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          removeChild(parentNode, update.fromNode);
          break;
      }
    }
  }

};

ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
  replaceDelimitedText: 'replaceDelimitedText'
});

module.exports = DOMChildrenOperations;
},{"./DOMLazyTree":393,"./Danger":397,"./ReactMultiChildUpdateTypes":459,"./ReactPerf":464,"./createMicrosoftUnsafeLocalFunction":495,"./setInnerHTML":516,"./setTextContent":517}],393:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMLazyTree
 */

'use strict';

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    node.innerHTML = tree.html;
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level.
  if (tree.node.nodeType === 11) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    tree.node.innerHTML = html;
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
},{"./createMicrosoftUnsafeLocalFunction":495,"./setTextContent":517}],394:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMNamespaces
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
},{}],395:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_SIDE_EFFECTS: 0x2,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };

      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : void 0;
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasSideEffects:
   *   Whether or not setting a value causes side effects such as triggering
   *   resources to be loaded or text selection changes. If true, we read from
   *   the DOM before updating to ensure that the value is only set if it has
   *   changed.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],396:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMInstrumentation = require('./ReactDOMInstrumentation');
var ReactPerf = require('./ReactPerf');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    if (process.env.NODE_ENV !== 'production') {
      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    if (process.env.NODE_ENV !== 'production') {
      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
        // property type before comparing; only `value` does and is string.
        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propName] = value;
        }
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    if (process.env.NODE_ENV !== 'production') {
      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          // No HAS_SIDE_EFFECTS logic here, only `value` has it and is string.
          node[propName] = false;
        } else {
          if (!propertyInfo.hasSideEffects || '' + node[propName] !== '') {
            node[propName] = '';
          }
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }
  }

};

ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
  setValueForProperty: 'setValueForProperty',
  setValueForAttribute: 'setValueForAttribute',
  deleteValueForProperty: 'deleteValueForProperty'
});

module.exports = DOMPropertyOperations;
}).call(this,require('_process'))
},{"./DOMProperty":395,"./ReactDOMInstrumentation":431,"./ReactPerf":464,"./quoteAttributeValueForBrowser":514,"_process":9,"fbjs/lib/warning":546}],397:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var getMarkupWrap = require('fbjs/lib/getMarkupWrap');
var invariant = require('fbjs/lib/invariant');

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function (markupList) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : void 0;
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : void 0;
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      var resultIndex;
      for (resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
          // This index will be parsed back out below.
          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
      );

      for (var j = 0; j < renderNodes.length; ++j) {
        var renderNode = renderNodes[j];
        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : void 0;

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;
        } else if (process.env.NODE_ENV !== 'production') {
          console.error('Danger: Discarding unexpected node:', renderNode);
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : void 0;

    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : void 0;

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;
}).call(this,require('_process'))
},{"./DOMLazyTree":393,"_process":9,"fbjs/lib/ExecutionEnvironment":522,"fbjs/lib/createNodesFromMarkup":527,"fbjs/lib/emptyFunction":528,"fbjs/lib/getMarkupWrap":532,"fbjs/lib/invariant":536}],398:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

'use strict';

var keyOf = require('fbjs/lib/keyOf');

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

module.exports = DefaultEventPluginOrder;
},{"fbjs/lib/keyOf":540}],399:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({ onMouseEnter: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  },
  mouseLeave: {
    registrationName: keyOf({ onMouseLeave: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;
},{"./EventConstants":400,"./EventPropagators":404,"./ReactDOMComponentTree":423,"./SyntheticMouseEvent":485,"fbjs/lib/keyOf":540}],400:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

var PropagationPhases = keyMirror({ bubbled: null, captured: null });

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topAbort: null,
  topAnimationEnd: null,
  topAnimationIteration: null,
  topAnimationStart: null,
  topBlur: null,
  topCanPlay: null,
  topCanPlayThrough: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topDurationChange: null,
  topEmptied: null,
  topEncrypted: null,
  topEnded: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topInvalid: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topLoadedData: null,
  topLoadedMetadata: null,
  topLoadStart: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topPause: null,
  topPlay: null,
  topPlaying: null,
  topProgress: null,
  topRateChange: null,
  topReset: null,
  topScroll: null,
  topSeeked: null,
  topSeeking: null,
  topSelectionChange: null,
  topStalled: null,
  topSubmit: null,
  topSuspend: null,
  topTextInput: null,
  topTimeUpdate: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topTransitionEnd: null,
  topVolumeChange: null,
  topWaiting: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;
},{"fbjs/lib/keyMirror":539}],401:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

'use strict';

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : void 0;

    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[inst._rootNodeID] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      delete bankForRegistrationName[inst._rootNodeID];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    for (var registrationName in listenerBank) {
      if (!listenerBank[registrationName][inst._rootNodeID]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][inst._rootNodeID];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
}).call(this,require('_process'))
},{"./EventPluginRegistry":402,"./EventPluginUtils":403,"./ReactErrorUtils":447,"./accumulateInto":492,"./forEachAccumulated":500,"_process":9,"fbjs/lib/invariant":536}],402:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (InjectedEventPluginOrder) {
    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : void 0;
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],403:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

'use strict';

var EventConstants = require('./EventConstants');
var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : void 0;
  event.currentTarget = EventPluginUtils.getNodeFromInstance(dispatchInstance);
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
}).call(this,require('_process'))
},{"./EventConstants":400,"./ReactErrorUtils":447,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],404:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, upwards, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
}).call(this,require('_process'))
},{"./EventConstants":400,"./EventPluginHub":401,"./EventPluginUtils":403,"./accumulateInto":492,"./forEachAccumulated":500,"_process":9,"fbjs/lib/warning":546}],405:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule FallbackCompositionState
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
},{"./PooledClass":408,"./getTextContentAccessor":508,"object-assign":547}],406:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {}
};

module.exports = HTMLDOMPropertyConfig;
},{"./DOMProperty":395}],407:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 */

'use strict';

var ReactPropTypes = require('./ReactPropTypes');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: ReactPropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
}).call(this,require('_process'))
},{"./ReactPropTypeLocations":466,"./ReactPropTypes":467,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],408:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],409:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactComponent = require('./ReactComponent');
var ReactClass = require('./ReactClass');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactElementValidator = require('./ReactElementValidator');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var onlyChild = require('./onlyChild');
var warning = require('fbjs/lib/warning');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (process.env.NODE_ENV !== 'production') {
  var warned = false;
  __spread = function () {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

module.exports = React;
}).call(this,require('_process'))
},{"./ReactChildren":412,"./ReactClass":413,"./ReactComponent":414,"./ReactDOMFactories":427,"./ReactElement":444,"./ReactElementValidator":445,"./ReactPropTypes":467,"./ReactVersion":473,"./onlyChild":513,"_process":9,"fbjs/lib/warning":546,"object-assign":547}],410:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 */

'use strict';

var _assign = require('object-assign');

var EventConstants = require('./EventConstants');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;
},{"./EventConstants":400,"./EventPluginRegistry":402,"./ReactEventEmitterMixin":448,"./ViewportMetrics":491,"./getVendorPrefixedEventName":509,"./isEventSupported":511,"object-assign":547}],411:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildReconciler
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

function instantiateChild(childInstances, child, name) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : void 0;
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};
    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement);
        nextChildren[name] = nextChildInstance;
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
}).call(this,require('_process'))
},{"./ReactReconciler":469,"./instantiateReactComponent":510,"./shouldUpdateReactComponent":518,"./traverseAllChildren":519,"_process":9,"fbjs/lib/warning":546}],412:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func;
  var context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result;
  var keyPrefix = bookKeeping.keyPrefix;
  var func = bookKeeping.func;
  var context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"./PooledClass":408,"./ReactElement":444,"./traverseAllChildren":519,"fbjs/lib/emptyFunction":528}],413:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactClass
 */

'use strict';

var _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactElement = require('./ReactElement');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var keyMirror = require('fbjs/lib/keyMirror');
var keyOf = require('fbjs/lib/keyOf');
var warning = require('fbjs/lib/warning');

var MIXINS_KEY = keyOf({ mixins: null });

/**
 * Policies that describe methods in `ReactClassInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});

var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

// noop
function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    return;
  }

  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.') : invariant(false) : void 0;
  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (process.env.NODE_ENV !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (process.env.NODE_ENV !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    var Constructor = function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : void 0;

      this.state = initialState;
    };
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
}).call(this,require('_process'))
},{"./ReactComponent":414,"./ReactElement":444,"./ReactNoopUpdateQueue":462,"./ReactPropTypeLocationNames":465,"./ReactPropTypeLocations":466,"_process":9,"fbjs/lib/emptyObject":529,"fbjs/lib/invariant":536,"fbjs/lib/keyMirror":539,"fbjs/lib/keyOf":540,"fbjs/lib/warning":546,"object-assign":547}],414:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

'use strict';

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');
var ReactInstrumentation = require('./ReactInstrumentation');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : void 0;
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onSetState();
    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
  }
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
}).call(this,require('_process'))
},{"./ReactInstrumentation":454,"./ReactNoopUpdateQueue":462,"./canDefineProperty":494,"_process":9,"fbjs/lib/emptyObject":529,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],415:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');
var ReactPerf = require('./ReactPerf');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function (rootNodeID) {}

};

ReactPerf.measureMethods(ReactComponentBrowserEnvironment, 'ReactComponentBrowserEnvironment', {
  replaceNodeWithMarkup: 'replaceNodeWithMarkup'
});

module.exports = ReactComponentBrowserEnvironment;
},{"./DOMChildrenOperations":392,"./ReactDOMIDOperations":429,"./ReactPerf":464}],416:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentEnvironment
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable environment dependent cleanup hook. (server vs.
   * browser etc). Example: A browser system caches DOM nodes based on component
   * ID and must remove that cache entry when this instance is unmounted.
   */
  unmountIDFromEnvironment: null,

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : void 0;
      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],417:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

'use strict';

var _assign = require('object-assign');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactElement = require('./ReactElement');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactPerf = require('./ReactPerf');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum(component) {
  var owner = component._currentElement._owner || null;
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = null;
    this._instance = null;
    this._nativeParent = null;
    this._nativeContainerInfo = null;

    // See ReactUpdateQueue
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} nativeParent
   * @param {?object} nativeContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    this._context = context;
    this._mountOrder = nextMountID++;
    this._nativeParent = nativeParent;
    this._nativeContainerInfo = nativeContainerInfo;

    var publicProps = this._processProps(this._currentElement.props);
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    // Initialize the public class
    var inst;
    var renderedElement;

    if (Component.prototype && Component.prototype.isReactComponent) {
      if (process.env.NODE_ENV !== 'production') {
        ReactCurrentOwner.current = this;
        try {
          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
        } finally {
          ReactCurrentOwner.current = null;
        }
      } else {
        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
      }
    } else {
      if (process.env.NODE_ENV !== 'production') {
        ReactCurrentOwner.current = this;
        try {
          inst = Component(publicProps, publicContext, ReactUpdateQueue);
        } finally {
          ReactCurrentOwner.current = null;
        }
      } else {
        inst = Component(publicProps, publicContext, ReactUpdateQueue);
      }
      if (inst == null || inst.render == null) {
        renderedElement = inst;
        warnIfInvalidElement(Component, renderedElement);
        !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : invariant(false) : void 0;
        inst = new StatelessComponent(Component);
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = ReactUpdateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
    }

    return markup;
  },

  performInitialMountWithErrorHandling: function (renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
    var inst = this._instance;
    if (inst.componentWillMount) {
      inst.componentWillMount();
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    this._renderedNodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedComponent = this._instantiateReactComponent(renderedElement);

    var markup = ReactReconciler.mountComponent(this._renderedComponent, transaction, nativeParent, nativeContainerInfo, this._processChildContext(context));

    return markup;
  },

  getNativeNode: function () {
    return ReactReconciler.getNativeNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }
    var inst = this._instance;

    if (inst.componentWillUnmount) {
      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        inst.componentWillUnmount();
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = null;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
    }
    var childContext = inst.getChildContext && inst.getChildContext();
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onEndProcessingChildContext();
    }
    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid. Does not mutate its argument; returns
   * a new props object with defaults merged in.
   *
   * @param {object} newProps
   * @return {object}
   * @private
   */
  _processProps: function (newProps) {
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.propTypes) {
        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
      }
    }
    return newProps;
  },

  /**
   * Assert that the props are valid
   *
   * @param {object} propTypes Map of prop name to a ReactPropType
   * @param {object} props
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkPropTypes: function (propTypes, props, location) {
    // TODO: Stop validating prop types here and only use the element
    // validation.
    var componentName = this.getName();
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error;
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
          error = propTypes[propName](props, propName, componentName, location);
        } catch (ex) {
          error = ex;
        }
        if (error instanceof Error) {
          // We may want to extend this logic for similar errors in
          // top-level render calls, so I'm abstracting it away into
          // a function to minimize refactoring in the future
          var addendum = getDeclarationErrorAddendum(this);

          if (location === ReactPropTypeLocations.prop) {
            // Preface gives us something to blacklist in warning module
            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : void 0;
          } else {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : void 0;
          }
        }
      }
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    }

    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    var willReceive = false;
    var nextContext;
    var nextProps;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    // Distinguish between a props update versus a simple state update
    if (prevParentElement === nextParentElement) {
      // Skip checking prop types again -- we don't read inst.props to avoid
      // warning for DOM component props in this upgrade
      nextProps = nextParentElement.props;
    } else {
      nextProps = this._processProps(nextParentElement.props);
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      inst.componentWillReceiveProps(nextProps, nextContext);
    }

    var nextState = this._processPendingState(nextProps, nextContext);

    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      inst.componentWillUpdate(nextProps, nextState, nextContext);
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();
    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldNativeNode = ReactReconciler.getNativeNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      this._renderedNodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, transaction, this._nativeParent, this._nativeContainerInfo, this._processChildContext(context));
      this._replaceNodeWithMarkup(oldNativeNode, nextMarkup);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldNativeNode, nextMarkup) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldNativeNode, nextMarkup);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedComponent = inst.render();
    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedComponent === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedComponent = null;
      }
    }

    return renderedComponent;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedComponent;
    ReactCurrentOwner.current = this;
    try {
      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
    } finally {
      ReactCurrentOwner.current = null;
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
    return renderedComponent;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (inst instanceof StatelessComponent) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
  mountComponent: 'mountComponent',
  updateComponent: 'updateComponent',
  _renderValidatedComponent: '_renderValidatedComponent'
});

var ReactCompositeComponent = {

  Mixin: ReactCompositeComponentMixin

};

module.exports = ReactCompositeComponent;
}).call(this,require('_process'))
},{"./ReactComponentEnvironment":416,"./ReactCurrentOwner":418,"./ReactElement":444,"./ReactErrorUtils":447,"./ReactInstanceMap":453,"./ReactInstrumentation":454,"./ReactNodeTypes":461,"./ReactPerf":464,"./ReactPropTypeLocationNames":465,"./ReactPropTypeLocations":466,"./ReactReconciler":469,"./ReactUpdateQueue":471,"./shouldUpdateReactComponent":518,"_process":9,"fbjs/lib/emptyObject":529,"fbjs/lib/invariant":536,"fbjs/lib/warning":546,"object-assign":547}],418:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */

var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;
},{}],419:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactPerf = require('./ReactPerf');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getNativeComponentFromComposite = require('./getNativeComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var render = ReactPerf.measure('React', 'render', ReactMount.render);

var React = {
  findDOMNode: findDOMNode,
  render: render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
/* eslint-enable camelcase */
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getNativeComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

module.exports = React;
}).call(this,require('_process'))
},{"./ReactDOMComponentTree":423,"./ReactDefaultInjection":441,"./ReactMount":457,"./ReactPerf":464,"./ReactReconciler":469,"./ReactUpdates":472,"./ReactVersion":473,"./findDOMNode":498,"./getNativeComponentFromComposite":506,"./renderSubtreeIntoContainer":515,"_process":9,"fbjs/lib/ExecutionEnvironment":522,"fbjs/lib/warning":546}],420:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

'use strict';

var mouseListenerNames = {
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,

  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
};

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = {
  getNativeProps: function (inst, props) {
    if (!props.disabled) {
      return props;
    }

    // Copy the props, except the mouse listeners
    var nativeProps = {};
    for (var key in props) {
      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
        nativeProps[key] = props[key];
      }
    }

    return nativeProps;
  }
};

module.exports = ReactDOMButton;
},{}],421:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 */

/* global hasOwnProperty:true */

'use strict';

var _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMButton = require('./ReactDOMButton');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactMultiChild = require('./ReactMultiChild');
var ReactPerf = require('./ReactPerf');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var keyOf = require('fbjs/lib/keyOf');
var shallowEqual = require('fbjs/lib/shallowEqual');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = keyOf({ style: null });
var HTML = keyOf({ __html: null });
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : invariant(false) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._nativeContainerInfo;
  var doc = containerInfo._ownerDocument;
  if (!doc) {
    // Server rendering.
    return;
  }
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
        }
      }

      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

// NOTE: menuitem's close tag should be omitted, but that causes problems.
var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._nativeNode = null;
  this._nativeParent = null;
  this._rootNodeID = null;
  this._domID = null;
  this._nativeContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the containing DOM component instance
   * @param {?object} info about the native container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = nativeContainerInfo._idCounter++;
    this._nativeParent = nativeParent;
    this._nativeContainerInfo = nativeContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'iframe':
      case 'object':
      case 'img':
      case 'form':
      case 'video':
      case 'audio':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'button':
        props = ReactDOMButton.getNativeProps(this, props, nativeParent);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, nativeParent);
        props = ReactDOMInput.getNativeProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, nativeParent);
        props = ReactDOMOption.getNativeProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, nativeParent);
        props = ReactDOMSelect.getNativeProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, nativeParent);
        props = ReactDOMTextarea.getNativeProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (nativeParent != null) {
      namespaceURI = nativeParent._namespaceURI;
      parentTag = nativeParent._tag;
    } else if (nativeContainerInfo._tag) {
      namespaceURI = nativeContainerInfo._namespaceURI;
      parentTag = nativeContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (nativeParent != null) {
        parentInfo = nativeParent._ancestorInfo;
      } else if (nativeContainerInfo._tag) {
        parentInfo = nativeContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = nativeContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else {
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._nativeParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'button':
      case 'input':
      case 'select':
      case 'textarea':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._nativeParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        DOMLazyTree.queueText(lazyTree, contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'button':
        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
        break;
      case 'input':
        ReactDOMInput.updateWrapper(this);
        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    if (this._tag === 'select') {
      // <select> value update needs to occur after <option> children
      // reconciliation
      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getNativeNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'iframe':
      case 'object':
      case 'img':
      case 'form':
      case 'video':
      case 'audio':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
    this._rootNodeID = null;
    this._domID = null;
    this._wrapperState = null;
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

ReactPerf.measureMethods(ReactDOMComponent.Mixin, 'ReactDOMComponent', {
  mountComponent: 'mountComponent',
  receiveComponent: 'receiveComponent'
});

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
}).call(this,require('_process'))
},{"./AutoFocusUtils":386,"./CSSPropertyOperations":389,"./DOMLazyTree":393,"./DOMNamespaces":394,"./DOMProperty":395,"./DOMPropertyOperations":396,"./EventConstants":400,"./EventPluginHub":401,"./EventPluginRegistry":402,"./ReactBrowserEventEmitter":410,"./ReactComponentBrowserEnvironment":415,"./ReactDOMButton":420,"./ReactDOMComponentFlags":422,"./ReactDOMComponentTree":423,"./ReactDOMInput":430,"./ReactDOMOption":432,"./ReactDOMSelect":433,"./ReactDOMTextarea":436,"./ReactMultiChild":458,"./ReactPerf":464,"./escapeTextContentForBrowser":497,"./isEventSupported":511,"./validateDOMNesting":520,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/keyOf":540,"fbjs/lib/shallowEqual":545,"fbjs/lib/warning":546,"object-assign":547}],422:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentFlags
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
},{}],423:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentTree
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Drill down (through composites and empty components) until we get a native or
 * native text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedNativeOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_nativeNode` on the rendered native/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var nativeInst = getRenderedNativeOrTextFromComponent(inst);
  nativeInst._nativeNode = node;
  node[internalInstanceKey] = nativeInst;
}

function uncacheNode(inst) {
  var node = inst._nativeNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._nativeNode = null;
  }
}

/**
 * Populate `_nativeNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedNativeOrTextFromComponent(childInst)._domID;
    if (childID == null) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : invariant(false) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._nativeNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._nativeNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;

  if (inst._nativeNode) {
    return inst._nativeNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._nativeNode) {
    parents.push(inst);
    !inst._nativeParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : invariant(false) : void 0;
    inst = inst._nativeParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._nativeNode);
  }

  return inst._nativeNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
}).call(this,require('_process'))
},{"./DOMProperty":395,"./ReactDOMComponentFlags":422,"_process":9,"fbjs/lib/invariant":536}],424:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMContainerInfo
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
}).call(this,require('_process'))
},{"./validateDOMNesting":520,"_process":9}],425:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMDebugTool
 */

'use strict';

var ReactDOMUnknownPropertyDevtool = require('./ReactDOMUnknownPropertyDevtool');

var warning = require('fbjs/lib/warning');

var eventHandlers = [];
var handlerDoesThrowForEvent = {};

function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
  if (process.env.NODE_ENV !== 'production') {
    eventHandlers.forEach(function (handler) {
      try {
        if (handler[handlerFunctionName]) {
          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
        }
      } catch (e) {
        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
        handlerDoesThrowForEvent[handlerFunctionName] = true;
      }
    });
  }
}

var ReactDOMDebugTool = {
  addDevtool: function (devtool) {
    eventHandlers.push(devtool);
  },
  removeDevtool: function (devtool) {
    for (var i = 0; i < eventHandlers.length; i++) {
      if (eventHandlers[i] === devtool) {
        eventHandlers.splice(i, 1);
        i--;
      }
    }
  },
  onCreateMarkupForProperty: function (name, value) {
    emitEvent('onCreateMarkupForProperty', name, value);
  },
  onSetValueForProperty: function (node, name, value) {
    emitEvent('onSetValueForProperty', node, name, value);
  },
  onDeleteValueForProperty: function (node, name) {
    emitEvent('onDeleteValueForProperty', node, name);
  }
};

ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);

module.exports = ReactDOMDebugTool;
}).call(this,require('_process'))
},{"./ReactDOMUnknownPropertyDevtool":438,"_process":9,"fbjs/lib/warning":546}],426:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMEmptyComponent
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._nativeNode = null;
  this._nativeParent = null;
  this._nativeContainerInfo = null;
  this._domID = null;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    var domID = nativeContainerInfo._idCounter++;
    this._domID = domID;
    this._nativeParent = nativeParent;
    this._nativeContainerInfo = nativeContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = nativeContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getNativeNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
},{"./DOMLazyTree":393,"./ReactDOMComponentTree":423,"object-assign":547}],427:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFactories
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactElementValidator = require('./ReactElementValidator');

var mapObject = require('fbjs/lib/mapObject');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if (process.env.NODE_ENV !== 'production') {
    return ReactElementValidator.createFactory(tag);
  }
  return ReactElement.createFactory(tag);
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hgroup: 'hgroup',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  clipPath: 'clipPath',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  image: 'image',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOMFactories;
}).call(this,require('_process'))
},{"./ReactElement":444,"./ReactElementValidator":445,"_process":9,"fbjs/lib/mapObject":541}],428:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFeatureFlags
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true
};

module.exports = ReactDOMFeatureFlags;
},{}],429:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactPerf = require('./ReactPerf');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
});

module.exports = ReactDOMIDOperations;
},{"./DOMChildrenOperations":392,"./ReactDOMComponentTree":423,"./ReactPerf":464}],430:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

'use strict';

var _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueNull = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function warnIfValueIsNull(props) {
  if (props != null && props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `input` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

    didWarnValueNull = true;
  }
}

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getNativeProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var nativeProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return nativeProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValueDefaultValue = true;
      }
      warnIfValueIsNull(props);
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.defaultChecked || false,
      initialValue: defaultValue != null ? defaultValue : null,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };

    if (process.env.NODE_ENV !== 'production') {
      inst._wrapperState.controlled = props.checked !== undefined || props.value !== undefined;
    }
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      warnIfValueIsNull(props);

      var initialValue = inst._wrapperState.initialChecked || inst._wrapperState.initialValue;
      var defaultValue = props.defaultChecked || props.defaultValue;
      var controlled = props.checked !== undefined || props.value !== undefined;
      var owner = inst._currentElement._owner;

      if ((initialValue || !inst._wrapperState.controlled) && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && (defaultValue || !controlled) && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
}).call(this,require('_process'))
},{"./DOMPropertyOperations":396,"./LinkedValueUtils":407,"./ReactDOMComponentTree":423,"./ReactUpdates":472,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546,"object-assign":547}],431:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInstrumentation
 */

'use strict';

var ReactDOMDebugTool = require('./ReactDOMDebugTool');

module.exports = { debugTool: ReactDOMDebugTool };
},{"./ReactDOMDebugTool":425}],432:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, nativeParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (nativeParent != null && nativeParent._tag === 'select') {
      selectValue = ReactDOMSelect.getSelectValueContext(nativeParent);
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === '' + props.value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === '' + props.value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getNativeProps: function (inst, props) {
    var nativeProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      nativeProps.selected = inst._wrapperState.selected;
    }

    var content = '';

    // Flatten children and warn if they aren't strings or numbers;
    // invalid types are ignored.
    ReactChildren.forEach(props.children, function (child) {
      if (child == null) {
        return;
      }
      if (typeof child === 'string' || typeof child === 'number') {
        content += child;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
      }
    });

    if (content) {
      nativeProps.children = content;
    }

    return nativeProps;
  }

};

module.exports = ReactDOMOption;
}).call(this,require('_process'))
},{"./ReactChildren":412,"./ReactDOMComponentTree":423,"./ReactDOMSelect":433,"_process":9,"fbjs/lib/warning":546,"object-assign":547}],433:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

'use strict';

var _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueNull = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function warnIfValueIsNull(props) {
  if (props != null && props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `select` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

    didWarnValueNull = true;
  }
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    if (props.multiple) {
      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else {
      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getNativeProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
      warnIfValueIsNull(props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;
    if (process.env.NODE_ENV !== 'production') {
      warnIfValueIsNull(props);
    }

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
}).call(this,require('_process'))
},{"./LinkedValueUtils":407,"./ReactDOMComponentTree":423,"./ReactUpdates":472,"_process":9,"fbjs/lib/warning":546,"object-assign":547}],434:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
},{"./getNodeForCharacterOffset":507,"./getTextContentAccessor":508,"fbjs/lib/ExecutionEnvironment":522}],435:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextComponent
 */

'use strict';

var _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactPerf = require('./ReactPerf');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._nativeNode = null;
  this._nativeParent = null;

  // Properties
  this._domID = null;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (nativeParent != null) {
        parentInfo = nativeParent._ancestorInfo;
      } else if (nativeContainerInfo != null) {
        parentInfo = nativeContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting('#text', this, parentInfo);
      }
    }

    var domID = nativeContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._nativeParent = nativeParent;
    if (transaction.useCreateElement) {
      var ownerDocument = nativeContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getNativeNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getNativeNode: function () {
    var nativeNode = this._commentNodes;
    if (nativeNode) {
      return nativeNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : invariant(false) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    nativeNode = [this._nativeNode, this._closingComment];
    this._commentNodes = nativeNode;
    return nativeNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

ReactPerf.measureMethods(ReactDOMTextComponent.prototype, 'ReactDOMTextComponent', {
  mountComponent: 'mountComponent',
  receiveComponent: 'receiveComponent'
});

module.exports = ReactDOMTextComponent;
}).call(this,require('_process'))
},{"./DOMChildrenOperations":392,"./DOMLazyTree":393,"./ReactDOMComponentTree":423,"./ReactPerf":464,"./escapeTextContentForBrowser":497,"./validateDOMNesting":520,"_process":9,"fbjs/lib/invariant":536,"object-assign":547}],436:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

'use strict';

var _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueNull = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

function warnIfValueIsNull(props) {
  if (props != null && props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `textarea` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

    didWarnValueNull = true;
  }
}

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getNativeProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    var nativeProps = _assign({}, props, {
      defaultValue: undefined,
      value: undefined,
      children: inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return nativeProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
      warnIfValueIsNull(props);
    }

    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
      }
      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : void 0;
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue),
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      warnIfValueIsNull(props);
    }

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
}).call(this,require('_process'))
},{"./DOMPropertyOperations":396,"./LinkedValueUtils":407,"./ReactDOMComponentTree":423,"./ReactUpdates":472,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546,"object-assign":547}],437:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTreeTraversal
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;
  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._nativeParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._nativeParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._nativeParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._nativeParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._nativeParent;
    instB = instB._nativeParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;
  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._nativeParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_nativeNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : invariant(false) : void 0;

  return inst._nativeParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._nativeParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], false, arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], true, arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._nativeParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._nativeParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], true, argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], false, argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],438:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMUnknownPropertyDevtool
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function (name) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : void 0;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?', name, registrationName) : void 0;
  };
}

var ReactDOMUnknownPropertyDevtool = {
  onCreateMarkupForProperty: function (name, value) {
    warnUnknownProperty(name);
  },
  onSetValueForProperty: function (node, name, value) {
    warnUnknownProperty(name);
  },
  onDeleteValueForProperty: function (node, name) {
    warnUnknownProperty(name);
  }
};

module.exports = ReactDOMUnknownPropertyDevtool;
}).call(this,require('_process'))
},{"./DOMProperty":395,"./EventPluginRegistry":402,"_process":9,"fbjs/lib/warning":546}],439:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDebugTool
 */

'use strict';

var ReactInvalidSetStateWarningDevTool = require('./ReactInvalidSetStateWarningDevTool');
var warning = require('fbjs/lib/warning');

var eventHandlers = [];
var handlerDoesThrowForEvent = {};

function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
  if (process.env.NODE_ENV !== 'production') {
    eventHandlers.forEach(function (handler) {
      try {
        if (handler[handlerFunctionName]) {
          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
        }
      } catch (e) {
        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
        handlerDoesThrowForEvent[handlerFunctionName] = true;
      }
    });
  }
}

var ReactDebugTool = {
  addDevtool: function (devtool) {
    eventHandlers.push(devtool);
  },
  removeDevtool: function (devtool) {
    for (var i = 0; i < eventHandlers.length; i++) {
      if (eventHandlers[i] === devtool) {
        eventHandlers.splice(i, 1);
        i--;
      }
    }
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onMountRootComponent: function (internalInstance) {
    emitEvent('onMountRootComponent', internalInstance);
  },
  onMountComponent: function (internalInstance) {
    emitEvent('onMountComponent', internalInstance);
  },
  onUpdateComponent: function (internalInstance) {
    emitEvent('onUpdateComponent', internalInstance);
  },
  onUnmountComponent: function (internalInstance) {
    emitEvent('onUnmountComponent', internalInstance);
  }
};

ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);

module.exports = ReactDebugTool;
}).call(this,require('_process'))
},{"./ReactInvalidSetStateWarningDevTool":455,"_process":9,"fbjs/lib/warning":546}],440:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b, c, d, e);
    } else {
      transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
},{"./ReactUpdates":472,"./Transaction":490,"fbjs/lib/emptyFunction":528,"object-assign":547}],441:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

'use strict';

var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

  if (process.env.NODE_ENV !== 'production') {
    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
    if (/[?&]react_perf\b/.test(url)) {
      var ReactDefaultPerf = require('./ReactDefaultPerf');
      ReactDefaultPerf.start();
    }
  }
}

module.exports = {
  inject: inject
};
}).call(this,require('_process'))
},{"./BeforeInputEventPlugin":387,"./ChangeEventPlugin":391,"./DefaultEventPluginOrder":398,"./EnterLeaveEventPlugin":399,"./HTMLDOMPropertyConfig":406,"./ReactComponentBrowserEnvironment":415,"./ReactDOMComponent":421,"./ReactDOMComponentTree":423,"./ReactDOMEmptyComponent":426,"./ReactDOMTextComponent":435,"./ReactDOMTreeTraversal":437,"./ReactDefaultBatchingStrategy":440,"./ReactDefaultPerf":442,"./ReactEventListener":449,"./ReactInjection":451,"./ReactReconcileTransaction":468,"./SVGDOMPropertyConfig":474,"./SelectEventPlugin":475,"./SimpleEventPlugin":476,"_process":9,"fbjs/lib/ExecutionEnvironment":522}],442:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerf
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultPerfAnalysis = require('./ReactDefaultPerfAnalysis');
var ReactMount = require('./ReactMount');
var ReactPerf = require('./ReactPerf');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

function roundFloat(val) {
  return Math.floor(val * 100) / 100;
}

function addValue(obj, key, val) {
  obj[key] = (obj[key] || 0) + val;
}

// Composite/text components don't have any built-in ID: we have to make our own
var compositeIDMap;
var compositeIDCounter = 17000;
function getIDOfComposite(inst) {
  if (!compositeIDMap) {
    compositeIDMap = new WeakMap();
  }
  if (compositeIDMap.has(inst)) {
    return compositeIDMap.get(inst);
  } else {
    var id = compositeIDCounter++;
    compositeIDMap.set(inst, id);
    return id;
  }
}

function getID(inst) {
  if (inst.hasOwnProperty('_rootNodeID')) {
    return inst._rootNodeID;
  } else {
    return getIDOfComposite(inst);
  }
}

function stripComplexValues(key, value) {
  if (typeof value !== 'object' || Array.isArray(value) || value == null) {
    return value;
  }
  var prototype = Object.getPrototypeOf(value);
  if (!prototype || prototype === Object.prototype) {
    return value;
  }
  return '<not serializable>';
}

// This implementation of ReactPerf is going away some time mid 15.x.
// While we plan to keep most of the API, the actual format of measurements
// will change dramatically. To signal this, we wrap them into an opaque-ish
// object to discourage reaching into it until the API stabilizes.
function wrapLegacyMeasurements(measurements) {
  return { __unstable_this_format_will_change: measurements };
}
function unwrapLegacyMeasurements(measurements) {
  return measurements && measurements.__unstable_this_format_will_change || measurements;
}

var warnedAboutPrintDOM = false;
var warnedAboutGetMeasurementsSummaryMap = false;

var ReactDefaultPerf = {
  _allMeasurements: [], // last item in the list is the current one
  _mountStack: [0],
  _compositeStack: [],
  _injected: false,

  start: function () {
    if (!ReactDefaultPerf._injected) {
      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
    }

    ReactDefaultPerf._allMeasurements.length = 0;
    ReactPerf.enableMeasure = true;
  },

  stop: function () {
    ReactPerf.enableMeasure = false;
  },

  getLastMeasurements: function () {
    return wrapLegacyMeasurements(ReactDefaultPerf._allMeasurements);
  },

  printExclusive: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
    console.table(summary.map(function (item) {
      return {
        'Component class name': item.componentName,
        'Total inclusive time (ms)': roundFloat(item.inclusive),
        'Exclusive mount time (ms)': roundFloat(item.exclusive),
        'Exclusive render time (ms)': roundFloat(item.render),
        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
        'Render time per instance (ms)': roundFloat(item.render / item.count),
        'Instances': item.count
      };
    }));
    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
    // number.
  },

  printInclusive: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
    console.table(summary.map(function (item) {
      return {
        'Owner > component': item.componentName,
        'Inclusive time (ms)': roundFloat(item.time),
        'Instances': item.count
      };
    }));
    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
  },

  getMeasurementsSummaryMap: function (measurements) {
    process.env.NODE_ENV !== 'production' ? warning(warnedAboutGetMeasurementsSummaryMap, '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' + '`ReactPerf.getWasted(...)` instead.') : void 0;
    warnedAboutGetMeasurementsSummaryMap = true;
    return ReactDefaultPerf.getWasted(measurements);
  },

  getWasted: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements);
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
    return summary.map(function (item) {
      return {
        'Owner > component': item.componentName,
        'Wasted time (ms)': item.time,
        'Instances': item.count
      };
    });
  },

  printWasted: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    console.table(ReactDefaultPerf.getWasted(measurements));
    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
  },

  printDOM: function (measurements) {
    process.env.NODE_ENV !== 'production' ? warning(warnedAboutPrintDOM, '`ReactPerf.printDOM(...)` is deprecated. Use ' + '`ReactPerf.printOperations(...)` instead.') : void 0;
    warnedAboutPrintDOM = true;
    return ReactDefaultPerf.printOperations(measurements);
  },

  printOperations: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
    console.table(summary.map(function (item) {
      var result = {};
      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
      result.type = item.type;
      result.args = JSON.stringify(item.args, stripComplexValues);
      return result;
    }));
    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
  },

  _recordWrite: function (id, fnName, totalTime, args) {
    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
    var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
    var writes = entry.writes;
    writes[id] = writes[id] || [];
    writes[id].push({
      type: fnName,
      time: totalTime,
      args: args
    });
  },

  measure: function (moduleName, fnName, func) {
    return function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var totalTime;
      var rv;
      var start;

      var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];

      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
        // A "measurement" is a set of metrics recorded for each flush. We want
        // to group the metrics for a given flush together so we can look at the
        // components that rendered and the DOM operations that actually
        // happened to determine the amount of "wasted work" performed.
        ReactDefaultPerf._allMeasurements.push(entry = {
          exclusive: {},
          inclusive: {},
          render: {},
          counts: {},
          writes: {},
          displayNames: {},
          hierarchy: {},
          totalTime: 0,
          created: {}
        });
        start = performanceNow();
        rv = func.apply(this, args);
        entry.totalTime = performanceNow() - start;
        return rv;
      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations' || moduleName === 'ReactComponentBrowserEnvironment') {
        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (fnName === '_mountImageIntoNode') {
          ReactDefaultPerf._recordWrite('', fnName, totalTime, args[0]);
        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
          // special format
          args[1].forEach(function (update) {
            var writeArgs = {};
            if (update.fromIndex !== null) {
              writeArgs.fromIndex = update.fromIndex;
            }
            if (update.toIndex !== null) {
              writeArgs.toIndex = update.toIndex;
            }
            if (update.content !== null) {
              writeArgs.content = update.content;
            }
            ReactDefaultPerf._recordWrite(args[0]._rootNodeID, update.type, totalTime, writeArgs);
          });
        } else {
          // basic format
          var id = args[0];
          if (moduleName === 'EventPluginHub') {
            id = id._rootNodeID;
          } else if (fnName === 'replaceNodeWithMarkup') {
            // Old node is already unmounted; can't get its instance
            id = ReactDOMComponentTree.getInstanceFromNode(args[1].node)._rootNodeID;
          } else if (fnName === 'replaceDelimitedText') {
            id = getID(ReactDOMComponentTree.getInstanceFromNode(args[0]));
          } else if (typeof id === 'object') {
            id = getID(ReactDOMComponentTree.getInstanceFromNode(args[0]));
          }
          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
        }
        return rv;
      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
      fnName === '_renderValidatedComponent')) {

        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
          return func.apply(this, args);
        }

        var rootNodeID = getIDOfComposite(this);
        var isRender = fnName === '_renderValidatedComponent';
        var isMount = fnName === 'mountComponent';

        var mountStack = ReactDefaultPerf._mountStack;

        if (isRender) {
          addValue(entry.counts, rootNodeID, 1);
        } else if (isMount) {
          entry.created[rootNodeID] = true;
          mountStack.push(0);
        }

        ReactDefaultPerf._compositeStack.push(rootNodeID);

        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        ReactDefaultPerf._compositeStack.pop();

        if (isRender) {
          addValue(entry.render, rootNodeID, totalTime);
        } else if (isMount) {
          var subMountTime = mountStack.pop();
          mountStack[mountStack.length - 1] += totalTime;
          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
          addValue(entry.inclusive, rootNodeID, totalTime);
        } else {
          addValue(entry.inclusive, rootNodeID, totalTime);
        }

        entry.displayNames[rootNodeID] = {
          current: this.getName(),
          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
        };

        return rv;
      } else if ((moduleName === 'ReactDOMComponent' || moduleName === 'ReactDOMTextComponent') && (fnName === 'mountComponent' || fnName === 'receiveComponent')) {

        rv = func.apply(this, args);
        entry.hierarchy[getID(this)] = ReactDefaultPerf._compositeStack.slice();
        return rv;
      } else {
        return func.apply(this, args);
      }
    };
  }
};

module.exports = ReactDefaultPerf;
}).call(this,require('_process'))
},{"./DOMProperty":395,"./ReactDOMComponentTree":423,"./ReactDefaultPerfAnalysis":443,"./ReactMount":457,"./ReactPerf":464,"_process":9,"fbjs/lib/performanceNow":544,"fbjs/lib/warning":546}],443:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerfAnalysis
 */

'use strict';

// Don't try to save users less than 1.2ms (a number I made up)

var _assign = require('object-assign');

var DONT_CARE_THRESHOLD = 1.2;
var DOM_OPERATION_TYPES = {
  '_mountImageIntoNode': 'set innerHTML',
  INSERT_MARKUP: 'set innerHTML',
  MOVE_EXISTING: 'move',
  REMOVE_NODE: 'remove',
  SET_MARKUP: 'set innerHTML',
  TEXT_CONTENT: 'set textContent',
  'setValueForProperty': 'update attribute',
  'setValueForAttribute': 'update attribute',
  'deleteValueForProperty': 'remove attribute',
  'setValueForStyles': 'update styles',
  'replaceNodeWithMarkup': 'replace',
  'replaceDelimitedText': 'replace'
};

function getTotalTime(measurements) {
  // TODO: return number of DOM ops? could be misleading.
  // TODO: measure dropped frames after reconcile?
  // TODO: log total time of each reconcile and the top-level component
  // class that triggered it.
  var totalTime = 0;
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    totalTime += measurement.totalTime;
  }
  return totalTime;
}

function getDOMSummary(measurements) {
  var items = [];
  measurements.forEach(function (measurement) {
    Object.keys(measurement.writes).forEach(function (id) {
      measurement.writes[id].forEach(function (write) {
        items.push({
          id: id,
          type: DOM_OPERATION_TYPES[write.type] || write.type,
          args: write.args
        });
      });
    });
  });
  return items;
}

function getExclusiveSummary(measurements) {
  var candidates = {};
  var displayName;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = _assign({}, measurement.exclusive, measurement.inclusive);

    for (var id in allIDs) {
      displayName = measurement.displayNames[id].current;

      candidates[displayName] = candidates[displayName] || {
        componentName: displayName,
        inclusive: 0,
        exclusive: 0,
        render: 0,
        count: 0
      };
      if (measurement.render[id]) {
        candidates[displayName].render += measurement.render[id];
      }
      if (measurement.exclusive[id]) {
        candidates[displayName].exclusive += measurement.exclusive[id];
      }
      if (measurement.inclusive[id]) {
        candidates[displayName].inclusive += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[displayName].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (displayName in candidates) {
    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[displayName]);
    }
  }

  arr.sort(function (a, b) {
    return b.exclusive - a.exclusive;
  });

  return arr;
}

function getInclusiveSummary(measurements, onlyClean) {
  var candidates = {};
  var inclusiveKey;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = _assign({}, measurement.exclusive, measurement.inclusive);
    var cleanComponents;

    if (onlyClean) {
      cleanComponents = getUnchangedComponents(measurement);
    }

    for (var id in allIDs) {
      if (onlyClean && !cleanComponents[id]) {
        continue;
      }

      var displayName = measurement.displayNames[id];

      // Inclusive time is not useful for many components without knowing where
      // they are instantiated. So we aggregate inclusive time with both the
      // owner and current displayName as the key.
      inclusiveKey = displayName.owner + ' > ' + displayName.current;

      candidates[inclusiveKey] = candidates[inclusiveKey] || {
        componentName: inclusiveKey,
        time: 0,
        count: 0
      };

      if (measurement.inclusive[id]) {
        candidates[inclusiveKey].time += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[inclusiveKey].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (inclusiveKey in candidates) {
    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[inclusiveKey]);
    }
  }

  arr.sort(function (a, b) {
    return b.time - a.time;
  });

  return arr;
}

function getUnchangedComponents(measurement) {
  // For a given reconcile, look at which components did not actually
  // render anything to the DOM and return a mapping of their ID to
  // the amount of time it took to render the entire subtree.
  var cleanComponents = {};
  var writes = measurement.writes;
  var dirtyComposites = {};
  Object.keys(writes).forEach(function (id) {
    writes[id].forEach(function (write) {
      // Root mounting (innerHTML set) is recorded with an ID of ''
      if (id !== '') {
        measurement.hierarchy[id].forEach(function (c) {
          return dirtyComposites[c] = true;
        });
      }
    });
  });
  var allIDs = _assign({}, measurement.exclusive, measurement.inclusive);

  for (var id in allIDs) {
    var isDirty = false;
    // See if any of the DOM operations applied to this component's subtree.
    if (dirtyComposites[id]) {
      isDirty = true;
    }
    // check if component newly created
    if (measurement.created[id]) {
      isDirty = true;
    }
    if (!isDirty && measurement.counts[id] > 0) {
      cleanComponents[id] = true;
    }
  }
  return cleanComponents;
}

var ReactDefaultPerfAnalysis = {
  getExclusiveSummary: getExclusiveSummary,
  getInclusiveSummary: getInclusiveSummary,
  getDOMSummary: getDOMSummary,
  getTotalTime: getTotalTime
};

module.exports = ReactDefaultPerfAnalysis;
},{"object-assign":547}],444:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

'use strict';

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (process.env.NODE_ENV !== 'production') {
      ref = !config.hasOwnProperty('ref') || Object.getOwnPropertyDescriptor(config, 'ref').get ? null : config.ref;
      key = !config.hasOwnProperty('key') || Object.getOwnPropertyDescriptor(config, 'key').get ? null : '' + config.key;
    } else {
      ref = config.ref === undefined ? null : config.ref;
      key = config.key === undefined ? null : '' + config.key;
    }
    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    // Create dummy `key` and `ref` property to `props` to warn users
    // against its use
    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
      if (!props.hasOwnProperty('key')) {
        Object.defineProperty(props, 'key', {
          get: function () {
            if (!specialPropKeyWarningShown) {
              specialPropKeyWarningShown = true;
              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
            }
            return undefined;
          },
          configurable: true
        });
      }
      if (!props.hasOwnProperty('ref')) {
        Object.defineProperty(props, 'ref', {
          get: function () {
            if (!specialPropRefWarningShown) {
              specialPropRefWarningShown = true;
              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
            }
            return undefined;
          },
          configurable: true
        });
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (config.ref !== undefined) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (config.key !== undefined) {
      key = '' + config.key;
    }
    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":418,"./canDefineProperty":494,"_process":9,"fbjs/lib/warning":546,"object-assign":547}],445:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElementValidator
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactCurrentOwner = require('./ReactCurrentOwner');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

var loggedTypeFailures = {};

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
  if (addenda === null) {
    // we already showed the warning
    return;
  }
  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : void 0;
}

/**
 * Shared warning and monitoring code for the key warnings.
 *
 * @internal
 * @param {string} messageType A key used for de-duping warnings.
 * @param {ReactElement} element Component that requires a key.
 * @param {*} parentType element's parent's type.
 * @returns {?object} A set of addenda to use in the warning message, or null
 * if the warning has already been shown before (and shouldn't be shown again).
 */
function getAddendaForKeyUse(messageType, element, parentType) {
  var addendum = getDeclarationErrorAddendum();
  if (!addendum) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      addendum = ' Check the top-level render call using <' + parentName + '>.';
    }
  }

  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
  if (memoizer[addendum]) {
    return null;
  }
  memoizer[addendum] = true;

  var addenda = {
    parentOrOwner: addendum,
    url: ' See https://fb.me/react-warning-keys for more information.',
    childOwner: null
  };

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  return addenda;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Assert that the props are valid
 *
 * @param {string} componentName Name of the component for error messages.
 * @param {object} propTypes Map of prop name to a ReactPropType
 * @param {object} props
 * @param {string} location e.g. "prop", "context", "child context"
 * @private
 */
function checkPropTypes(componentName, propTypes, props, location) {
  for (var propName in propTypes) {
    if (propTypes.hasOwnProperty(propName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
        error = propTypes[propName](props, propName, componentName, location);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum();
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : void 0;
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":418,"./ReactElement":444,"./ReactPropTypeLocationNames":465,"./ReactPropTypeLocations":466,"./canDefineProperty":494,"./getIteratorFn":505,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],446:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
},{}],447:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {?String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a, b) {
  try {
    return func(a, b);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
    return undefined;
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
      var boundFunc = func.bind(null, a, b);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
}).call(this,require('_process'))
},{"_process":9}],448:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
},{"./EventPluginHub":401}],449:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._nativeParent) {
    inst = inst._nativeParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
},{"./PooledClass":408,"./ReactDOMComponentTree":423,"./ReactUpdates":472,"./getEventTarget":504,"fbjs/lib/EventListener":521,"fbjs/lib/ExecutionEnvironment":522,"fbjs/lib/getUnboundedScrollPosition":533,"object-assign":547}],450:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactFeatureFlags
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
},{}],451:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactClass = require('./ReactClass');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactNativeComponent = require('./ReactNativeComponent');
var ReactPerf = require('./ReactPerf');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  Class: ReactClass.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  NativeComponent: ReactNativeComponent.injection,
  Perf: ReactPerf.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
},{"./DOMProperty":395,"./EventPluginHub":401,"./EventPluginUtils":403,"./ReactBrowserEventEmitter":410,"./ReactClass":413,"./ReactComponentEnvironment":416,"./ReactEmptyComponent":446,"./ReactNativeComponent":460,"./ReactPerf":464,"./ReactUpdates":472}],452:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
},{"./ReactDOMSelection":434,"fbjs/lib/containsNode":525,"fbjs/lib/focusNode":530,"fbjs/lib/getActiveElement":531}],453:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceMap
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;
},{}],454:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstrumentation
 */

'use strict';

var ReactDebugTool = require('./ReactDebugTool');

module.exports = { debugTool: ReactDebugTool };
},{"./ReactDebugTool":439}],455:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInvalidSetStateWarningDevTool
 */

'use strict';

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningDevTool = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningDevTool;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/warning":546}],456:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
},{"./adler32":493}],457:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactElement = require('./ReactElement');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactPerf = require('./ReactPerf');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  ReactReconciler.unmountComponent(instance, safely);

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._nativeParent);
  }
}

function getNativeRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevNativeInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevNativeInstance && !prevNativeInstance._nativeParent ? prevNativeInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getNativeRootInstanceInContainer(container);
  return root ? root._nativeContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  // this.props is actually a ReactElement
  return this.props;
};

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by devtools!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance);
    }

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : void 0;

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }
  }
};

ReactPerf.measureMethods(ReactMount, 'ReactMount', {
  _renderNewRootComponent: '_renderNewRootComponent',
  _mountImageIntoNode: '_mountImageIntoNode'
});

module.exports = ReactMount;
}).call(this,require('_process'))
},{"./DOMLazyTree":393,"./DOMProperty":395,"./ReactBrowserEventEmitter":410,"./ReactCurrentOwner":418,"./ReactDOMComponentTree":423,"./ReactDOMContainerInfo":424,"./ReactDOMFeatureFlags":428,"./ReactElement":444,"./ReactFeatureFlags":450,"./ReactInstrumentation":454,"./ReactMarkupChecksum":456,"./ReactPerf":464,"./ReactReconciler":469,"./ReactUpdateQueue":471,"./ReactUpdates":472,"./instantiateReactComponent":510,"./setInnerHTML":516,"./shouldUpdateReactComponent":518,"_process":9,"fbjs/lib/emptyObject":529,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],458:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 */

'use strict';

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getNativeNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.SET_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
      var nextChildren;
      if (process.env.NODE_ENV !== 'production') {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;
      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getNativeNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;
}).call(this,require('_process'))
},{"./ReactChildReconciler":411,"./ReactComponentEnvironment":416,"./ReactCurrentOwner":418,"./ReactMultiChildUpdateTypes":459,"./ReactReconciler":469,"./flattenChildren":499,"_process":9,"fbjs/lib/invariant":536}],459:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  SET_MARKUP: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;
},{"fbjs/lib/keyMirror":539}],460:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNativeComponent
 */

'use strict';

var _assign = require('object-assign');

var invariant = require('fbjs/lib/invariant');

var autoGenerateWrapperClass = null;
var genericComponentClass = null;
// This registry keeps track of wrapper classes around native tags.
var tagToComponentClass = {};
var textComponentClass = null;

var ReactNativeComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function (componentClasses) {
    _assign(tagToComponentClass, componentClasses);
  }
};

/**
 * Get a composite component wrapper class for a specific tag.
 *
 * @param {ReactElement} element The tag for which to get the class.
 * @return {function} The React class constructor function.
 */
function getComponentClassForElement(element) {
  if (typeof element.type === 'function') {
    return element.type;
  }
  var tag = element.type;
  var componentClass = tagToComponentClass[tag];
  if (componentClass == null) {
    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
  }
  return componentClass;
}

/**
 * Get a native internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactNativeComponent = {
  getComponentClassForElement: getComponentClassForElement,
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactNativeComponentInjection
};

module.exports = ReactNativeComponent;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536,"object-assign":547}],461:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNodeTypes
 */

'use strict';

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  NATIVE: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (ReactElement.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.NATIVE;
      }
    }
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : invariant(false) : void 0;
  }
};

module.exports = ReactNodeTypes;
}).call(this,require('_process'))
},{"./ReactElement":444,"_process":9,"fbjs/lib/invariant":536}],462:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNoopUpdateQueue
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnTDZ(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnTDZ(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnTDZ(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnTDZ(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/warning":546}],463:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function (object) {
    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],464:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPerf
 */

'use strict';

/**
 * ReactPerf is a general AOP system designed to measure performance. This
 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
 */

var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * @param {object} object
   * @param {string} objectName
   * @param {object<string>} methodNames
   */
  measureMethods: function (object, objectName, methodNames) {
    if (process.env.NODE_ENV !== 'production') {
      for (var key in methodNames) {
        if (!methodNames.hasOwnProperty(key)) {
          continue;
        }
        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
      }
    }
  },

  /**
   * Use this to wrap methods you want to measure. Zero overhead in production.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function (objName, fnName, func) {
    if (process.env.NODE_ENV !== 'production') {
      var measuredFunc = null;
      var wrapper = function () {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
      wrapper.displayName = objName + '_' + fnName;
      return wrapper;
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function (measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;
}).call(this,require('_process'))
},{"_process":9}],465:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}).call(this,require('_process'))
},{"_process":9}],466:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;
},{"fbjs/lib/keyMirror":539}],467:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getIteratorFn = require('./getIteratorFn');

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
/*eslint-disable no-self-compare*/
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}
/*eslint-enable no-self-compare*/

function createChainableTypeChecker(validate) {
  function checkType(isRequired, props, propName, componentName, location, propFullName) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!ReactElement.isValidElement(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    return createChainableTypeChecker(function () {
      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
    });
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    return createChainableTypeChecker(function () {
      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
    });
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

// Returns class name of the object, if any.
function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
},{"./ReactElement":444,"./ReactPropTypeLocationNames":465,"./getIteratorFn":505,"fbjs/lib/emptyFunction":528}],468:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var Transaction = require('./Transaction');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
},{"./CallbackQueue":390,"./PooledClass":408,"./ReactBrowserEventEmitter":410,"./ReactInputSelection":452,"./Transaction":490,"object-assign":547}],469:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconciler
 */

'use strict';

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing native component instance
   * @param {?object} info about the native container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, nativeParent, nativeContainerInfo, context) {
    var markup = internalInstance.mountComponent(transaction, nativeParent, nativeContainerInfo, context);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onMountComponent(internalInstance);
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getNativeNode: function (internalInstance) {
    return internalInstance.getNativeNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onUnmountComponent(internalInstance);
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onUpdateComponent(internalInstance);
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction) {
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onUpdateComponent(internalInstance);
    }
  }

};

module.exports = ReactReconciler;
}).call(this,require('_process'))
},{"./ReactInstrumentation":454,"./ReactRef":470,"_process":9}],470:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRef
 */

'use strict';

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;

  return(
    // This has a few false positives w/r/t empty components.
    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
  );
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
},{"./ReactOwner":463}],471:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdateQueue
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, newElement) {
    internalInstance._pendingElement = newElement;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : invariant(false) : void 0;
  }

};

module.exports = ReactUpdateQueue;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":418,"./ReactInstanceMap":453,"./ReactUpdates":472,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],472:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactPerf = require('./ReactPerf');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.props === component._renderedComponent._currentElement) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};
flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setProps, setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
}).call(this,require('_process'))
},{"./CallbackQueue":390,"./PooledClass":408,"./ReactFeatureFlags":450,"./ReactPerf":464,"./ReactReconciler":469,"./Transaction":490,"_process":9,"fbjs/lib/invariant":536,"object-assign":547}],473:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactVersion
 */

'use strict';

module.exports = '15.0.1';
},{}],474:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).map(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
},{}],475:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var keyOf = require('fbjs/lib/keyOf');
var shallowEqual = require('fbjs/lib/shallowEqual');

var topLevelTypes = EventConstants.topLevelTypes;

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSelect: null }),
      captured: keyOf({ onSelectCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;
var ON_SELECT_KEY = keyOf({ onSelect: null });

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case topLevelTypes.topSelectionChange:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === ON_SELECT_KEY) {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
},{"./EventConstants":400,"./EventPropagators":404,"./ReactDOMComponentTree":423,"./ReactInputSelection":452,"./SyntheticEvent":481,"./isTextInputElement":512,"fbjs/lib/ExecutionEnvironment":522,"fbjs/lib/getActiveElement":531,"fbjs/lib/keyOf":540,"fbjs/lib/shallowEqual":545}],476:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');
var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  abort: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAbort: true }),
      captured: keyOf({ onAbortCapture: true })
    }
  },
  animationEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationEnd: true }),
      captured: keyOf({ onAnimationEndCapture: true })
    }
  },
  animationIteration: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationIteration: true }),
      captured: keyOf({ onAnimationIterationCapture: true })
    }
  },
  animationStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationStart: true }),
      captured: keyOf({ onAnimationStartCapture: true })
    }
  },
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBlur: true }),
      captured: keyOf({ onBlurCapture: true })
    }
  },
  canPlay: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlay: true }),
      captured: keyOf({ onCanPlayCapture: true })
    }
  },
  canPlayThrough: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlayThrough: true }),
      captured: keyOf({ onCanPlayThroughCapture: true })
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onClick: true }),
      captured: keyOf({ onClickCapture: true })
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onContextMenu: true }),
      captured: keyOf({ onContextMenuCapture: true })
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCopy: true }),
      captured: keyOf({ onCopyCapture: true })
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCut: true }),
      captured: keyOf({ onCutCapture: true })
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDoubleClick: true }),
      captured: keyOf({ onDoubleClickCapture: true })
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrag: true }),
      captured: keyOf({ onDragCapture: true })
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnd: true }),
      captured: keyOf({ onDragEndCapture: true })
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnter: true }),
      captured: keyOf({ onDragEnterCapture: true })
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragExit: true }),
      captured: keyOf({ onDragExitCapture: true })
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragLeave: true }),
      captured: keyOf({ onDragLeaveCapture: true })
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragOver: true }),
      captured: keyOf({ onDragOverCapture: true })
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragStart: true }),
      captured: keyOf({ onDragStartCapture: true })
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrop: true }),
      captured: keyOf({ onDropCapture: true })
    }
  },
  durationChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDurationChange: true }),
      captured: keyOf({ onDurationChangeCapture: true })
    }
  },
  emptied: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEmptied: true }),
      captured: keyOf({ onEmptiedCapture: true })
    }
  },
  encrypted: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEncrypted: true }),
      captured: keyOf({ onEncryptedCapture: true })
    }
  },
  ended: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEnded: true }),
      captured: keyOf({ onEndedCapture: true })
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onError: true }),
      captured: keyOf({ onErrorCapture: true })
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onFocus: true }),
      captured: keyOf({ onFocusCapture: true })
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInput: true }),
      captured: keyOf({ onInputCapture: true })
    }
  },
  invalid: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInvalid: true }),
      captured: keyOf({ onInvalidCapture: true })
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyDown: true }),
      captured: keyOf({ onKeyDownCapture: true })
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyPress: true }),
      captured: keyOf({ onKeyPressCapture: true })
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyUp: true }),
      captured: keyOf({ onKeyUpCapture: true })
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoad: true }),
      captured: keyOf({ onLoadCapture: true })
    }
  },
  loadedData: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedData: true }),
      captured: keyOf({ onLoadedDataCapture: true })
    }
  },
  loadedMetadata: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedMetadata: true }),
      captured: keyOf({ onLoadedMetadataCapture: true })
    }
  },
  loadStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadStart: true }),
      captured: keyOf({ onLoadStartCapture: true })
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseDown: true }),
      captured: keyOf({ onMouseDownCapture: true })
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseMove: true }),
      captured: keyOf({ onMouseMoveCapture: true })
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOut: true }),
      captured: keyOf({ onMouseOutCapture: true })
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOver: true }),
      captured: keyOf({ onMouseOverCapture: true })
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseUp: true }),
      captured: keyOf({ onMouseUpCapture: true })
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPaste: true }),
      captured: keyOf({ onPasteCapture: true })
    }
  },
  pause: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPause: true }),
      captured: keyOf({ onPauseCapture: true })
    }
  },
  play: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlay: true }),
      captured: keyOf({ onPlayCapture: true })
    }
  },
  playing: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlaying: true }),
      captured: keyOf({ onPlayingCapture: true })
    }
  },
  progress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onProgress: true }),
      captured: keyOf({ onProgressCapture: true })
    }
  },
  rateChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onRateChange: true }),
      captured: keyOf({ onRateChangeCapture: true })
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onReset: true }),
      captured: keyOf({ onResetCapture: true })
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onScroll: true }),
      captured: keyOf({ onScrollCapture: true })
    }
  },
  seeked: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeked: true }),
      captured: keyOf({ onSeekedCapture: true })
    }
  },
  seeking: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeking: true }),
      captured: keyOf({ onSeekingCapture: true })
    }
  },
  stalled: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onStalled: true }),
      captured: keyOf({ onStalledCapture: true })
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSubmit: true }),
      captured: keyOf({ onSubmitCapture: true })
    }
  },
  suspend: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSuspend: true }),
      captured: keyOf({ onSuspendCapture: true })
    }
  },
  timeUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTimeUpdate: true }),
      captured: keyOf({ onTimeUpdateCapture: true })
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchCancel: true }),
      captured: keyOf({ onTouchCancelCapture: true })
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchEnd: true }),
      captured: keyOf({ onTouchEndCapture: true })
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchMove: true }),
      captured: keyOf({ onTouchMoveCapture: true })
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchStart: true }),
      captured: keyOf({ onTouchStartCapture: true })
    }
  },
  transitionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTransitionEnd: true }),
      captured: keyOf({ onTransitionEndCapture: true })
    }
  },
  volumeChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onVolumeChange: true }),
      captured: keyOf({ onVolumeChangeCapture: true })
    }
  },
  waiting: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWaiting: true }),
      captured: keyOf({ onWaitingCapture: true })
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWheel: true }),
      captured: keyOf({ onWheelCapture: true })
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topAbort: eventTypes.abort,
  topAnimationEnd: eventTypes.animationEnd,
  topAnimationIteration: eventTypes.animationIteration,
  topAnimationStart: eventTypes.animationStart,
  topBlur: eventTypes.blur,
  topCanPlay: eventTypes.canPlay,
  topCanPlayThrough: eventTypes.canPlayThrough,
  topClick: eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy: eventTypes.copy,
  topCut: eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag: eventTypes.drag,
  topDragEnd: eventTypes.dragEnd,
  topDragEnter: eventTypes.dragEnter,
  topDragExit: eventTypes.dragExit,
  topDragLeave: eventTypes.dragLeave,
  topDragOver: eventTypes.dragOver,
  topDragStart: eventTypes.dragStart,
  topDrop: eventTypes.drop,
  topDurationChange: eventTypes.durationChange,
  topEmptied: eventTypes.emptied,
  topEncrypted: eventTypes.encrypted,
  topEnded: eventTypes.ended,
  topError: eventTypes.error,
  topFocus: eventTypes.focus,
  topInput: eventTypes.input,
  topInvalid: eventTypes.invalid,
  topKeyDown: eventTypes.keyDown,
  topKeyPress: eventTypes.keyPress,
  topKeyUp: eventTypes.keyUp,
  topLoad: eventTypes.load,
  topLoadedData: eventTypes.loadedData,
  topLoadedMetadata: eventTypes.loadedMetadata,
  topLoadStart: eventTypes.loadStart,
  topMouseDown: eventTypes.mouseDown,
  topMouseMove: eventTypes.mouseMove,
  topMouseOut: eventTypes.mouseOut,
  topMouseOver: eventTypes.mouseOver,
  topMouseUp: eventTypes.mouseUp,
  topPaste: eventTypes.paste,
  topPause: eventTypes.pause,
  topPlay: eventTypes.play,
  topPlaying: eventTypes.playing,
  topProgress: eventTypes.progress,
  topRateChange: eventTypes.rateChange,
  topReset: eventTypes.reset,
  topScroll: eventTypes.scroll,
  topSeeked: eventTypes.seeked,
  topSeeking: eventTypes.seeking,
  topStalled: eventTypes.stalled,
  topSubmit: eventTypes.submit,
  topSuspend: eventTypes.suspend,
  topTimeUpdate: eventTypes.timeUpdate,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd: eventTypes.touchEnd,
  topTouchMove: eventTypes.touchMove,
  topTouchStart: eventTypes.touchStart,
  topTransitionEnd: eventTypes.transitionEnd,
  topVolumeChange: eventTypes.volumeChange,
  topWaiting: eventTypes.waiting,
  topWheel: eventTypes.wheel
};

for (var type in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[type].dependencies = [type];
}

var ON_CLICK_KEY = keyOf({ onClick: null });
var onClickListeners = {};

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topAbort:
      case topLevelTypes.topCanPlay:
      case topLevelTypes.topCanPlayThrough:
      case topLevelTypes.topDurationChange:
      case topLevelTypes.topEmptied:
      case topLevelTypes.topEncrypted:
      case topLevelTypes.topEnded:
      case topLevelTypes.topError:
      case topLevelTypes.topInput:
      case topLevelTypes.topInvalid:
      case topLevelTypes.topLoad:
      case topLevelTypes.topLoadedData:
      case topLevelTypes.topLoadedMetadata:
      case topLevelTypes.topLoadStart:
      case topLevelTypes.topPause:
      case topLevelTypes.topPlay:
      case topLevelTypes.topPlaying:
      case topLevelTypes.topProgress:
      case topLevelTypes.topRateChange:
      case topLevelTypes.topReset:
      case topLevelTypes.topSeeked:
      case topLevelTypes.topSeeking:
      case topLevelTypes.topStalled:
      case topLevelTypes.topSubmit:
      case topLevelTypes.topSuspend:
      case topLevelTypes.topTimeUpdate:
      case topLevelTypes.topVolumeChange:
      case topLevelTypes.topWaiting:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topAnimationEnd:
      case topLevelTypes.topAnimationIteration:
      case topLevelTypes.topAnimationStart:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case topLevelTypes.topTransitionEnd:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    if (registrationName === ON_CLICK_KEY) {
      var id = inst._rootNodeID;
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[id]) {
        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === ON_CLICK_KEY) {
      var id = inst._rootNodeID;
      onClickListeners[id].remove();
      delete onClickListeners[id];
    }
  }

};

module.exports = SimpleEventPlugin;
}).call(this,require('_process'))
},{"./EventConstants":400,"./EventPropagators":404,"./ReactDOMComponentTree":423,"./SyntheticAnimationEvent":477,"./SyntheticClipboardEvent":478,"./SyntheticDragEvent":480,"./SyntheticEvent":481,"./SyntheticFocusEvent":482,"./SyntheticKeyboardEvent":484,"./SyntheticMouseEvent":485,"./SyntheticTouchEvent":486,"./SyntheticTransitionEvent":487,"./SyntheticUIEvent":488,"./SyntheticWheelEvent":489,"./getEventCharCode":501,"_process":9,"fbjs/lib/EventListener":521,"fbjs/lib/emptyFunction":528,"fbjs/lib/invariant":536,"fbjs/lib/keyOf":540}],477:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticAnimationEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
},{"./SyntheticEvent":481}],478:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
},{"./SyntheticEvent":481}],479:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
},{"./SyntheticEvent":481}],480:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
},{"./SyntheticMouseEvent":485}],481:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else {
      event.cancelBubble = true;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      var noop = require('fbjs/lib/emptyFunction');
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', noop));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', noop));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
}).call(this,require('_process'))
},{"./PooledClass":408,"_process":9,"fbjs/lib/emptyFunction":528,"fbjs/lib/warning":546,"object-assign":547}],482:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
},{"./SyntheticUIEvent":488}],483:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
},{"./SyntheticEvent":481}],484:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
},{"./SyntheticUIEvent":488,"./getEventCharCode":501,"./getEventKey":502,"./getEventModifierState":503}],485:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
},{"./SyntheticUIEvent":488,"./ViewportMetrics":491,"./getEventModifierState":503}],486:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
},{"./SyntheticUIEvent":488,"./getEventModifierState":503}],487:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTransitionEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
},{"./SyntheticEvent":481}],488:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target != null && target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
},{"./SyntheticEvent":481,"./getEventTarget":504}],489:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
},{"./SyntheticMouseEvent":485}],490:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occurred.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],491:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;
},{}],492:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 *
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : void 0;
  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  var currentIsArray = Array.isArray(current);
  var nextIsArray = Array.isArray(next);

  if (currentIsArray && nextIsArray) {
    current.push.apply(current, next);
    return current;
  }

  if (currentIsArray) {
    current.push(next);
    return current;
  }

  if (nextIsArray) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/invariant":536}],493:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
},{}],494:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule canDefineProperty
 */

'use strict';

var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
}).call(this,require('_process'))
},{"_process":9}],495:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createMicrosoftUnsafeLocalFunction
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
},{}],496:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      if (component) {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
}).call(this,require('_process'))
},{"./CSSProperty":388,"_process":9,"fbjs/lib/warning":546}],497:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule escapeTextContentForBrowser
 */

'use strict';

var ESCAPE_LOOKUP = {
  '&': '&amp;',
  '>': '&gt;',
  '<': '&lt;',
  '"': '&quot;',
  '\'': '&#x27;'
};

var ESCAPE_REGEX = /[&><"']/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextContentForBrowser;
},{}],498:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule findDOMNode
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getNativeComponentFromComposite = require('./getNativeComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getNativeComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : void 0;
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : void 0;
  }
}

module.exports = findDOMNode;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":418,"./ReactDOMComponentTree":423,"./ReactInstanceMap":453,"./getNativeComponentFromComposite":506,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],499:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 */

'use strict';

var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  var keyUnique = result[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : void 0;
  }
  if (keyUnique && child != null) {
    result[name] = child;
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;
}).call(this,require('_process'))
},{"./traverseAllChildren":519,"_process":9,"fbjs/lib/warning":546}],500:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

var forEachAccumulated = function (arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;
},{}],501:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
},{}],502:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
},{"./getEventCharCode":501}],503:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
},{}],504:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
},{}],505:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getIteratorFn
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],506:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNativeComponentFromComposite
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getNativeComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.NATIVE) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getNativeComponentFromComposite;
},{"./ReactNodeTypes":461}],507:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
},{}],508:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
},{"fbjs/lib/ExecutionEnvironment":522}],509:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getVendorPrefixedEventName
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
},{"fbjs/lib/ExecutionEnvironment":522}],510:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 */

'use strict';

var _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactNativeComponent = require('./ReactNativeComponent');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};
_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : void 0;

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactNativeComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactNativeComponent.createInstanceForText(node);
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getNativeNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._isOwnerNecessary = false;
    instance._warnedAboutRefsInRender = false;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;
}).call(this,require('_process'))
},{"./ReactCompositeComponent":417,"./ReactEmptyComponent":446,"./ReactNativeComponent":460,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546,"object-assign":547}],511:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
},{"fbjs/lib/ExecutionEnvironment":522}],512:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
}

module.exports = isTextInputElement;
},{}],513:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
'use strict';

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection. The current implementation of this
 * function assumes that a single child gets passed without a wrapper, but the
 * purpose of this helper function is to abstract away the particular structure
 * of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactComponent} The first and only `ReactComponent` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : void 0;
  return children;
}

module.exports = onlyChild;
}).call(this,require('_process'))
},{"./ReactElement":444,"_process":9,"fbjs/lib/invariant":536}],514:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule quoteAttributeValueForBrowser
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
},{"./escapeTextContentForBrowser":497}],515:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
* @providesModule renderSubtreeIntoContainer
*/

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;
},{"./ReactMount":457}],516:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  node.innerHTML = html;
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
},{"./createMicrosoftUnsafeLocalFunction":495,"fbjs/lib/ExecutionEnvironment":522}],517:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setTextContent
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
},{"./escapeTextContentForBrowser":497,"./setInnerHTML":516,"fbjs/lib/ExecutionEnvironment":522}],518:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
},{}],519:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactElement = require('./ReactElement');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var userProvidedKeyEscaperLookup = {
  '=': '=0',
  ':': '=2'
};

var userProvidedKeyEscapeRegex = /[=:]/g;

var didWarnAboutMaps = false;

function userProvidedKeyEscaper(match) {
  return userProvidedKeyEscaperLookup[match];
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return wrapUserProvidedKey(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * Escape a component key so that it is safe to use in a reactid.
 *
 * @param {*} text Component key to be escaped.
 * @return {string} An escaped string.
 */
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
}

/**
 * Wrap a `key` value explicitly provided by the user to distinguish it from
 * implicitly-generated keys generated by a component's index in its parent.
 *
 * @param {string} key Value of a user-provided `key` attribute
 * @return {string}
 */
function wrapUserProvidedKey(key) {
  return '$' + escapeUserProvidedKey(key);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":418,"./ReactElement":444,"./getIteratorFn":505,"_process":9,"fbjs/lib/invariant":536,"fbjs/lib/warning":546}],520:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule validateDOMNesting
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':

      case 'pre':
      case 'listing':

      case 'table':

      case 'hr':

      case 'xmp':

      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      if (childTag !== '#text') {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
}).call(this,require('_process'))
},{"_process":9,"fbjs/lib/emptyFunction":528,"fbjs/lib/warning":546,"object-assign":547}],521:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function (target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function () {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function () {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function (target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function () {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function () {}
};

module.exports = EventListener;
}).call(this,require('_process'))
},{"./emptyFunction":528,"_process":9}],522:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],523:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],524:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"./camelize":523}],525:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"./isTextNode":538}],526:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return(
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
}).call(this,require('_process'))
},{"./invariant":536,"_process":9}],527:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
}).call(this,require('_process'))
},{"./ExecutionEnvironment":522,"./createArrayFromMixed":526,"./getMarkupWrap":532,"./invariant":536,"_process":9}],528:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],529:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}).call(this,require('_process'))
},{"_process":9}],530:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
},{}],531:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 */
function getActiveElement() /*?DOMElement*/{
  if (typeof document === 'undefined') {
    return null;
  }
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;
},{}],532:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
}).call(this,require('_process'))
},{"./ExecutionEnvironment":522,"./invariant":536,"_process":9}],533:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
},{}],534:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],535:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"./hyphenate":534}],536:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

function invariant(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
}).call(this,require('_process'))
},{"_process":9}],537:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],538:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"./isNode":537}],539:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 */

'use strict';

var invariant = require('./invariant');

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function (obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
}).call(this,require('_process'))
},{"./invariant":536,"_process":9}],540:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without losing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function (oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
},{}],541:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;
},{}],542:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
},{}],543:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = require('./ExecutionEnvironment');

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
},{"./ExecutionEnvironment":522}],544:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = require('./performance');

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function () {
    return performance.now();
  };
} else {
  performanceNow = function () {
    return Date.now();
  };
}

module.exports = performanceNow;
},{"./performance":543}],545:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],546:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  warning = function (condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    }
  };
}

module.exports = warning;
}).call(this,require('_process'))
},{"./emptyFunction":528,"_process":9}],547:[function(require,module,exports){
/* eslint-disable no-unused-vars */
'use strict';
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

module.exports = Object.assign || function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (Object.getOwnPropertySymbols) {
			symbols = Object.getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],548:[function(require,module,exports){
'use strict';

module.exports = require('./lib/React');

},{"./lib/React":409}],549:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = require('./Subscriber');
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerSubscriber = (function (_super) {
    __extends(InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        _super.call(this);
        this.parent = parent;
        this.outerValue = outerValue;
        this.outerIndex = outerIndex;
        this.index = 0;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(Subscriber_1.Subscriber));
exports.InnerSubscriber = InnerSubscriber;

},{"./Subscriber":553}],550:[function(require,module,exports){
"use strict";
var root_1 = require('./util/root');
var observable_1 = require('./symbol/observable');
var toSubscriber_1 = require('./util/toSubscriber');
/**
 * A representation of any set of values over any amount of time. This the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */
var Observable = (function () {
    /**
     * @constructor
     * @param {Function} subscribe the function that is  called when the Observable is
     * initially subscribed to. This function is given a Subscriber, to which new values
     * can be `next`ed, or an `error` method can be called to raise an error, or
     * `complete` can be called to notify of a successful completion.
     */
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    /**
     * Creates a new Observable, with this Observable as the source, and the passed
     * operator defined as the new observable's operator.
     * @method lift
     * @param {Operator} operator the operator defining the operation to take on the observable
     * @return {Observable} a new observable with the Operator applied
     */
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    /**
     * Registers handlers for handling emitted values, error and completions from the observable, and
     *  executes the observable's subscriber function, which will take action to set up the underlying data stream
     * @method subscribe
     * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,
     *  or the first of three possible handlers, which is the handler for each value emitted from the observable.
     * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,
     *  the error will be thrown as unhandled
     * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.
     * @return {ISubscription} a subscription reference to the registered handlers
     */
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
        sink.add(operator ? operator.call(sink, this) : this._subscribe(sink));
        if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;
            if (sink.syncErrorThrown) {
                throw sink.syncErrorValue;
            }
        }
        return sink;
    };
    /**
     * @method forEach
     * @param {Function} next a handler for each value emitted by the observable
     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
     * @return {Promise} a promise that either resolves on observable completion or
     *  rejects with the handled error
     */
    Observable.prototype.forEach = function (next, PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            var subscription = _this.subscribe(function (value) {
                if (subscription) {
                    // if there is a subscription, then we can surmise
                    // the next handling is asynchronous. Any errors thrown
                    // need to be rejected explicitly and unsubscribe must be
                    // called manually
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscription.unsubscribe();
                    }
                }
                else {
                    // if there is NO subscription, then we're getting a nexted
                    // value synchronously during subscription. We can just call it.
                    // If it errors, Observable's `subscribe` imple will ensure the
                    // unsubscription logic is called, then synchronously rethrow the error.
                    // After that, Promise will trap the error and send it
                    // down the rejection path.
                    next(value);
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        return this.source.subscribe(subscriber);
    };
    /**
     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
     * @method Symbol.observable
     * @return {Observable} this instance of the observable
     */
    Observable.prototype[observable_1.$$observable] = function () {
        return this;
    };
    // HACK: Since TypeScript inherits static properties too, we have to
    // fight against TypeScript here so Subject can have a different static create signature
    /**
     * Creates a new cold Observable by calling the Observable constructor
     * @static true
     * @owner Observable
     * @method create
     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
     * @return {Observable} a new cold observable
     */
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());
exports.Observable = Observable;

},{"./symbol/observable":566,"./util/root":575,"./util/toSubscriber":577}],551:[function(require,module,exports){
"use strict";
exports.empty = {
    isUnsubscribed: true,
    next: function (value) { },
    error: function (err) { throw err; },
    complete: function () { }
};

},{}],552:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = require('./Subscriber');
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var OuterSubscriber = (function (_super) {
    __extends(OuterSubscriber, _super);
    function OuterSubscriber() {
        _super.apply(this, arguments);
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(Subscriber_1.Subscriber));
exports.OuterSubscriber = OuterSubscriber;

},{"./Subscriber":553}],553:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = require('./util/isFunction');
var Subscription_1 = require('./Subscription');
var rxSubscriber_1 = require('./symbol/rxSubscriber');
var Observer_1 = require('./Observer');
/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */
var Subscriber = (function (_super) {
    __extends(Subscriber, _super);
    /**
     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
     * defined Observer or a `next` callback function.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     */
    function Subscriber(destinationOrNext, error, complete) {
        _super.call(this);
        this.syncErrorValue = null;
        this.syncErrorThrown = false;
        this.syncErrorThrowable = false;
        this.isStopped = false;
        switch (arguments.length) {
            case 0:
                this.destination = Observer_1.empty;
                break;
            case 1:
                if (!destinationOrNext) {
                    this.destination = Observer_1.empty;
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        this.destination = destinationOrNext;
                        this.destination.add(this);
                    }
                    else {
                        this.syncErrorThrowable = true;
                        this.destination = new SafeSubscriber(this, destinationOrNext);
                    }
                    break;
                }
            default:
                this.syncErrorThrowable = true;
                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
                break;
        }
    }
    /**
     * A static factory for a Subscriber, given a (potentially partial) definition
     * of an Observer.
     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
     * Observer represented by the given arguments.
     */
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    /**
     * The {@link Observer} callback to receive notifications of type `next` from
     * the Observable, with a value. The Observable may call this method 0 or more
     * times.
     * @param {T} [value] The `next` value.
     * @return {void}
     */
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    /**
     * The {@link Observer} callback to receive notifications of type `error` from
     * the Observable, with an attached {@link Error}. Notifies the Observer that
     * the Observable has experienced an error condition.
     * @param {any} [err] The `error` exception.
     * @return {void}
     */
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    /**
     * The {@link Observer} callback to receive a valueless notification of type
     * `complete` from the Observable. Notifies the Observer that the Observable
     * has finished sending push-based notifications.
     * @return {void}
     */
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.isUnsubscribed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () {
        return this;
    };
    return Subscriber;
}(Subscription_1.Subscription));
exports.Subscriber = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SafeSubscriber = (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parent, observerOrNext, error, complete) {
        _super.call(this);
        this._parent = _parent;
        var next;
        var context = this;
        if (isFunction_1.isFunction(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            context = observerOrNext;
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (isFunction_1.isFunction(context.unsubscribe)) {
                this.add(context.unsubscribe.bind(context));
            }
            context.unsubscribe = this.unsubscribe.bind(this);
        }
        this._context = context;
        this._next = next;
        this._error = error;
        this._complete = complete;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parent = this._parent;
            if (!_parent.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parent, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parent = this._parent;
            if (this._error) {
                if (!_parent.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parent, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parent.syncErrorThrowable) {
                this.unsubscribe();
                throw err;
            }
            else {
                _parent.syncErrorValue = err;
                _parent.syncErrorThrown = true;
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _parent = this._parent;
            if (this._complete) {
                if (!_parent.syncErrorThrowable) {
                    this.__tryOrUnsub(this._complete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parent, this._complete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            throw err;
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parent = this._parent;
        this._context = null;
        this._parent = null;
        _parent.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

},{"./Observer":551,"./Subscription":554,"./symbol/rxSubscriber":567,"./util/isFunction":571}],554:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = require('./util/isArray');
var isObject_1 = require('./util/isObject');
var isFunction_1 = require('./util/isFunction');
var tryCatch_1 = require('./util/tryCatch');
var errorObject_1 = require('./util/errorObject');
/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */
var Subscription = (function () {
    /**
     * @param {function(): void} [unsubscribe] A function describing how to
     * perform the disposal of resources when the `unsubscribe` method is called.
     */
    function Subscription(unsubscribe) {
        /**
         * A flag to indicate whether this Subscription has already been unsubscribed.
         * @type {boolean}
         */
        this.isUnsubscribed = false;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    /**
     * Disposes the resources held by the subscription. May, for instance, cancel
     * an ongoing Observable execution or cancel any other type of work that
     * started when the Subscription was created.
     * @return {void}
     */
    Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.isUnsubscribed) {
            return;
        }
        this.isUnsubscribed = true;
        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this._subscriptions = null;
        if (isFunction_1.isFunction(_unsubscribe)) {
            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
            if (trial === errorObject_1.errorObject) {
                hasErrors = true;
                (errors = errors || []).push(errorObject_1.errorObject.e);
            }
        }
        if (isArray_1.isArray(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (isObject_1.isObject(sub)) {
                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
                    if (trial === errorObject_1.errorObject) {
                        hasErrors = true;
                        errors = errors || [];
                        var err = errorObject_1.errorObject.e;
                        if (err instanceof UnsubscriptionError) {
                            errors = errors.concat(err.errors);
                        }
                        else {
                            errors.push(err);
                        }
                    }
                }
            }
        }
        if (hasErrors) {
            throw new UnsubscriptionError(errors);
        }
    };
    /**
     * Adds a tear down to be called during the unsubscribe() of this
     * Subscription.
     *
     * If the tear down being added is a subscription that is already
     * unsubscribed, is the same reference `add` is being called on, or is
     * `Subscription.EMPTY`, it will not be added.
     *
     * If this subscription is already in an `isUnsubscribed` state, the passed
     * tear down logic will be executed immediately.
     *
     * @param {TeardownLogic} teardown The additional logic to execute on
     * teardown.
     * @return {Subscription} Returns the Subscription used or created to be
     * added to the inner subscriptions list. This Subscription can be used with
     * `remove()` to remove the passed teardown logic from the inner subscriptions
     * list.
     */
    Subscription.prototype.add = function (teardown) {
        if (!teardown || (teardown === this) || (teardown === Subscription.EMPTY)) {
            return;
        }
        var sub = teardown;
        switch (typeof teardown) {
            case 'function':
                sub = new Subscription(teardown);
            case 'object':
                if (sub.isUnsubscribed || typeof sub.unsubscribe !== 'function') {
                    break;
                }
                else if (this.isUnsubscribed) {
                    sub.unsubscribe();
                }
                else {
                    (this._subscriptions || (this._subscriptions = [])).push(sub);
                }
                break;
            default:
                throw new Error('Unrecognized teardown ' + teardown + ' added to Subscription.');
        }
        return sub;
    };
    /**
     * Removes a Subscription from the internal list of subscriptions that will
     * unsubscribe during the unsubscribe process of this Subscription.
     * @param {Subscription} subscription The subscription to remove.
     * @return {void}
     */
    Subscription.prototype.remove = function (subscription) {
        // HACK: This might be redundant because of the logic in `add()`
        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {
            return;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.isUnsubscribed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());
exports.Subscription = Subscription;
/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */
var UnsubscriptionError = (function (_super) {
    __extends(UnsubscriptionError, _super);
    function UnsubscriptionError(errors) {
        _super.call(this, 'unsubscriptoin error(s)');
        this.errors = errors;
        this.name = 'UnsubscriptionError';
    }
    return UnsubscriptionError;
}(Error));
exports.UnsubscriptionError = UnsubscriptionError;

},{"./util/errorObject":569,"./util/isArray":570,"./util/isFunction":571,"./util/isObject":572,"./util/tryCatch":578}],555:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = require('../Observable');
var ScalarObservable_1 = require('./ScalarObservable');
var EmptyObservable_1 = require('./EmptyObservable');
var isScheduler_1 = require('../util/isScheduler');
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayObservable = (function (_super) {
    __extends(ArrayObservable, _super);
    function ArrayObservable(array, scheduler) {
        _super.call(this);
        this.array = array;
        this.scheduler = scheduler;
        if (!scheduler && array.length === 1) {
            this._isScalar = true;
            this.value = array[0];
        }
    }
    ArrayObservable.create = function (array, scheduler) {
        return new ArrayObservable(array, scheduler);
    };
    /**
     * Creates an Observable that emits some values you specify as arguments,
     * immediately one after the other, and then emits a complete notification.
     *
     * <span class="informal">Emits the arguments you provide, then completes.
     * </span>
     *
     * <img src="./img/of.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the arguments given, and the complete notification thereafter. It can
     * be used for composing with other Observables, such as with {@link concat}.
     * By default, it uses a `null` Scheduler, which means the `next`
     * notifications are sent synchronously, although with a different Scheduler
     * it is possible to determine when those notifications will be delivered.
     *
     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>
     * var numbers = Rx.Observable.of(10, 20, 30);
     * var letters = Rx.Observable.of('a', 'b', 'c');
     * var interval = Rx.Observable.interval(1000);
     * var result = numbers.concat(letters).concat(interval);
     * result.subscribe(x => console.log(x));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link throw}
     *
     * @param {...T} values Arguments that represent `next` values to be emitted.
     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling
     * the emissions of the `next` notifications.
     * @return {Observable<T>} An Observable that emits each given input value.
     * @static true
     * @name of
     * @owner Observable
     */
    ArrayObservable.of = function () {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i - 0] = arguments[_i];
        }
        var scheduler = array[array.length - 1];
        if (isScheduler_1.isScheduler(scheduler)) {
            array.pop();
        }
        else {
            scheduler = null;
        }
        var len = array.length;
        if (len > 1) {
            return new ArrayObservable(array, scheduler);
        }
        else if (len === 1) {
            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);
        }
        else {
            return new EmptyObservable_1.EmptyObservable(scheduler);
        }
    };
    ArrayObservable.dispatch = function (state) {
        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(array[index]);
        if (subscriber.isUnsubscribed) {
            return;
        }
        state.index = index + 1;
        this.schedule(state);
    };
    ArrayObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var array = this.array;
        var count = array.length;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ArrayObservable.dispatch, 0, {
                array: array, index: index, count: count, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < count && !subscriber.isUnsubscribed; i++) {
                subscriber.next(array[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayObservable;
}(Observable_1.Observable));
exports.ArrayObservable = ArrayObservable;

},{"../Observable":550,"../util/isScheduler":574,"./EmptyObservable":556,"./ScalarObservable":557}],556:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = require('../Observable');
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var EmptyObservable = (function (_super) {
    __extends(EmptyObservable, _super);
    function EmptyObservable(scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits a complete notification.
     *
     * <span class="informal">Just emits 'complete', and nothing else.
     * </span>
     *
     * <img src="./img/empty.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the complete notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then complete.</caption>
     * var result = Rx.Observable.empty().startWith(7);
     * result.subscribe(x => console.log(x));
     *
     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()
     * );
     * result.subscribe(x => console.log(x));
     *
     * @see {@link create}
     * @see {@link never}
     * @see {@link of}
     * @see {@link throw}
     *
     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling
     * the emission of the complete notification.
     * @return {Observable} An "empty" Observable: emits only the complete
     * notification.
     * @static true
     * @name empty
     * @owner Observable
     */
    EmptyObservable.create = function (scheduler) {
        return new EmptyObservable(scheduler);
    };
    EmptyObservable.dispatch = function (_a) {
        var subscriber = _a.subscriber;
        subscriber.complete();
    };
    EmptyObservable.prototype._subscribe = function (subscriber) {
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });
        }
        else {
            subscriber.complete();
        }
    };
    return EmptyObservable;
}(Observable_1.Observable));
exports.EmptyObservable = EmptyObservable;

},{"../Observable":550}],557:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = require('../Observable');
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ScalarObservable = (function (_super) {
    __extends(ScalarObservable, _super);
    function ScalarObservable(value, scheduler) {
        _super.call(this);
        this.value = value;
        this.scheduler = scheduler;
        this._isScalar = true;
    }
    ScalarObservable.create = function (value, scheduler) {
        return new ScalarObservable(value, scheduler);
    };
    ScalarObservable.dispatch = function (state) {
        var done = state.done, value = state.value, subscriber = state.subscriber;
        if (done) {
            subscriber.complete();
            return;
        }
        subscriber.next(value);
        if (subscriber.isUnsubscribed) {
            return;
        }
        state.done = true;
        this.schedule(state);
    };
    ScalarObservable.prototype._subscribe = function (subscriber) {
        var value = this.value;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ScalarObservable.dispatch, 0, {
                done: false, value: value, subscriber: subscriber
            });
        }
        else {
            subscriber.next(value);
            if (!subscriber.isUnsubscribed) {
                subscriber.complete();
            }
        }
    };
    return ScalarObservable;
}(Observable_1.Observable));
exports.ScalarObservable = ScalarObservable;

},{"../Observable":550}],558:[function(require,module,exports){
"use strict";
var isScheduler_1 = require('../util/isScheduler');
var ArrayObservable_1 = require('../observable/ArrayObservable');
var mergeAll_1 = require('./mergeAll');
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return concatStatic.apply(void 0, [this].concat(observables));
}
exports.concat = concat;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins multiple Observables together by subscribing to them one at a time and
 * merging their results into the output Observable. Will wait for each
 * Observable to complete before moving on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat(timer1, timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} input1 An input Observable to concatenate with others.
 * @param {Observable} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */
function concatStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var scheduler = null;
    var args = observables;
    if (isScheduler_1.isScheduler(args[observables.length - 1])) {
        scheduler = args.pop();
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));
}
exports.concatStatic = concatStatic;

},{"../observable/ArrayObservable":555,"../util/isScheduler":574,"./mergeAll":561}],559:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = require('../Subscriber');
var EmptyError_1 = require('../util/EmptyError');
/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} an Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */
function first(predicate, resultSelector, defaultValue) {
    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));
}
exports.first = first;
var FirstOperator = (function () {
    function FirstOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    FirstOperator.prototype.call = function (observer, source) {
        return source._subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return FirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FirstSubscriber = (function (_super) {
    __extends(FirstSubscriber, _super);
    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.index = 0;
        this.hasCompleted = false;
    }
    FirstSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._emit = function (value, index) {
        if (this.resultSelector) {
            this._tryResultSelector(value, index);
            return;
        }
        this._emitFinal(value);
    };
    FirstSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this._emitFinal(result);
    };
    FirstSubscriber.prototype._emitFinal = function (value) {
        var destination = this.destination;
        destination.next(value);
        destination.complete();
        this.hasCompleted = true;
    };
    FirstSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {
            destination.next(this.defaultValue);
            destination.complete();
        }
        else if (!this.hasCompleted) {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return FirstSubscriber;
}(Subscriber_1.Subscriber));

},{"../Subscriber":553,"../util/EmptyError":568}],560:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = require('../Subscriber');
/**
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the returned observable
 *
 * <img src="./img/map.png" width="100%">
 *
 * @param {Function} project the function to create projection
 * @param {any} [thisArg] an optional argument to define what `this` is in the project function
 * @return {Observable} a observable of projected values
 * @method map
 * @owner Observable
 */
function map(project, thisArg) {
    if (typeof project !== 'function') {
        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
    }
    return this.lift(new MapOperator(project, thisArg));
}
exports.map = map;
var MapOperator = (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapSubscriber = (function (_super) {
    __extends(MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        _super.call(this, destination);
        this.project = project;
        this.count = 0;
        this.thisArg = thisArg || this;
    }
    // NOTE: This looks unoptimized, but it's actually purposefully NOT
    // using try/catch optimizations.
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(Subscriber_1.Subscriber));

},{"../Subscriber":553}],561:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = require('../OuterSubscriber');
var subscribeToResult_1 = require('../util/subscribeToResult');
/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return this.lift(new MergeAllOperator(concurrent));
}
exports.mergeAll = mergeAll;
var MergeAllOperator = (function () {
    function MergeAllOperator(concurrent) {
        this.concurrent = concurrent;
    }
    MergeAllOperator.prototype.call = function (observer, source) {
        return source._subscribe(new MergeAllSubscriber(observer, this.concurrent));
    };
    return MergeAllOperator;
}());
exports.MergeAllOperator = MergeAllOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeAllSubscriber = (function (_super) {
    __extends(MergeAllSubscriber, _super);
    function MergeAllSubscriber(destination, concurrent) {
        _super.call(this, destination);
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
    }
    MergeAllSubscriber.prototype._next = function (observable) {
        if (this.active < this.concurrent) {
            this.active++;
            this.add(subscribeToResult_1.subscribeToResult(this, observable));
        }
        else {
            this.buffer.push(observable);
        }
    };
    MergeAllSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeAllSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeAllSubscriber = MergeAllSubscriber;

},{"../OuterSubscriber":552,"../util/subscribeToResult":576}],562:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var subscribeToResult_1 = require('../util/subscribeToResult');
var OuterSubscriber_1 = require('../OuterSubscriber');
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
        resultSelector = null;
    }
    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));
}
exports.mergeMap = mergeMap;
var MergeMapOperator = (function () {
    function MergeMapOperator(project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source._subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));
    };
    return MergeMapOperator;
}());
exports.MergeMapOperator = MergeMapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapSubscriber = (function (_super) {
    __extends(MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapSubscriber = MergeMapSubscriber;

},{"../OuterSubscriber":552,"../util/subscribeToResult":576}],563:[function(require,module,exports){
"use strict";
var ArrayObservable_1 = require('../observable/ArrayObservable');
var ScalarObservable_1 = require('../observable/ScalarObservable');
var EmptyObservable_1 = require('../observable/EmptyObservable');
var concat_1 = require('./concat');
var isScheduler_1 = require('../util/isScheduler');
/**
 * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the
 * source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.
 * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */
function startWith() {
    var array = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        array[_i - 0] = arguments[_i];
    }
    var scheduler = array[array.length - 1];
    if (isScheduler_1.isScheduler(scheduler)) {
        array.pop();
    }
    else {
        scheduler = null;
    }
    var len = array.length;
    if (len === 1) {
        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);
    }
    else if (len > 1) {
        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);
    }
    else {
        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);
    }
}
exports.startWith = startWith;

},{"../observable/ArrayObservable":555,"../observable/EmptyObservable":556,"../observable/ScalarObservable":557,"../util/isScheduler":574,"./concat":558}],564:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = require('../OuterSubscriber');
var subscribeToResult_1 = require('../util/subscribeToResult');
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return this.lift(new SwitchMapOperator(project, resultSelector));
}
exports.switchMap = switchMap;
var SwitchMapOperator = (function () {
    function SwitchMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapSubscriber = (function (_super) {
    __extends(SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.isUnsubscribed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return SwitchMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));

},{"../OuterSubscriber":552,"../util/subscribeToResult":576}],565:[function(require,module,exports){
"use strict";
var root_1 = require('../util/root');
var Symbol = root_1.root.Symbol;
if (typeof Symbol === 'function') {
    if (Symbol.iterator) {
        exports.$$iterator = Symbol.iterator;
    }
    else if (typeof Symbol.for === 'function') {
        exports.$$iterator = Symbol.for('iterator');
    }
}
else {
    if (root_1.root.Set && typeof new root_1.root.Set()['@@iterator'] === 'function') {
        // Bug for mozilla version
        exports.$$iterator = '@@iterator';
    }
    else if (root_1.root.Map) {
        // es6-shim specific logic
        var keys = Object.getOwnPropertyNames(root_1.root.Map.prototype);
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (key !== 'entries' && key !== 'size' && root_1.root.Map.prototype[key] === root_1.root.Map.prototype['entries']) {
                exports.$$iterator = key;
                break;
            }
        }
    }
    else {
        exports.$$iterator = '@@iterator';
    }
}

},{"../util/root":575}],566:[function(require,module,exports){
"use strict";
/// <reference path="./symbol.d.ts" />
var root_1 = require('../util/root');
var Symbol = root_1.root.Symbol;
if (typeof Symbol === 'function') {
    if (Symbol.observable) {
        exports.$$observable = Symbol.observable;
    }
    else {
        if (typeof Symbol.for === 'function') {
            exports.$$observable = Symbol.for('observable');
        }
        else {
            exports.$$observable = Symbol('observable');
        }
        Symbol.observable = exports.$$observable;
    }
}
else {
    exports.$$observable = '@@observable';
}

},{"../util/root":575}],567:[function(require,module,exports){
"use strict";
var root_1 = require('../util/root');
var Symbol = root_1.root.Symbol;
exports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?
    Symbol.for('rxSubscriber') : '@@rxSubscriber';

},{"../util/root":575}],568:[function(require,module,exports){
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */
var EmptyError = (function (_super) {
    __extends(EmptyError, _super);
    function EmptyError() {
        _super.call(this, 'no elements in sequence');
        this.name = 'EmptyError';
    }
    return EmptyError;
}(Error));
exports.EmptyError = EmptyError;

},{}],569:[function(require,module,exports){
"use strict";
// typeof any so that it we don't have to cast when comparing a result to the error object
exports.errorObject = { e: {} };

},{}],570:[function(require,module,exports){
"use strict";
exports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });

},{}],571:[function(require,module,exports){
"use strict";
function isFunction(x) {
    return typeof x === 'function';
}
exports.isFunction = isFunction;

},{}],572:[function(require,module,exports){
"use strict";
function isObject(x) {
    return x != null && typeof x === 'object';
}
exports.isObject = isObject;

},{}],573:[function(require,module,exports){
"use strict";
function isPromise(value) {
    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
exports.isPromise = isPromise;

},{}],574:[function(require,module,exports){
"use strict";
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
exports.isScheduler = isScheduler;

},{}],575:[function(require,module,exports){
(function (global){
"use strict";
var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
};
exports.root = (objectTypes[typeof self] && self) || (objectTypes[typeof window] && window);
/* tslint:disable:no-unused-variable */
var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;
var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
var freeGlobal = objectTypes[typeof global] && global;
if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    exports.root = freeGlobal;
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],576:[function(require,module,exports){
"use strict";
var root_1 = require('./root');
var isArray_1 = require('./isArray');
var isPromise_1 = require('./isPromise');
var Observable_1 = require('../Observable');
var iterator_1 = require('../symbol/iterator');
var observable_1 = require('../symbol/observable');
var InnerSubscriber_1 = require('../InnerSubscriber');
function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);
    if (destination.isUnsubscribed) {
        return;
    }
    if (result instanceof Observable_1.Observable) {
        if (result._isScalar) {
            destination.next(result.value);
            destination.complete();
            return;
        }
        else {
            return result.subscribe(destination);
        }
    }
    if (isArray_1.isArray(result)) {
        for (var i = 0, len = result.length; i < len && !destination.isUnsubscribed; i++) {
            destination.next(result[i]);
        }
        if (!destination.isUnsubscribed) {
            destination.complete();
        }
    }
    else if (isPromise_1.isPromise(result)) {
        result.then(function (value) {
            if (!destination.isUnsubscribed) {
                destination.next(value);
                destination.complete();
            }
        }, function (err) { return destination.error(err); })
            .then(null, function (err) {
            // Escaping the Promise trap: globally throw unhandled errors
            root_1.root.setTimeout(function () { throw err; });
        });
        return destination;
    }
    else if (typeof result[iterator_1.$$iterator] === 'function') {
        for (var _i = 0, _a = result; _i < _a.length; _i++) {
            var item = _a[_i];
            destination.next(item);
            if (destination.isUnsubscribed) {
                break;
            }
        }
        if (!destination.isUnsubscribed) {
            destination.complete();
        }
    }
    else if (typeof result[observable_1.$$observable] === 'function') {
        var obs = result[observable_1.$$observable]();
        if (typeof obs.subscribe !== 'function') {
            destination.error('invalid observable');
        }
        else {
            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));
        }
    }
    else {
        destination.error(new TypeError('unknown type returned'));
    }
}
exports.subscribeToResult = subscribeToResult;

},{"../InnerSubscriber":549,"../Observable":550,"../symbol/iterator":565,"../symbol/observable":566,"./isArray":570,"./isPromise":573,"./root":575}],577:[function(require,module,exports){
"use strict";
var Subscriber_1 = require('../Subscriber');
var rxSubscriber_1 = require('../symbol/rxSubscriber');
function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver && typeof nextOrObserver === 'object') {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
            return nextOrObserver;
        }
        else if (typeof nextOrObserver[rxSubscriber_1.$$rxSubscriber] === 'function') {
            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();
        }
    }
    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
}
exports.toSubscriber = toSubscriber;

},{"../Subscriber":553,"../symbol/rxSubscriber":567}],578:[function(require,module,exports){
"use strict";
var errorObject_1 = require('./errorObject');
var tryCatchTarget;
function tryCatcher() {
    try {
        return tryCatchTarget.apply(this, arguments);
    }
    catch (e) {
        errorObject_1.errorObject.e = e;
        return errorObject_1.errorObject;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}
exports.tryCatch = tryCatch;
;

},{"./errorObject":569}],579:[function(require,module,exports){
module.exports = function split (input, strOrRegex) {
  var results = []

  if (strOrRegex instanceof RegExp) {
    var regex = new RegExp(strOrRegex.toString().slice(1, -1), 'g')
    var oldIndex = 0
    var match
    while ((match = regex.exec(input))) {
      results.push(input.substring(oldIndex, match.index))
      results.push(match[0])
      if (match.index === regex.lastIndex) throw new Error('No zero-width captures allowed')
      oldIndex = match.index + match[0].length
    }
    results.push(input.substring(oldIndex))
  } else {
    var splits = input.split(strOrRegex)
    var item
    for (var i = 0, l = splits.length; i < l - 1; i++) {
      item = splits[i]
      results.push(item)
      results.push(strOrRegex)
    }
    results.push(splits[splits.length - 1])
  }

  return results
}

},{}],580:[function(require,module,exports){
module.exports = require("./zen-observable.js").Observable;

},{"./zen-observable.js":581}],581:[function(require,module,exports){
(function (process,global){
/*=esdown=*/(function(fn, name) { if (typeof exports !== 'undefined') fn(exports, module); else if (typeof self !== 'undefined') fn(name === '*' ? self : (name ? self[name] = {} : {})); })(function(exports, module) { 'use strict'; // === Job Queueing ===
var enqueueJob = (function(_) {

    // Node
    if (typeof global !== "undefined" &&
        typeof process !== "undefined" &&
        process.nextTick) {

        return global.setImmediate ?
            function(fn) { return void global.setImmediate(fn); } :
            function(fn) { return void process.nextTick(fn); };
    }

    // Browsers
    return function(fn) { return void Promise.resolve().then(function(_) {
        try { fn() }
        catch (e) { setTimeout(function(_) { throw e }, 0) }
    }); };

})();

// === Symbol Support ===

function hasSymbol(name) {

    return typeof Symbol === "function" && Boolean(Symbol[name]);
}

function getSymbol(name) {

    return hasSymbol(name) ? Symbol[name] : "@@" + name;
}

// === Abstract Operations ===

function getMethod(obj, key) {

    var value = obj[key];

    if (value == null)
        return undefined;

    if (typeof value !== "function")
        throw new TypeError(value + " is not a function");

    return value;
}

function getSpecies(ctor) {

    var symbol = getSymbol("species");
    return symbol ? ctor[symbol] : ctor;
}

function addMethods(target, methods) {

    Object.keys(methods).forEach(function(k) {

        var desc = Object.getOwnPropertyDescriptor(methods, k);
        desc.enumerable = false;
        Object.defineProperty(target, k, desc);
    });
}

function cleanupSubscription(subscription) {

    // Assert:  observer._observer is undefined

    var cleanup = subscription._cleanup;

    if (!cleanup)
        return;

    // Drop the reference to the cleanup function so that we won't call it
    // more than once
    subscription._cleanup = undefined;

    // Call the cleanup function
    cleanup();
}

function subscriptionClosed(subscription) {

    return subscription._observer === undefined;
}

function closeSubscription(subscription) {

    if (subscriptionClosed(subscription))
        return;

    subscription._observer = undefined;
    cleanupSubscription(subscription);
}

function cleanupFromSubscription(subscription) {
    return function(_) { subscription.unsubscribe() };
}

function Subscription(observer, subscriber) {

    // Assert: subscriber is callable

    // The observer must be an object
    if (Object(observer) !== observer)
        throw new TypeError("Observer must be an object");

    this._cleanup = undefined;
    this._observer = observer;

    observer = new SubscriptionObserver(this);

    try {

        // Call the subscriber function
        var cleanup$0 = subscriber.call(undefined, observer);

        // The return value must be undefined, null, a subscription object, or a function
        if (cleanup$0 != null) {

            if (typeof cleanup$0.unsubscribe === "function")
                cleanup$0 = cleanupFromSubscription(cleanup$0);
            else if (typeof cleanup$0 !== "function")
                throw new TypeError(cleanup$0 + " is not a function");

            this._cleanup = cleanup$0;
        }

    } catch (e) {

        // If an error occurs during startup, then attempt to send the error
        // to the observer
        observer.error(e);
        return;
    }

    // If the stream is already finished, then perform cleanup
    if (subscriptionClosed(this))
        cleanupSubscription(this);
}

addMethods(Subscription.prototype = {}, {
    unsubscribe: function() { closeSubscription(this) }
});

function SubscriptionObserver(subscription) {
    this._subscription = subscription;
}

addMethods(SubscriptionObserver.prototype = {}, {

    next: function(value) {

        var subscription = this._subscription;

        // If the stream if closed, then return undefined
        if (subscriptionClosed(subscription))
            return undefined;

        var observer = subscription._observer;

        try {

            var m$0 = getMethod(observer, "next");

            // If the observer doesn't support "next", then return undefined
            if (!m$0)
                return undefined;

            // Send the next value to the sink
            return m$0.call(observer, value);

        } catch (e) {

            // If the observer throws, then close the stream and rethrow the error
            try { closeSubscription(subscription) }
            finally { throw e }
        }
    },

    error: function(value) {

        var subscription = this._subscription;

        // If the stream is closed, throw the error to the caller
        if (subscriptionClosed(subscription))
            throw value;

        var observer = subscription._observer;
        subscription._observer = undefined;

        try {

            var m$1 = getMethod(observer, "error");

            // If the sink does not support "error", then throw the error to the caller
            if (!m$1)
                throw value;

            value = m$1.call(observer, value);

        } catch (e) {

            try { cleanupSubscription(subscription) }
            finally { throw e }
        }

        cleanupSubscription(subscription);
        return value;
    },

    complete: function(value) {

        var subscription = this._subscription;

        // If the stream is closed, then return undefined
        if (subscriptionClosed(subscription))
            return undefined;

        var observer = subscription._observer;
        subscription._observer = undefined;

        try {

            var m$2 = getMethod(observer, "complete");

            // If the sink does not support "complete", then return undefined
            value = m$2 ? m$2.call(observer, value) : undefined;

        } catch (e) {

            try { cleanupSubscription(subscription) }
            finally { throw e }
        }

        cleanupSubscription(subscription);
        return value;
    },

});

function Observable(subscriber) {

    // The stream subscriber must be a function
    if (typeof subscriber !== "function")
        throw new TypeError("Observable initializer must be a function");

    this._subscriber = subscriber;
}

addMethods(Observable.prototype, {

    subscribe: function(observer) {

        return new Subscription(observer, this._subscriber);
    },

    forEach: function(fn) { var __this = this; 

        return new Promise(function(resolve, reject) {

            if (typeof fn !== "function")
                throw new TypeError(fn + " is not a function");

            var subscription = __this.subscribe({

                next: function(value) {

                    try {

                        return fn(value);

                    } catch (e) {

                        reject(e);
                        subscription.unsubscribe();
                    }
                },

                error: reject,
                complete: resolve,
            });
        });
    },

    map: function(fn) { var __this = this; 

        if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");

        var C = getSpecies(this.constructor);

        return new C(function(observer) { return __this.subscribe({

            next: function(value) {

                try { value = fn(value) }
                catch (e) { return observer.error(e) }

                return observer.next(value);
            },

            error: function(e) { return observer.error(e) },
            complete: function() { return observer.complete() },
        }); });
    },

    filter: function(fn) { var __this = this; 

        if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");

        var C = getSpecies(this.constructor);

        return new C(function(observer) { return __this.subscribe({

            next: function(value) {

                try { if (!fn(value)) return undefined; }
                catch (e) { return observer.error(e) }

                return observer.next(value);
            },

            error: function(e) { return observer.error(e) },
            complete: function() { return observer.complete() },
        }); });
    },

    reduce: function(fn) { var __this = this; 

        if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");

        var C = getSpecies(this.constructor),
            hasSeed = arguments.length > 1,
            hasValue = false,
            seed = arguments[1],
            acc = seed;

        return new C(function(observer) { return __this.subscribe({

            next: function(value) {

                var first = !hasValue;
                hasValue = true;

                if (!first || hasSeed) {

                    try { acc = fn(acc, value) }
                    catch (e) { return observer.error(e) }

                } else {

                    acc = value;
                }
            },

            error: function(e) { return observer.error(e) },

            complete: function() {

                if (!hasValue && !hasSeed)
                    observer.error(new TypeError("Cannot reduce an empty sequence"));

                observer.next(acc);
                observer.complete();
            },

        }); });
    },

    flatMap: function(fn) { var __this = this; 

        if (typeof fn !== "function")
            throw new TypeError(fn + " is not a function");

        var C = getSpecies(this.constructor);

        return new C(function(observer) {

            var completed = false,
                subscriptions = [];

            // Subscribe to the outer Observable
            var outer = __this.subscribe({

                next: function(value) {

                    if (fn) {

                        try {

                            value = fn(value);

                        } catch (x) {

                            observer.error(x);
                            return;
                        }
                    }

                    // Subscribe to the inner Observable
                    var subscription = Observable.from(value).subscribe({

                        next: function(value) { observer.next(value) },
                        error: function(e) { observer.error(e) },
                        complete: function() {

                            var i = subscriptions.indexOf(subscription);

                            if (i >= 0)
                                subscriptions.splice(i, 1);

                            closeIfDone();
                        }
                    });

                    subscriptions.push(subscription);
                },

                error: function(e) { return observer.error(e) },

                complete: function() {

                    completed = true;
                    closeIfDone();
                }
            });

            function closeIfDone() {

                if (completed && subscriptions.length === 0)
                    observer.complete();
            }

            return function(_) {

                subscriptions.forEach(function(s) { return s.unsubscribe(); });
                outer.unsubscribe();
            };
        });
    }

});

Object.defineProperty(Observable.prototype, getSymbol("observable"), {
    value: function() { return this },
    writable: true,
    configurable: true,
});

addMethods(Observable, {

    from: function(x) {

        var C = typeof this === "function" ? this : Observable;

        if (x == null)
            throw new TypeError(x + " is not an object");

        var method = getMethod(x, getSymbol("observable"));

        if (method) {

            var observable$0 = method.call(x);

            if (Object(observable$0) !== observable$0)
                throw new TypeError(observable$0 + " is not an object");

            if (observable$0.constructor === C)
                return observable$0;

            return new C(function(observer) { return observable$0.subscribe(observer); });
        }

        return new C(function(observer) {

            var done = false;

            enqueueJob(function(_) {

                if (done)
                    return;

                // Assume that the object is iterable.  If not, then the observer
                // will receive an error.
                try {

                    if (hasSymbol("iterator")) {

                        for (var __$0 = (x)[Symbol.iterator](), __$1; __$1 = __$0.next(), !__$1.done;) { var item$0 = __$1.value; 

                            observer.next(item$0);

                            if (done)
                                return;
                        }

                    } else {

                        if (!Array.isArray(x))
                            throw new Error(x + " is not an Array");

                        for (var i$0 = 0; i$0 < x.length; ++i$0) {

                            observer.next(x[i$0]);

                            if (done)
                                return;
                        }
                    }

                } catch (e) {

                    // If observer.next throws an error, then the subscription will
                    // be closed and the error method will simply rethrow
                    observer.error(e);
                    return;
                }

                observer.complete();
            });

            return function(_) { done = true };
        });
    },

    of: function() { for (var items = [], __$0 = 0; __$0 < arguments.length; ++__$0) items.push(arguments[__$0]); 

        var C = typeof this === "function" ? this : Observable;

        return new C(function(observer) {

            var done = false;

            enqueueJob(function(_) {

                if (done)
                    return;

                for (var i$1 = 0; i$1 < items.length; ++i$1) {

                    observer.next(items[i$1]);

                    if (done)
                        return;
                }

                observer.complete();
            });

            return function(_) { done = true };
        });
    },

});

Object.defineProperty(Observable, getSymbol("species"), {
    get: function() { return this },
    configurable: true,
});

exports.Observable = Observable;


}, "*");
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":9}]},{},[6]);
